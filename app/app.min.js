Ext.define("Ext.ux.SlidingPager",{requires:["Ext.slider.Single","Ext.slider.Tip"],constructor:function(a){a&&Ext.apply(this,a)},init:function(a){var b,c=a.items.indexOf(a.child("#inputItem"));Ext.each(a.items.getRange(c-2,c+2),function(a){a.hide()}),b=Ext.create("Ext.slider.Single",{width:114,minValue:1,maxValue:1,hideLabel:!0,tipText:function(a){return Ext.String.format("Page <b>{0}</b> of <b>{1}</b>",a.value,a.slider.maxValue)},listeners:{changecomplete:function(b,c){a.store.loadPage(c)}}}),a.insert(c+1,b),a.on({change:function(a,c){b.setMaxValue(c?c.pageCount:1),b.setValue(c?c.currentPage:1)}})}}),Ext.define("Ext.ux.PreviewPlugin",{extend:"Ext.AbstractPlugin",alias:"plugin.preview",requires:["Ext.grid.feature.RowBody","Ext.grid.feature.RowWrap"],hideBodyCls:"x-grid-row-body-hidden",bodyField:"",previewExpanded:!0,setCmp:function(a){this.callParent(arguments);var b=this.bodyField,c=this.hideBodyCls,d=[{ftype:"rowbody",getAdditionalData:function(d){var e=Ext.grid.feature.RowBody.prototype.getAdditionalData,f={rowBody:d[b],rowBodyCls:a.previewExpanded?"":c};return e&&Ext.apply(f,e.apply(this,arguments)),f}},{ftype:"rowwrap"}];a.previewExpanded=this.previewExpanded,a.features||(a.features=[]),a.features=d.concat(a.features)},toggleExpanded:function(a){var b=this.getCmp();this.previewExpanded=b.previewExpanded=a,b.refresh()}}),Ext.define("Ext.ux.form.SearchField",{extend:"Ext.form.field.Trigger",alias:"widget.searchfield",trigger1Cls:Ext.baseCSSPrefix+"form-clear-trigger",trigger2Cls:Ext.baseCSSPrefix+"form-search-trigger",hasSearch:!1,paramName:"query",initComponent:function(){var a=this;a.callParent(arguments),a.on("specialkey",function(b,c){c.getKey()==c.ENTER&&a.onTrigger2Click()}),a.store.remoteFilter=!0,a.store.proxy.hasOwnProperty("filterParam")||(a.store.proxy.filterParam=a.paramName),a.store.proxy.encodeFilters=function(a){return a[0].value}},afterRender:function(){this.callParent(),this.triggerCell.item(0).setDisplayed(!1)},onTrigger1Click:function(){var a=this;a.hasSearch&&(a.setValue(""),a.store.clearFilter(),a.hasSearch=!1,a.triggerCell.item(0).setDisplayed(!1),a.updateLayout())},onTrigger2Click:function(){var a=this,b=a.getValue();b.length>0&&(a.store.filter({id:a.paramName,property:a.paramName,value:b}),a.hasSearch=!0,a.triggerCell.item(0).setDisplayed(!0),a.updateLayout())}}),Ext.define("Ext.ux.statusbar.StatusBar",{extend:"Ext.toolbar.Toolbar",alternateClassName:"Ext.ux.StatusBar",alias:"widget.statusbar",requires:["Ext.toolbar.TextItem"],cls:"x-statusbar",busyIconCls:"x-status-busy",busyText:"Loading...",autoClear:5e3,emptyText:"&#160;",activeThreadId:0,initComponent:function(){var a="right"===this.statusAlign;this.callParent(arguments),this.currIconCls=this.iconCls||this.defaultIconCls,this.statusEl=Ext.create("Ext.toolbar.TextItem",{cls:"x-status-text "+(this.currIconCls||""),text:this.text||this.defaultText||""}),a?(this.cls+=" x-status-right",this.add("->"),this.add(this.statusEl)):(this.insert(0,this.statusEl),this.insert(1,"->"))},setStatus:function(a){var b=this;if(a=a||{},Ext.suspendLayouts(),Ext.isString(a)&&(a={text:a}),void 0!==a.text&&b.setText(a.text),void 0!==a.iconCls&&b.setIcon(a.iconCls),a.clear){var c=a.clear,d=b.autoClear,e={useDefaults:!0,anim:!0};Ext.isObject(c)?(c=Ext.applyIf(c,e),c.wait&&(d=c.wait)):Ext.isNumber(c)?(d=c,c=e):Ext.isBoolean(c)&&(c=e),c.threadId=this.activeThreadId,Ext.defer(b.clearStatus,d,b,[c])}return Ext.resumeLayouts(!0),b},clearStatus:function(a){a=a||{};var b=this,c=b.statusEl;if(a.threadId&&a.threadId!==b.activeThreadId)return b;var d=a.useDefaults?b.defaultText:b.emptyText,e=a.useDefaults&&b.defaultIconCls?b.defaultIconCls:"";return a.anim?c.el.puff({remove:!1,useDisplay:!0,callback:function(){c.el.show(),b.setStatus({text:d,iconCls:e})}}):b.setStatus({text:d,iconCls:e}),b},setText:function(a){var b=this;return b.activeThreadId++,b.text=a||"",b.rendered&&b.statusEl.setText(b.text),b},getText:function(){return this.text},setIcon:function(a){var b=this;return b.activeThreadId++,a=a||"",b.rendered?(b.currIconCls&&(b.statusEl.removeCls(b.currIconCls),b.currIconCls=null),a.length>0&&(b.statusEl.addCls(a),b.currIconCls=a)):b.currIconCls=a,b},showBusy:function(a){return Ext.isString(a)&&(a={text:a}),a=Ext.applyIf(a||{},{text:this.busyText,iconCls:this.busyIconCls}),this.setStatus(a)}}),Ext.define("Ext.ux.LiveSearchGridPanel",{extend:"Ext.grid.Panel",requires:["Ext.toolbar.TextItem","Ext.form.field.Checkbox","Ext.form.field.Text","Ext.ux.statusbar.StatusBar"],searchValue:null,indexes:[],currentIndex:null,searchRegExp:null,caseSensitive:!1,regExpMode:!1,matchCls:"x-livesearch-match",defaultStatusText:"Nothing Found",initComponent:function(){var a=this;a.tbar=["Search",{xtype:"textfield",name:"searchField",hideLabel:!0,width:200,listeners:{change:{fn:a.onTextFieldChange,scope:this,buffer:100}}},{xtype:"button",text:"&lt;",tooltip:"Find Previous Row",handler:a.onPreviousClick,scope:a},{xtype:"button",text:"&gt;",tooltip:"Find Next Row",handler:a.onNextClick,scope:a},"-",{xtype:"checkbox",hideLabel:!0,margin:"0 0 0 4px",handler:a.regExpToggle,scope:a},"Regular expression",{xtype:"checkbox",hideLabel:!0,margin:"0 0 0 4px",handler:a.caseSensitiveToggle,scope:a},"Case sensitive"],a.bbar=Ext.create("Ext.ux.StatusBar",{defaultText:a.defaultStatusText,name:"searchStatusBar"}),a.callParent(arguments)},afterRender:function(){var a=this;a.callParent(arguments),a.textField=a.down("textfield[name=searchField]"),a.statusBar=a.down("statusbar[name=searchStatusBar]")},tagsRe:/<[^>]*>/gm,tagsProtect:"",regExpProtect:/\\|\/|\+|\\|\.|\[|\]|\{|\}|\?|\$|\*|\^|\|/gm,getSearchValue:function(){var a=this,b=a.textField.getValue();if(""===b)return null;if(a.regExpMode){try{new RegExp(b)}catch(c){return a.statusBar.setStatus({text:c.message,iconCls:"x-status-error"}),null}if("^"===b||"$"===b)return null}else b=b.replace(a.regExpProtect,function(a){return"\\"+a});return b},onTextFieldChange:function(){var a=this,b=0;a.view.refresh(),a.statusBar.setStatus({text:a.defaultStatusText,iconCls:""}),a.searchValue=a.getSearchValue(),a.indexes=[],a.currentIndex=null,null!==a.searchValue&&(a.searchRegExp=new RegExp(a.searchValue,"g"+(a.caseSensitive?"":"i")),a.store.each(function(c,d){for(var e,f,g,h=Ext.fly(a.view.getNode(d)).down("td");h;)e=h.down(".x-grid-cell-inner"),f=e.dom.innerHTML.match(a.tagsRe),g=e.dom.innerHTML.replace(a.tagsRe,a.tagsProtect),g=g.replace(a.searchRegExp,function(c){return b+=1,-1===Ext.Array.indexOf(a.indexes,d)&&a.indexes.push(d),null===a.currentIndex&&(a.currentIndex=d),'<span class="'+a.matchCls+'">'+c+"</span>"}),Ext.each(f,function(b){g=g.replace(a.tagsProtect,b)}),e.dom.innerHTML=g,h=h.next()},a),null!==a.currentIndex&&(a.getSelectionModel().select(a.currentIndex),a.statusBar.setStatus({text:b+" matche(s) found.",iconCls:"x-status-valid"}))),null===a.currentIndex&&a.getSelectionModel().deselectAll(),a.textField.focus()},onPreviousClick:function(){var a,b=this;-1!==(a=Ext.Array.indexOf(b.indexes,b.currentIndex))&&(b.currentIndex=b.indexes[a-1]||b.indexes[b.indexes.length-1],b.getSelectionModel().select(b.currentIndex))},onNextClick:function(){var a,b=this;-1!==(a=Ext.Array.indexOf(b.indexes,b.currentIndex))&&(b.currentIndex=b.indexes[a+1]||b.indexes[0],b.getSelectionModel().select(b.currentIndex))},caseSensitiveToggle:function(a,b){this.caseSensitive=b,this.onTextFieldChange()},regExpToggle:function(a,b){this.regExpMode=b,this.onTextFieldChange()}}),Ext.define("Ext.ux.IFrame",{extend:"Ext.Component",alias:"widget.uxiframe",loadMask:"Loading...",src:"about:blank",renderTpl:['<iframe src="{src}" name="{frameName}" width="100%" height="100%" frameborder="0"></iframe>'],initComponent:function(){this.callParent(),this.frameName=this.frameName||this.id+"-frame",this.addEvents("beforeload","load"),Ext.apply(this.renderSelectors,{iframeEl:"iframe"})},initEvents:function(){var a=this;a.callParent(),a.iframeEl.on("load",a.onLoad,a)},initRenderData:function(){return Ext.apply(this.callParent(),{src:this.src,frameName:this.frameName})},getBody:function(){var a=this.getDoc();return a.body||a.documentElement},getDoc:function(){try{return this.getWin().document}catch(a){return null}},getWin:function(){var a=this,b=a.frameName,c=Ext.isIE?a.iframeEl.dom.contentWindow:window.frames[b];return c},getFrame:function(){var a=this;return a.iframeEl.dom},beforeDestroy:function(){this.cleanupListeners(!0),this.callParent()},cleanupListeners:function(a){var b,c;if(this.rendered)try{if(b=this.getDoc(),b&&(Ext.EventManager.removeAll(b),a))for(c in b)b.hasOwnProperty&&b.hasOwnProperty(c)&&delete b[c]}catch(d){}},onLoad:function(){var a=this,b=a.getDoc(),c=a.onRelayedEvent;if(b){try{Ext.EventManager.removeAll(b),Ext.EventManager.on(b,{mousedown:c,mousemove:c,mouseup:c,click:c,dblclick:c,scope:a})}catch(d){}Ext.EventManager.on(this.getWin(),"beforeunload",a.cleanupListeners,a),this.el.unmask(),this.fireEvent("load",this)}else a.src&&""!=a.src&&(this.el.unmask(),this.fireEvent("error",this))},onRelayedEvent:function(a){var b=this.iframeEl,c=Ext.Element.getTrueXY(b),d=a.getXY(),e=Ext.EventManager.getPageXY(a.browserEvent);a.xy=[c[0]+e[0],c[1]+e[1]],a.injectEvent(b),a.xy=d},load:function(a){var b=this,c=b.loadMask,d=b.getFrame();b.fireEvent("beforeload",b,a)!==!1&&(c&&b.el&&b.el.mask(c),d.src=b.src=a||b.src)}}),Ext.define("Ext.ux.DataTip",function(){function a(){var a=this.isXType("panel")?this.body:this.el;this.dataTip.renderToTarget&&this.dataTip.render(a),this.dataTip.setTarget(a)}function b(a,b){if(a.rendered){if(a.host.fireEvent("beforeshowtip",a.eventHost,a,b)===!1)return!1;a.update(b)}else Ext.isString(b)?a.html=b:a.data=b}function c(a){var c,d=this.view.getRecord(a.triggerElement);return d?(c=a.initialConfig.data?Ext.apply(a.initialConfig.data,d.data):d.data,b(a,c)):!1}function d(a){var c=Ext.getCmp(a.triggerElement.id);return c&&(c.tooltip||a.tpl)?b(a,c.tooltip||c):!1}return{extend:"Ext.tip.ToolTip",mixins:{plugin:"Ext.AbstractPlugin"},alias:"plugin.datatip",lockableScope:"both",constructor:function(a){var b=this;b.callParent([a]),b.mixins.plugin.constructor.call(b,a)},init:function(b){var e=this;e.mixins.plugin.init.call(e,b),b.dataTip=e,e.host=b,b.isXType("tablepanel")?(e.view=b.getView(),b.ownerLockable&&(e.host=b.ownerLockable),e.delegate=e.delegate||e.view.getDataRowSelector(),e.on("beforeshow",c)):b.isXType("dataview")?(e.view=e.host,e.delegate=e.delegate||b.itemSelector,e.on("beforeshow",c)):b.isXType("form")?(e.delegate="."+Ext.form.Labelable.prototype.formItemCls,e.on("beforeshow",d)):b.isXType("combobox")&&(e.view=b.getPicker(),e.delegate=e.delegate||e.view.getItemSelector(),e.on("beforeshow",c)),b.rendered?a.call(b):b.onRender=Ext.Function.createSequence(b.onRender,a)}}}),Ext.define("App.ux.RatingField",{extend:"Ext.form.field.Number",alias:"widget.ratingField",componentCls:"x-form-rating",ratingClassReset:"ux-rating-reset",starCls:"ux-rating-star",margin:"4 10",numberOfStars:5,minValue:0,maxValue:5,split:1,canReset:!0,resetPosition:"right",emptyText:"",keyNavEnabled:!0,initComponent:function(){var a=this;Ext.applyIf(a,{maxValue:5,minValue:0,split:1,numberOfStars:5,titles:{}});{var b,c,d,e,f,g=[],h=a.split,i=16/h,j=a.numberOfStars,k=j*h-1,l=a.minValue;a.maxValue}for(c in a.titles)g.push({val:1*c,title:a.titles[c]});for(b=!!g.length,Ext.Array.sort(g,function(a,b){return a.val>b.val}),a.stars=[],a.values=[],a.titles=[],a.starWidth=i,a.value||(a.value=l),f=0;k>=f;f++)d=f+1,b?(g.length&&g[1].val<=d&&(g=g.slice(1)),e=g[0].title):e=d,a.stars.push({key:d,title:e,margin:f%h*i}),a.values.push(d),a.titles.push(e);a.msgTarget="side",a.starClsOn=a.starCls+"-on",a.starClsHover=a.starCls+"-hover",a.starClsFocus=a.starCls+"-focus",a.callParent()},setValue:function(val){var me=this;me.callParent(arguments),me.afterSetValue(eval(val))},afterSetValue:function(a){var b=this;if(b.rendered){var c=b.getValueIndex(a);-1===c?(b.canReset&&b.resetEl.setOpacity(.5),b.fillNone(),b.selected=-1):c!==b.selected&&(b.canReset&&b.resetEl.setOpacity(.99),b.selected=c,b.fillTo(c,!1))}},getValueIndex:function(a){var b=this;if(a==b.emptyText||!Ext.isDefined(a)||a>b.maxValue||a<b.minValue)return-1;var c=b.values.indexOf(a);return c>-1?c:Ext.each(b.values,function(b){return b>=a?!1:void 0})},addFocusListener:function(){var a=this;a.focusListenerAdded||(a.focusEl.on({focus:a.onFocus,blur:a.onBlur,scope:a}),a.focusListenerAdded=!0)},onFocus:function(){var a=this;a.isReactive()&&a.bodyEl.addCls(a.starClsFocus)},onBlur:function(){var a=this;a.bodyEl.removeCls(a.starClsFocus)},afterRender:function(){var a=this,b="right"==a.resetPosition,c='<div class="reset-el '+a.ratingClassReset+'" title="reset" style="margin-'+(b?"left":"right")+':5px;"></div>';a.callParent();var d=new Ext.XTemplate('<div class="ux-rating-container ux-rating-clearfix" tabIndex="'+a.tabIndex+'">',b?"":c,'<tpl for=".">','<div key="{key}" class="',a.starCls,'" style="width: ',a.starWidth,'px;">','<a title="{title}" style="margin-left: -{margin}px;">{key}</a>',"</div>","</tpl>",'<input type="hidden" name="',a.getName(),'" class="input-el" tabIndex="'+a.tabIndex+'"></hidden>',b?c:"",'<a class="focus-el" tabIndex="0"></a>',"</div>",{compiled:!0});a.stars=d.overwrite(a.bodyEl,a.stars,!0).query("."+a.starCls),a.focusEl=Ext.get(Ext.query("a.focus-el",a.bodyEl.dom[0])),a.inputEl=Ext.get(Ext.query("input.input-el",a.bodyEl.dom)[0]),a.resetEl=Ext.get(Ext.query("div.reset-el",a.bodyEl.dom)[0])},initEvents:function(){var a=this;a.callParent(arguments),a.bodyEl.on({click:a.onStarClick,mouseover:a.onStarOver,mouseout:a.onStarOut,scope:a,delegate:"div.ux-rating-star"}),a.canReset&&(a.resetEl.visibilityMode=Ext.Element.DISPLAY,a.resetEl.hover(function(){a.isReactive()&&a.getValue()>0&&Ext.fly(this).addCls("ux-rating-reset-hover")},function(){a.isReactive()&&Ext.fly(this).removeCls("ux-rating-reset-hover")}),a.resetEl.on("click",a.reset,a)),a.keyNavEnabled&&(a.spinnerKeyNav=new Ext.util.KeyNav(a.focusEl,{scope:a,up:a.spinUp,down:a.spinDown,right:a.spinUp,left:a.spinDown,space:a.reset,del:a.reset})),a.setValue(a.value)},reset:function(){this.isReactive()&&this.getValue()>0&&(this.setValue(0),this.fireEvent("click",this,0))},isReactive:function(){return!this.readOnly&&!this.disabled},onStarClick:function(a,b){var c,d=this;d.isReactive()&&(c=d.values[d.stars.indexOf(b)],d.setValue(c),d.fireEvent("click",d,c))},onStarOver:function(a,b){this.isReactive()&&this.fillTo(this.stars.indexOf(b),!0)},onStarOut:function(){this.isReactive()&&this.fillTo(this.selected)},fillTo:function(a,b){var c=this;if(-1!=a){var d=b?c.starClsHover:c.starClsOn,e=b?c.starClsOn:c.starClsHover;Ext.each(c.stars.slice(0,a+1),function(){Ext.fly(this).removeCls(e).addCls(d)}),Ext.each(c.stars.slice(a+1),function(){Ext.fly(this).removeCls([e,d])})}else c.fillNone()},fillNone:function(){this.bodyEl.select(".ux-rating-star").removeCls(["ux-rating-star-hover","ux-rating-star-on"])}}),Ext.define("App.ux.grid.LiveSearchGridPanel",{extend:"Ext.grid.Panel",xtype:"gridlivesearch",requires:["Ext.toolbar.TextItem","Ext.form.field.Checkbox","Ext.form.field.Text","Ext.ux.statusbar.StatusBar"],searchValue:null,indexes:[],currentIndex:null,searchRegExp:null,caseSensitive:!1,regExpMode:!1,matchCls:"x-livesearch-match",defaultStatusText:"Nothing Found",initComponent:function(){var a=this;a.callParent(arguments),a.addDocked({xtype:"toolbar",dock:"top",items:[_("search"),{xtype:"textfield",name:"searchField",hideLabel:!0,width:200,listeners:{change:{fn:a.onTextFieldChange,scope:this,buffer:100}}},"-",{xtype:"button",text:"&lt;",tooltip:"Find Previous Row",handler:a.onPreviousClick,scope:a},{xtype:"button",text:"&gt;",tooltip:"Find Next Row",handler:a.onNextClick,scope:a},"-","->","-",{xtype:"tbtext",text:a.defaultStatusText,action:"searchStatus",scope:a}]})},afterRender:function(){var a=this;a.callParent(arguments),a.textField=a.down("textfield[name=searchField]"),a.statusBar=a.down("tbtext[action=searchStatus]")},tagsRe:/<[^>]*>/gm,tagsProtect:"",regExpProtect:/\\|\/|\+|\\|\.|\[|\]|\{|\}|\?|\$|\*|\^|\|/gm,getSearchValue:function(){var a=this,b=a.textField.getValue();if(""===b)return null;if(a.regExpMode){try{new RegExp(b)}catch(c){return a.statusBar.setText(c.message),null}if("^"===b||"$"===b)return null}else b=b.replace(a.regExpProtect,function(a){return"\\"+a});return b},onTextFieldChange:function(){var a=this,b=0;a.view.refresh(),a.statusBar.setText(a.defaultStatusText),a.searchValue=a.getSearchValue(),a.indexes=[],a.currentIndex=null,null!==a.searchValue&&(a.searchRegExp=new RegExp(a.searchValue,"g"+(a.caseSensitive?"":"i")),a.store.each(function(c){for(var d,e,f,g,h=Ext.fly(a.view.getNode(c)).down("td");h;){if(g=!1,d=h.down(".x-grid-cell-inner"),e=d.dom.innerHTML.match(a.tagsRe),f=d.dom.innerHTML.replace(a.tagsRe,a.tagsProtect),e)for(var i=0;i<e.length;i++)if(-1!==e[i].indexOf("x-grid-row-checker")){g=!0;break}g||(f=f.replace(a.searchRegExp,function(d){return b+=1,-1===Ext.Array.indexOf(a.indexes,c)&&a.indexes.push(c),null===a.currentIndex&&(a.currentIndex=c),'<span class="'+a.matchCls+'">'+d+"</span>"}),Ext.each(e,function(b){f=f.replace(a.tagsProtect,b)}),d.dom.innerHTML=f),h=h.next()}},a),null!==a.currentIndex&&a.statusBar.setText(b+" matche(s) found.")),null===a.currentIndex,a.textField.focus()},onPreviousClick:function(){var a,b=this;-1!==(a=Ext.Array.indexOf(b.indexes,b.currentIndex))&&(b.currentIndex=b.indexes[a-1]||b.indexes[b.indexes.length-1],b.getSelectionModel().select(b.currentIndex))},onNextClick:function(){var a,b=this;-1!==(a=Ext.Array.indexOf(b.indexes,b.currentIndex))&&(b.currentIndex=b.indexes[a+1]||b.indexes[0],b.getSelectionModel().select(b.currentIndex))},caseSensitiveToggle:function(a,b){this.caseSensitive=b,this.onTextFieldChange()},regExpToggle:function(a,b){this.regExpMode=b,this.onTextFieldChange()}}),Ext.define("App.ux.grid.GridToHtml",{requires:"Ext.XTemplate",statics:{getHtml:function(a){var b=[];Ext.each(a.columns,function(a){a.items.length>0?b=b.concat(a.items.items):b.push(a)});var c=[];a.store.data.each(function(d,e){var f={};for(var g in d.data){var h=d.data[g];Ext.each(b,function(b,c){if(b&&b.dataIndex==g){var i={item:"",tdAttr:"",style:""};h=b.renderer?b.renderer.call(a,h,i,d,e,c,a.store,a.view):h;var j=Ext.String.createVarName(b.dataIndex);f[j]=h}else if(b&&"rownumberer"===b.xtype){var j=Ext.String.createVarName(b.id);f[j]=e+1}else if(b&&"templatecolumn"===b.xtype){h=b.tpl?b.tpl.apply(d.data):h;var j=Ext.String.createVarName(b.id);f[j]=h}},this)}c.push(f)});var d=[];Ext.each(b,function(a){!a||Ext.isEmpty(a.dataIndex)||a.hidden?a&&"rownumberer"===a.xtype?(a.text="Row",d.push(a)):a&&"templatecolumn"===a.xtype&&d.push(a):d.push(a)}),b=d,null===this.stylesheetPath&&(this.stylesheetPath=g("url")+"/resources/css/print.css");var e=Ext.create("Ext.XTemplate",this.headerTpl).apply(b),f=Ext.create("Ext.XTemplate",this.bodyTpl).apply(b),h="",i=[];Ext.each(a.plugins,function(a){"rowexpander"==a.ptype&&(h+=a.rowBodyTpl.join(""))}),""!=h&&(i=['<tr style="{[xindex % 2 === 0 ? "even" : "odd"]}">   <td style="{[xindex % 2 === 0 ? "background-color: #ffffff;" : "background-color: #f9f9f9;"]}" colspan="'+b.length+'">',h,"</td></tr>"]),a.title="undefined"==typeof a.title?"":" :: "+a.title;var j=['<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">','<html class="'+Ext.baseCSSPrefix+'ux-grid-printer">',"   <head>",'       <meta content="text/html; charset=UTF-8" http-equiv="Content-Type" />',"       <title>GaiaEHR :: Print"+a.title+"</title>","   </head>",'   <body class="'+Ext.baseCSSPrefix+'ux-grid-printer-body">',"       <h1>"+this.mainTitle+"</h1>","       <table>","           <tr>",e,"</tr>",'           <tpl for=".">','               <tr style="{[xindex % 2 === 0 ? "background-color: #ffffff;" : "background-color: #f9f9f9;"]}">',f,"</tr>",i.join(""),"           </tpl>","       </table>","   </body>","</html>"];return Ext.create("Ext.XTemplate",j).apply(c)},stylesheetPath:null,mainTitle:"",headerTpl:['<tpl for=".">','   <th style="background-color: #CCCCCC; padding: 5px; border-bottom-width: 1px; border-bottom-color: black">{text}</th>',"</tpl>"],bodyTpl:['<tpl for=".">','<tpl if="values.dataIndex">',"   <td>{{[Ext.String.createVarName(values.dataIndex)]}}</td>","   <tpl else>","       <td>{{[Ext.String.createVarName(values.id)]}}</td>","   </tpl>","</tpl>"]}}),Ext.define("App.ux.grid.Printer",{requires:"Ext.XTemplate",statics:{print:function(a){var b=[];Ext.each(a.columns,function(a){a.items.length>0?b=b.concat(a.items.items):b.push(a)});var c=[];a.store.data.each(function(d,e){var f={};for(var g in d.data){var h=d.data[g];Ext.each(b,function(b,c){if(b&&b.dataIndex==g){var i={item:"",tdAttr:"",style:""};h=b.renderer?b.renderer.call(a,h,i,d,e,c,a.store,a.view):h;var j=Ext.String.createVarName(b.dataIndex);f[j]=h}else if(b&&"rownumberer"===b.xtype){var j=Ext.String.createVarName(b.id);f[j]=e+1}else if(b&&"templatecolumn"===b.xtype){h=b.tpl?b.tpl.apply(d.data):h;var j=Ext.String.createVarName(b.id);f[j]=h}},this)}c.push(f)});var d=[];Ext.each(b,function(a){!a||Ext.isEmpty(a.dataIndex)||a.hidden?a&&"rownumberer"===a.xtype?(a.text="Row",d.push(a)):a&&"templatecolumn"===a.xtype&&d.push(a):d.push(a)}),b=d,null===this.stylesheetPath&&(this.stylesheetPath=g("url")+"/resources/css/print.css");var e=Ext.create("Ext.XTemplate",this.headerTpl).apply(b),f=Ext.create("Ext.XTemplate",this.bodyTpl).apply(b),h="",i=[];Ext.each(a.plugins,function(a){"rowexpander"==a.ptype&&(h+=a.rowBodyTpl.join(""))}),""!=h&&(i=['<tr class="{[xindex % 2 === 0 ? "even" : "odd"]}"><td colspan="'+b.length+'">',h,"</td></tr>"]),a.title="undefined"==typeof a.title?"":" :: "+a.title;var j=['<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">','<html class="'+Ext.baseCSSPrefix+'ux-grid-printer">',"   <head>",'       <meta content="text/html; charset=UTF-8" http-equiv="Content-Type" />','       <link href="'+this.stylesheetPath+'" rel="stylesheet" type="text/css" />',"       <title>GaiaEHR :: Print"+a.title+"</title>","   </head>",'   <body class="'+Ext.baseCSSPrefix+'ux-grid-printer-body">','       <div class="'+Ext.baseCSSPrefix+"ux-grid-printer-noprint "+Ext.baseCSSPrefix+'ux-grid-printer-links">','           <a class="'+Ext.baseCSSPrefix+'ux-grid-printer-linkprint" href="javascript:void(0);" onclick="window.print();">'+this.printLinkText+"</a>",'           <a class="'+Ext.baseCSSPrefix+'ux-grid-printer-linkclose" href="javascript:void(0);" onclick="window.close();">'+this.closeLinkText+"</a>","       </div>","       <h1>"+this.mainTitle+"</h1>","       <table>","           <tr>",e,"</tr>",'           <tpl for=".">','               <tr class="{[xindex % 2 === 0 ? "even" : "odd"]}">',f,"</tr>",i.join(""),"           </tpl>","       </table>","   </body>","</html>"],k=Ext.create("Ext.XTemplate",j).apply(c),l=window.open("GaiaEHR :: Print","printgrid");l.document.open(),l.document.write(k),l.document.close(),this.printAutomatically&&l.print(),this.closeAutomaticallyAfterPrint&&(Ext.isIE?window.close():l.close())},stylesheetPath:null,printAutomatically:!1,closeAutomaticallyAfterPrint:!1,mainTitle:"",printLinkText:"Print",closeLinkText:"Close",headerTpl:['<tpl for=".">',"   <th>{text}</th>","</tpl>"],bodyTpl:['<tpl for=".">','<tpl if="values.dataIndex">',"   <td>{{[Ext.String.createVarName(values.dataIndex)]}}</td>","   <tpl else>","       <td>{{[Ext.String.createVarName(values.id)]}}</td>","   </tpl>","</tpl>"]}}),Ext.define("App.ux.ActivityMonitor",{singleton:!0,controller:null,ui:null,runner:null,task:null,lastActive:null,ready:!1,verbose:!1,interval:6e4,maxInactive:12e4,init:function(a){a||(a={}),Ext.apply(this,a,{runner:new Ext.util.TaskRunner,ui:Ext.getBody(),task:{run:this.monitorUI,interval:a.interval||this.interval,scope:this}}),this.ready=!0},isReady:function(){return this.ready},isActive:Ext.emptyFn,isInactive:Ext.emptyFn,start:function(){return this.isReady()?(this.ui.on("mousemove",this.captureActivity,this),this.ui.on("keydown",this.captureActivity,this),this.lastActive=new Date,this.log("ActivityMonitor has been started."),this.runner.start(this.task),!0):(this.log("Please run ActivityMonitor.init()"),!1)},stop:function(){return this.isReady()?(this.runner.stop(this.task),this.lastActive=null,this.ui.un("mousemove",this.captureActivity),this.ui.un("keydown",this.captureActivity),this.log("ActivityMonitor has been stopped."),!0):(this.log("Please run ActivityMonitor.init()"),!1)},captureActivity:function(){this.controller.logoutWarinigWindow&&this.controller.cancelAutoLogout(),this.lastActive=new Date},monitorUI:function(){var a=new Date,b=a-this.lastActive;b>=this.maxInactive?(this.log("MAXIMUM INACTIVE TIME HAS BEEN REACHED"),this.stop(),this.isInactive()):(this.log("CURRENTLY INACTIVE FOR "+Math.floor(b/1e3)+" SECONDS)"),this.isActive())},log:function(a){this.verbose&&window.console.log(a)}}),Ext.define("App.ux.AbstractPanel",{calculatePercent:function(a,b){return 100*(a/b)},setReadOnly:function(a){for(var b=this.query("form"),c=0;c<b.length;c++){var d,e=b[c];if(e.readOnly!=a){e.readOnly=a,d=e.getForm().getFields().items;for(var f=0;f<d.length;f++)d[f].setReadOnly(a)}}return a},setButtonsDisabled:function(a,b){for(var c=b||app.patient.readOnly,d=0;d<a.length;d++){var e=a[d];e.disabled!=c&&(e.disabled=c,e.setDisabled(c))}},goBack:function(){app.nav.goBack()},checkIfCurrPatient:function(){return app.getCurrPatient()},patientInfoAlert:function(){var a=app.getCurrPatient();Ext.Msg.alert(_("status"),_("patient")+": "+a.name+" ("+a.pid+")")},currPatientError:function(){Ext.Msg.show({title:"Oops! "+_("no_patient_selected"),msg:_("select_patient_patient_live_search"),scope:this,buttons:Ext.Msg.OK,icon:Ext.Msg.ERROR,fn:function(){this.goBack()}})},getFormItems:function(formPanel,formToRender,callback){formPanel&&formPanel.removeAll(),FormLayoutEngine.getFields({formToRender:formToRender},function(provider,response){var items=eval(response.result),form=formPanel?formPanel.add(items):!1;return"function"==typeof callback&&callback(formPanel,items,!0),form})},boolRenderer:function(a){return"1"==a||1==a||"true"==a?'<div style="margin-left:auto; margin-right:auto; width:16"><img src="resources/images/icons/yes.gif" /></div>':"0"==a||0==a||"false"==a?'<div style="margin-left:auto; margin-right:auto; width:16"><img src="resources/images/icons/no.gif" /></div>':a},alertRenderer:function(a){return"1"==a||1==a||"true"==a?'<img style="padding-left: 13px" src="resources/images/icons/no.gif" />':"0"==a||0==a||"false"==a?'<img style="padding-left: 13px" src="resources/images/icons/yes.gif" />':a},warnRenderer:function(a,b,c){var d=c.data.warningMsg?c.data.warningMsg:"";return"1"==a||1==a||"true"==a?'<img src="resources/images/icons/icoImportant.png" '+d+" />":a},onExpandRemoveMask:function(a){a.picker.loadMask.destroy()},strToLowerUnderscores:function(a){return a.toLowerCase().replace(/ /gi,"_")},getCurrPatient:function(){return app.getCurrPatient()},getApp:function(){return app.getApp()},msg:function(a,b){app.msg(a,b)},alert:function(a,b){app.alert(a,b)},passwordVerificationWin:function(a){var b=Ext.Msg.prompt(_("password_verification"),_("please_enter_your_password")+":",function(b,c){a(b,c)}),c=b.textField.getInputId();return document.getElementById(c).type="password",b},getPageHeader:function(){return this.getComponent("RenderPanel-header")},getPageBodyContainer:function(){return this.getComponent("RenderPanel-body-container")},getPageBody:function(){return this.getPageBodyContainer().down("panel")}}),Ext.define("App.ux.LiveCPTSearch",{extend:"Ext.form.field.ComboBox",xtype:"livecptsearch",hideLabel:!0,triggerTip:_("click_to_clear_selection"),spObj:"",spForm:"",spExtraParam:"",displayField:"code_text_medium",valueField:"code",qtip:_("clearable_combo_box"),trigger1Class:"x-form-select-trigger",trigger2Class:"x-form-clear-trigger",initComponent:function(){var a=this;Ext.define("liveCPTSearchModel",{extend:"Ext.data.Model",fields:[{name:"id"},{name:"eid"},{name:"code",type:"strig"},{name:"code_text",type:"string"},{name:"code_text_medium",type:"string"},{name:"code_type",type:"string",defaultValue:"CPT"},{name:"place_of_service",type:"string"},{name:"emergency",type:"string"},{name:"charge",type:"string"},{name:"days_of_units",type:"string"},{name:"essdt_plan",type:"string"},{name:"modifiers",type:"string"}],proxy:{type:"direct",api:{read:"Services.liveCodeSearch"},reader:{totalProperty:"totals",root:"rows"},extraParams:{code_type:"cpt"}}}),a.store=Ext.create("Ext.data.Store",{model:"liveCPTSearchModel",pageSize:25,autoLoad:!1}),Ext.apply(this,{store:a.store,emptyText:_("search")+"...",typeAhead:!1,hideTrigger:!0,minChars:1,anchor:"100%",listConfig:{loadingText:_("searching")+"...",getInnerTpl:function(){return'<div class="search-item">{code}: {code_text_medium}</div>'}},pageSize:25}),a.callParent()},onRender:function(){this.callParent(arguments);var a=this.getId();this.triggerConfig={tag:"div",cls:"x-form-twin-triggers",style:"display:block;",cn:[{tag:"img",style:Ext.isIE?"margin-left:0;height:21px":"",src:Ext.BLANK_IMAGE_URL,id:"trigger2"+a,name:"trigger2"+a,cls:"x-form-trigger "+this.trigger2Class}]},this.triggerEl.replaceWith(this.triggerConfig),this.triggerEl.on("mouseup",function(b){b.target.name=="trigger2"+a&&(this.reset(),this.oldValue=null,""!==this.spObj&&""!==this.spExtraParam&&(Ext.getCmp(this.spObj).store.setExtraParam(this.spExtraParam,""),Ext.getCmp(this.spObj).store.load()),""!==this.spForm&&Ext.getCmp(this.spForm).getForm().reset())},this);var b=Ext.get("trigger2"+a);b.addClsOnOver("x-form-trigger-over")}}),Ext.define("App.ux.LiveICDXSearch",{extend:"Ext.form.ComboBox",alias:"widget.liveicdxsearch",hideLabel:!0,triggerTip:_("click_to_clear_selection"),spObj:"",spForm:"",spExtraParam:"",qtip:_("clearable_combo_box"),trigger1Class:"x-form-select-trigger",trigger2Class:"x-form-clear-trigger",displayField:"code_text",valueField:"code",emptyText:_("search")+"...",typeAhead:!1,minChars:1,anchor:"100%",listConfig:{loadingText:_("searching")+"...",getInnerTpl:function(){return'<div class="search-item">{code_type} <span style="font-weight: bold;">{code}</span>: {code_text}</div>'}},initComponent:function(){var a=this;Ext.define("liveICDXSearchModel"+this.id,{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"code",type:"string"},{name:"xcode",type:"string"},{name:"code_text",type:"string"},{name:"code_type",type:"string"}],proxy:{type:"direct",api:{read:"DiagnosisCodes.ICDCodeSearch"},reader:{totalProperty:"totals",root:"rows"}}}),a.store=Ext.create("Ext.data.Store",{model:"liveICDXSearchModel"+this.id,pageSize:1e3,autoLoad:!1}),Ext.apply(this,{store:a.store}),a.callParent()},onRender:function(){var a,b=this.getId();this.callParent(arguments),this.triggerConfig={tag:"div",cls:"x-form-twin-triggers",style:"display:block;",cn:[{tag:"img",style:Ext.isIE?"margin-left:0;height:21px":"",src:Ext.BLANK_IMAGE_URL,id:"trigger2"+b,name:"trigger2"+b,cls:"x-form-trigger "+this.trigger2Class}]},this.triggerEl.replaceWith(this.triggerConfig),this.triggerEl.on("mouseup",function(a){a.target.name=="trigger2"+b&&(this.reset(),this.oldValue=null,""!==this.spObj&&""!==this.spExtraParam&&(Ext.getCmp(this.spObj).store.setExtraParam(this.spExtraParam,""),Ext.getCmp(this.spObj).store.load()),""!==this.spForm&&Ext.getCmp(this.spForm).getForm().reset())},this),a=Ext.get("trigger2"+b),a.addClsOnOver("x-form-trigger-over")}}),Ext.define("App.ux.LiveImmunizationSearch",{extend:"Ext.form.ComboBox",xtype:"immunizationlivesearch",hideLabel:!0,displayField:"name",valueField:"cvx_code",emptyText:_("search_for_a_immunizations")+"...",typeAhead:!0,minChars:1,initComponent:function(){var a=this;Ext.define("liveImmunizationSearchModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"cvx_code",type:"string"},{name:"name",type:"string"},{name:"description",type:"string"},{name:"note",type:"string"},{name:"status",type:"string"},{name:"update_date",type:"date",dateFormat:"Y-m-d H:i:s"}],proxy:{type:"direct",api:{read:"Immunizations.getImmunizationLiveSearch"},reader:{totalProperty:"totals",root:"rows"}}}),a.store=Ext.create("Ext.data.Store",{model:"liveImmunizationSearchModel",pageSize:10,autoLoad:!1}),Ext.apply(this,{store:a.store,listConfig:{loadingText:_("searching")+"...",getInnerTpl:function(){return'<div class="search-item">CVX - {cvx_code}: <span style="font-weight: normal;" class="list-status-{status}">{name} ({status})</span></div>'
}},pageSize:10}),a.callParent()}}),Ext.define("App.ux.LiveMedicationSearch",{extend:"Ext.form.ComboBox",alias:"widget.medicationlivetsearch",initComponent:function(){var a=this;Ext.define("liveMedicationsSearchModel",{extend:"Ext.data.Model",fields:[{name:"id"},{name:"PROPRIETARYNAME"},{name:"PRODUCTNDC"},{name:"NONPROPRIETARYNAME"},{name:"ACTIVE_NUMERATOR_STRENGTH"},{name:"ACTIVE_INGRED_UNIT"}],proxy:{type:"direct",api:{read:"Rxnorm.getRXNORMLiveSearch"},reader:{totalProperty:"totals",root:"rows"}}}),a.store=Ext.create("Ext.data.Store",{model:"liveMedicationsSearchModel",pageSize:10,autoLoad:!1}),Ext.apply(this,{store:a.store,displayField:"PROPRIETARYNAME",valueField:"id",emptyText:_("search_for_a_medication")+"...",typeAhead:!1,hideTrigger:!0,minChars:1,listConfig:{loadingText:_("searching")+"...",getInnerTpl:function(){return'<div class="search-item"><h3>{PROPRIETARYNAME}<span style="font-weight: normal"> ({NONPROPRIETARYNAME}) </span></h3>{ACTIVE_NUMERATOR_STRENGTH} | {ACTIVE_INGRED_UNIT}</div>'}},pageSize:10}),a.callParent()}}),Ext.define("App.ux.LiveLabsSearch",{extend:"Ext.form.ComboBox",alias:"widget.labslivetsearch",hideLabel:!0,initComponent:function(){var a=this;Ext.define("liveLoincSearchModel",{extend:"Ext.data.Model",fields:[{name:"id"},{name:"loinc_name"},{name:"loinc_number"}],proxy:{type:"direct",api:{read:"Laboratories.getLabLoincLiveSearch"},reader:{totalProperty:"totals",root:"rows"}}}),a.store=Ext.create("Ext.data.Store",{model:"liveLoincSearchModel",pageSize:10,autoLoad:!1}),Ext.apply(this,{store:a.store,displayField:"loinc_name",valueField:"loinc_name",emptyText:_("laboratories_search")+"...",typeAhead:!1,hideTrigger:!0,minChars:1,listConfig:{loadingText:_("searching")+"...",getInnerTpl:function(){return'<div class="search-item"><h3>{loinc_name} ({loinc_number})</h3></div>'}},pageSize:10}),a.callParent()}}),Ext.define("App.ux.LiveCDTSearch",{extend:"Ext.form.ComboBox",alias:"widget.cdtlivetsearch",hideLabel:!0,initComponent:function(){var a=this;Ext.define("liveCDTSearchModel",{extend:"Ext.data.Model",fields:[{name:"id"},{name:"code"},{name:"text"}],proxy:{type:"direct",api:{read:"Medical.getCDTLiveSearch"},reader:{totalProperty:"totals",root:"rows"}}}),a.store=Ext.create("Ext.data.Store",{model:"liveCDTSearchModel",pageSize:10,autoLoad:!1}),Ext.apply(this,{store:a.store,displayField:"text",valueField:"code",emptyText:_("search_for_a_CDT")+"...",typeAhead:!1,hideTrigger:!0,minChars:1,listConfig:{loadingText:_("searching")+"...",getInnerTpl:function(){return'<div class="search-item"><h3>{code}<span style="font-weight: normal"> ({text}) </span></h3></div>'}},pageSize:10}),a.callParent()}}),Ext.define("App.ux.LiveRXNORMAllergySearch",{extend:"Ext.form.ComboBox",alias:"widget.rxnormallergylivetsearch",hideLabel:!0,displayField:"STR",valueField:"STR",initComponent:function(){var a=this;Ext.define("liveRXNORMAllergySearchModel",{extend:"Ext.data.Model",fields:[{name:"RXCUI",type:"auto"},{name:"CODE",type:"auto"},{name:"STR",type:"auto"},{name:"DST",type:"auto"},{name:"DRT",type:"auto"},{name:"DDF",type:"auto"},{name:"DDFA",type:"auto"},{name:"RXN_QUANTITY",type:"auto"},{name:"SAB",type:"auto"},{name:"RXAUI",type:"auto"},{name:"CodeType",defaultValue:"RXNORM"}],proxy:{type:"direct",api:{read:"Rxnorm.getRXNORMAllergyLiveSearch"},reader:{totalProperty:"totals",root:"rows"}}}),a.store=Ext.create("Ext.data.Store",{model:"liveRXNORMAllergySearchModel",pageSize:25,autoLoad:!1}),Ext.apply(this,{store:a.store,emptyText:_("search")+"...",typeAhead:!1,hideTrigger:!0,minChars:3,listConfig:{loadingText:_("searching")+"...",getInnerTpl:function(){return'<div class="search-item"><h3>{STR}<span style="font-weight: normal"> ({RXCUI}) </span></h3></div>'}},pageSize:25}),a.callParent()}}),Ext.define("App.ux.LivePatientSearch",{extend:"Ext.form.ComboBox",alias:"widget.patienlivetsearch",hideLabel:!0,displayField:"fullname",valueField:"pid",emptyText:_("search_for_a_patient")+"...",maxLength:40,queryMode:"remote",allowBlank:!0,typeAhead:!1,forceSelection:!1,allowOnlyWhitespace:!0,hideTrigger:!0,validateBlank:!0,submitValue:!0,minChars:0,queryDelay:200,initComponent:function(){var me=this;Ext.define("patientLiveSearchModel",{extend:"Ext.data.Model",fields:[{name:"pid",type:"int"},{name:"pubpid",type:"string"},{name:"fname",type:"string"},{name:"mname",type:"string"},{name:"lname",type:"string"},{name:"fullname",type:"string",convert:function(a,b){return b.data.fname+" "+b.data.mname+" "+b.data.lname}},{name:"DOB",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"sex",type:"string"},{name:"SS",type:"string"}],proxy:{type:"direct",api:{read:"Patient.patientLiveSearch"},writer:{writeAllFields:!0},reader:{totalProperty:"totals",root:"rows"}}}),me.store=Ext.create("Ext.data.Store",{model:"patientLiveSearchModel",pageSize:10,autoLoad:!1}),Ext.apply(me,{store:me.store,listConfig:{loadingText:_("searching")+"...",getInnerTpl:function(){var pid=eval(g("display_pubpid"))?"pubpid":"pid";return'<div class="search-item"><h3><span>{fullname}</span> {[Ext.Date.format(values.DOB, g("date_display_format"))]}</h3>Record #{'+pid+"}"}},pageSize:10}),me.callParent()}}),Ext.define("App.ux.LiveSigsSearch",{extend:"Ext.form.field.ComboBox",alias:"widget.livesigssearch",initComponent:function(){var a=this;Ext.define("liveSigsSearchModel",{extend:"Ext.data.Model",fields:[{name:"option_value",type:"string"},{name:"option_name",type:"string"}],proxy:{type:"direct",api:{read:"Prescriptions.getSigCodesByQuery"}}}),a.store=Ext.create("Ext.data.Store",{model:"liveSigsSearchModel",pageSize:25,autoLoad:!1}),Ext.apply(a,{store:a.store,displayField:"option_value",valueField:"option_value",emptyText:_("search")+"...",typeAhead:!1,hideTrigger:!0,minChars:1,anchor:"100%",listConfig:{loadingText:_("searching")+"...",getInnerTpl:function(){return'<div class="search-item">{option_value} ({option_name})</div>'}},listeners:{scope:a,beforeselect:a.onBeforeSigSelect,select:a.onBeSigSelect}}),a.callParent(arguments)},onBeforeSigSelect:function(){},onBeSigSelect:function(){}}),Ext.define("App.ux.LiveUserSearch",{extend:"Ext.form.ComboBox",alias:"widget.userlivetsearch",hideLabel:!0,displayField:"fullname",valueField:"id",emptyText:_("search_for_a_user")+"...",maxLength:40,typeAhead:!1,queryMode:"remote",allowBlank:!0,minChars:1,queryDelay:200,acl:null,triggerTip:_("click_to_clear_selection"),spObj:"",spForm:"",spExtraParam:"",qtip:_("clearable_combo_box"),trigger1Class:"x-form-select-trigger",trigger2Class:"x-form-clear-trigger",listConfig:{loadingText:_("searching")+"...",getInnerTpl:function(){return'<div class="search-item">{fullname} <b>({role})</b></div>'}},initComponent:function(){var a=this;Ext.define("userLiveSearchModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"title",type:"string"},{name:"role",type:"string"},{name:"fname",type:"string"},{name:"mname",type:"string"},{name:"lname",type:"string"},{name:"fullname",type:"string",convert:function(a,b){return b.data.fname+" "+b.data.mname+" "+b.data.lname}}]}),a.store=Ext.create("Ext.data.Store",{model:"userLiveSearchModel",pageSize:10,autoLoad:!1,proxy:{type:"direct",api:{read:"User.userLiveSearch"},extraParams:{acl:a.acl},reader:{root:"data"},writer:{writeAllFields:!0}}}),Ext.apply(a,{store:a.store,pageSize:10}),a.callParent()},onRender:function(){var a,b=this.getId();this.callParent(arguments),this.triggerConfig={tag:"div",cls:"x-form-twin-triggers",style:"display:block;",cn:[{tag:"img",style:Ext.isIE?"margin-left:0;height:21px":"",src:Ext.BLANK_IMAGE_URL,id:"trigger2"+b,name:"trigger2"+b,cls:"x-form-trigger "+this.trigger2Class}]},this.triggerEl.replaceWith(this.triggerConfig),this.triggerEl.on("mouseup",function(a){a.target.name=="trigger2"+b&&(this.reset(),this.fireEvent("reset",this))},this),a=Ext.get("trigger2"+b),a.addClsOnOver("x-form-trigger-over")}}),Ext.define("App.ux.NodeDisabled",{alias:"plugin.nodedisabled",extend:"Ext.AbstractPlugin",disabledCls:"tree-node-disabled",preventSelection:!0,preventChecking:!0,init:function(a){var b,c,d=this,e=a.getView();d.callParent(arguments),b=e.getRowClass,b?(c=e.scope||d,Ext.apply(e,{getRowClass:function(){var a,e;return a=b.apply(c,arguments)||"",e=d.getRowClass.apply(d,arguments)||"",a&&e?a+" "+e:a+e}})):Ext.apply(e,{getRowClass:Ext.Function.bind(d.getRowClass,d)}),d.preventSelection&&a.getSelectionModel().on("beforeselect",d.onBeforeNodeSelect,d),d.preventChecking&&a.on("checkchange",d.checkchange,d)},getCmp:function(){return this.callParent(arguments)},getRowClass:function(a){return a.get("disabled")?this.disabledCls:""},onBeforeNodeSelect:function(a,b){return b.get("disabled")?!1:void 0},checkchange:function(a,b){a.get("disabled")&&a.set("checked",!b)}}),Ext.define("App.ux.PhotoIdWindow",{extend:"Ext.window.Window",alias:"widget.photoidwindow",height:320,width:320,layout:"fit",renderTo:document.body,initComponent:function(){var a=this;window.webcam.set_api_url("dataProvider/WebCamImgHandler.php"),window.webcam.set_swf_url("lib/jpegcam/htdocs/webcam.swf"),window.webcam.set_quality(100),window.webcam.set_shutter_sound(!0,"lib/jpegcam/htdocs/shutter.mp3"),window.webcam.set_hook("onComplete","onWebCamComplete"),Ext.apply(a,{html:window.webcam.get_html(320,320),buttons:[{text:_("capture"),iconCls:"save",handler:a.captureToCanvas},{text:_("cancel"),scope:a,handler:function(){this.close()}}]}),a.callParent(arguments)},captureToCanvas:function(){window.webcam.snap()}}),Ext.define("App.ux.PatientEncounterCombo",{extend:"Ext.form.ComboBox",alias:"widget.patientEncounterCombo",hideLabel:!0,displayField:"display_string",valueField:"eid",emptyText:_("search")+"...",width:400,editable:!1,initComponent:function(){var a=this;Ext.define("patientEncounterComboModel",{extend:"Ext.data.Model",fields:[{name:"eid",type:"int"},{name:"brief_description",type:"string"},{name:"service_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"close_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"display_string",type:"string",convert:function(a,b){return Ext.Date.format(b.data.service_date,g("date_time_display_format"))+" - "+Ext.String.ellipsis(b.data.brief_description,25)}}],proxy:{type:"direct",api:{read:"Encounter.getEncounters"},reader:{totalProperty:"totals",root:"rows"}}}),a.store=Ext.create("Ext.data.Store",{model:"patientEncounterComboModel",pageSize:500,autoLoad:!1,sorters:[{property:"service_date",direction:"DESC"}]}),a.callParent()}}),Ext.define("App.ux.RenderPanel",{extend:"Ext.container.Container",alias:"widget.renderpanel",cls:"RenderPanel",layout:"border",frame:!1,border:!1,pageLayout:"fit",pageBody:[],pageTitle:"",pageButtons:null,pageTBar:null,pageBBar:null,pagePadding:null,showRating:!1,initComponent:function(){var a=this;Ext.apply(a,{items:[a.mainHeader=Ext.widget("container",{cls:"RenderPanel-header",itemId:"RenderPanel-header",region:"north",layout:"hbox",height:30}),{cls:"RenderPanel-body-container",itemId:"RenderPanel-body-container",xtype:"container",region:"center",layout:"fit",padding:null==this.pagePadding?5:this.pagePadding,items:[a.mainBoddy=Ext.widget("panel",{cls:"RenderPanel-body",frame:!0,border:!1,itemId:"pageLayout",defaults:{frame:!1,border:!1,autoScroll:!0},layout:a.pageLayout,items:a.pageBody,tbar:a.pageTBar,bbar:a.pageBBar,buttons:a.pageButtons})]}]}),a.pageTitleDiv=a.mainHeader.add(Ext.widget("container",{cls:"panel_title",html:a.pageTitle})),a.pageReadOnlyDiv=a.mainHeader.add(Ext.widget("container")),a.showRating&&(a.pageRankingDiv=a.mainHeader.add(Ext.widget("ratingField",{flex:1,listeners:{scope:a,click:function(a,b){Patient.setPatientRating({pid:app.patient.pid,rating:b},function(){app.msg(_("sweet"),_("record_saved"))})}}}))),a.pageTimerDiv=a.mainHeader.add(Ext.widget("container",{style:"float:right",width:200})),a.callParent(arguments)},updateTitle:function(a,b,c){this.pageTitleDiv.update(a),this.pageReadOnlyDiv.update(b?_("read_only"):""),this.pageTimerDiv.update(c)},getPageHeader:function(){return this.getComponent("RenderPanel-header")},getPageBodyContainer:function(){return this.getComponent("RenderPanel-body-container")},getPageBody:function(){return this.mainBoddy},onActive:function(a){"function"==typeof a&&a(!0)}}),Ext.define("App.ux.form.fields.Help",{extend:"Ext.Img",alias:"widget.helpbutton",src:"resources/images/icons/icohelp.png",height:16,width:16,margin:"3 10",helpMsg:_("help_message"),initComponent:function(){var a=this;a.listeners={render:function(b){a.setToolTip(b.getEl())}},a.callParent()},setToolTip:function(a){Ext.create("Ext.tip.ToolTip",{target:a,dismissDelay:0,html:this.helpMsg})}}),Ext.define("App.ux.form.fields.Checkbox",{extend:"Ext.form.field.Checkbox",alias:"widget.mitos.checkbox",inputValue:"1",uncheckedValue:"0"}),Ext.define("App.ux.form.fields.ColorPicker",{extend:"Ext.form.field.Trigger",alias:"widget.colorcombo",triggerTip:"Please select a color.",onTriggerClick:function(){var a=this;picker=Ext.create("Ext.picker.Color",{pickerField:this,ownerCt:this,renderTo:document.body,floating:!0,hidden:!0,focusOnShow:!0,style:{backgroundColor:"#fff"},listeners:{scope:this,select:function(b,c){a.setValue("#"+c),a.inputEl.setStyle({backgroundColor:c}),picker.hide()},show:function(a){a.getEl().monitorMouseLeave(500,a.hide,a)}}}),picker.alignTo(a.inputEl,"tl-bl?"),picker.show(a.inputEl)}}),Ext.define("App.ux.form.fields.Currency",{extend:"Ext.form.field.Number",alias:"widget.mitos.currency",currencySymbol:g("gbl_currency_symbol"),useThousandSeparator:!0,thousandSeparator:",",alwaysDisplayDecimals:!0,fieldStyle:"text-align: right;",hideTrigger:!0,initComponent:function(){this.useThousandSeparator&&","==this.decimalSeparator&&","==this.thousandSeparator?this.thousandSeparator=".":this.allowDecimals&&"."==this.thousandSeparator&&"."==this.decimalSeparator&&(this.decimalSeparator=","),this.callParent(arguments)},setValue:function(a){App.ux.form.fields.Currency.superclass.setValue.call(this,null!=a?a.toString().replace(".",this.decimalSeparator):a),this.setRawValue(this.getFormattedValue(this.getValue()))},getFormattedValue:function(a){if(Ext.isEmpty(a)||!this.hasFormat())return a;var b=null;if(a=(b=0>a)?-1*a:a,a=this.allowDecimals&&this.alwaysDisplayDecimals?a.toFixed(this.decimalPrecision):a,this.useThousandSeparator){if(this.useThousandSeparator&&Ext.isEmpty(this.thousandSeparator))throw"NumberFormatException: invalid thousandSeparator, property must has a valid character.";if(this.thousandSeparator==this.decimalSeparator)throw"NumberFormatException: invalid thousandSeparator, thousand separator must be different from decimalSeparator.";a=a.toString();var c=a.split(".");c[1]=c[1]?c[1]:null;for(var d=c[0],e=/(\d+)(\d{3})/,f=this.thousandSeparator;e.test(d);)d=d.replace(e,"$1"+f+"$2");a=d+(c[1]?this.decimalSeparator+c[1]:"")}return Ext.String.format("{0}{1}{2}",b?"-":"",Ext.isEmpty(this.currencySymbol)?"":this.currencySymbol,a)},parseValue:function(a){return App.ux.form.fields.Currency.superclass.parseValue.call(this,this.removeFormat(a))},removeFormat:function(a){return Ext.isEmpty(a)||!this.hasFormat()?a:(a=a.toString().replace(this.currencySymbol,""),a=this.useThousandSeparator?a.replace(new RegExp("["+this.thousandSeparator+"]","g"),""):a)},getErrors:function(a){return App.ux.form.fields.Currency.superclass.getErrors.call(this,this.removeFormat(a))},hasFormat:function(){return"."!=this.decimalSeparator||1==this.useThousandSeparator&&null!=this.getRawValue()||!Ext.isEmpty(this.currencySymbol)||this.alwaysDisplayDecimals},onFocus:function(){this.setRawValue(this.removeFormat(this.getRawValue())),this.callParent(arguments)}}),Ext.define("App.ux.form.fields.CustomTrigger",{extend:"Ext.form.field.Trigger",alias:"widget.customtrigger",hideLabel:!0,triggerTip:_("click_to_clear_selection"),qtip:_("clearable_combo_box"),trigger1Class:"x-form-select-trigger",trigger2Class:"x-form-clear-trigger",onRender:function(){this.callParent(arguments);var a=this.getId();this.triggerConfig={tag:"div",cls:"x-form-twin-triggers",style:"display:block;",cn:[{tag:"img",style:Ext.isIE?"margin-left:0;height:21px":"",src:Ext.BLANK_IMAGE_URL,id:"trigger2"+a,name:"trigger2"+a,cls:"x-form-trigger "+this.trigger2Class}]},this.triggerEl.replaceWith(this.triggerConfig),this.triggerEl.on("mouseup",function(){this.destroy()},this);var b=Ext.get("trigger2"+a);b.addClsOnOver("x-form-trigger-over")}}),Ext.define("App.ux.form.fields.DateTime",{extend:"Ext.form.FieldContainer",mixins:{field:"Ext.form.field.Field"},alias:"widget.mitos.datetime",combineErrors:!0,layout:"hbox",readOnly:!1,allowBlank:!0,dateFormat:"Y-m-d",timeFormat:"g:i a",dateTimeFormat:"Y-m-d H:i:s",dateConfig:{},timeConfig:{},dateValue:null,dateField:null,timeField:null,initComponent:function(){var a=this;a.items=a.items||[],a.dateConfig.allowBlank=a.allowBlank,a.dateField=Ext.create("Ext.form.field.Date",Ext.apply({format:a.dateFormat,flex:1,emptyText:_("date"),margin:0,submitValue:!1},a.dateConfig)),a.items.push(a.dateField),a.timeField=Ext.create("Ext.form.field.Time",Ext.apply({format:a.timeFormat,flex:1,emptyText:_("time"),margin:0,submitValue:!1},a.timeConfig)),a.items.push(a.timeField);for(var b=0;b<a.items.length;b++)a.items[b].on("focus",Ext.bind(a.onItemFocus,a)),a.items[b].on("blur",Ext.bind(a.onItemBlur,a)),a.items[b].on("specialkey",function(b,c){var d=c.getKey(),e=d==c.TAB;return e&&a.focussedItem==a.dateField?(c.stopEvent(),void a.timeField.focus()):void a.fireEvent("specialkey",b,c)});"vbox"==a.layout&&(a.height=44),a.callParent(),a.initField()},focus:function(){this.callParent(),this.dateField.focus()},onItemFocus:function(a){this.blurTask&&this.blurTask.cancel(),this.focussedItem=a},onItemBlur:function(a){var b=this;a==b.focussedItem&&(b.blurTask=new Ext.util.DelayedTask(function(){b.fireEvent("blur",b)}),b.blurTask.delay(100))},getValue:function(){var a=null,b=this.dateField.getSubmitValue(),c=this.timeField.getSubmitValue();if(b)if(c){var d=this.getFormat();a=Ext.Date.parse(b+" "+c,d)}else a=this.dateField.getValue();return a},getSubmitValue:function(){var a=this.getValue();return a?Ext.Date.format(a,this.dateTimeFormat):null},setValue:function(a){Ext.isString(a)&&(a=Ext.Date.parse(a,this.dateTimeFormat)),this.dateField.setValue(a),this.timeField.setValue(a)},getFormat:function(){return(this.dateField.submitFormat||this.dateField.format)+" "+(this.timeField.submitFormat||this.timeField.format)},getSubmitData:function(){var a=this,b=null;return a.disabled||!a.submitValue||a.isFileUpload()||(b={},b[a.getName()]=""+a.getSubmitValue()),b},setReadOnly:function(a){this.dateField.setReadOnly(a),this.timeField.setReadOnly(a)},setMaxValue:function(a){this.dateField.setMaxValue(a)}}),Ext.define("App.ux.form.fields.MultiText",{extend:"Ext.form.FieldContainer",xtype:"multitextfield",layout:{type:"vbox",align:"stretch"},name:null,numbers:!0,initComponent:function(){var a=this;a.lastField=null,a.callParent(),a.addField()},addField:function(a){var b=this;b.lastField=b.add({xtype:"textfield",name:"_"+b.name,anchor:"100%",value:a||"",labelWidth:20,margin:"0 0 5 0",enableKeyEvents:!0}),b.numbers&&b.lastField.setFieldLabel((b.items.items.indexOf(b.lastField)+1).toString()),b.lastField.on("keyup",this.onFieldKeyUp,this)},onFieldKeyUp:function(a,b){if(b.getKey()!=b.TAB){var c=this,d=c.items.items.indexOf(a),e=c.items.items.length,f=d+1==e,g=d+2==e;f&&a.getValue().length>0&&this.lastField==a&&b.getKey()!=b.DELETE&&b.getKey()!=b.BACKSPACE?(this.addField(),c.doLayout()):g&&0==a.getValue().length&&c.lastField!=a&&(c.remove(c.lastField),c.doLayout(),c.lastField=a)}},setValue:function(a){var b=this;if(b.removeAll(!0),Ext.isString(a)&&""!=a)b.addField(a);else if(Ext.isArray(a))for(var c=0;c<a.length;c++)b.addField(a[c]);b.addField("")},getValue:function(){var a=this,b=a.up("form").getForm().getValues()["_"+a.name];return""==b[b.length-1]&&Ext.Array.erase(b,b.length-1,1),b}}),Ext.define("App.ux.form.fields.plugin.BadgeText",{extend:"Ext.AbstractPlugin",alias:"plugin.badgetext",disableBg:"gray",enableBg:"red",textSize:15,textColor:"white",defaultText:" ",disableOpacity:0,align:"left",text:" ",disable:!0,button:null,init:function(a){var b=this;b.button=a,b.text=b.defaultText,a.on("render",b.addBadgeEl,b),Ext.apply(a,{setBadgeText:function(c){return b.disable="undefined"==typeof c||c===b.defaultText,b.text=b.disable?b.defaultText:c,a.rendered&&(a.badgeEl.update(c.toString?c.toString():c),Ext.isStrict&&Ext.isIE8&&a.el.repaint(),b.setDisabled(b.disable)),a},getBadgeText:function(){return b.text}})},addBadgeEl:function(a){var b=this,c={position:"absolute","background-color":b.disableBg,"font-size":b.textSize+"px",color:b.textColor,padding:"1px 5px",index:50,top:"-3px","border-radius":"15px","font-weight":"bold","text-shadow":"rgba(0, 0, 0, 0.5) 0 -0.08em 0","box-shadow":"rgba(0, 0, 0, 0.3) 0 0.1em 0.1em",cursor:"pointer"};"left"==b.align?c.left="-3px":c.right="-3px",a.badgeEl=Ext.DomHelper.append(a.el,{tag:"div",cls:"badgeText x-unselectable"},!0),a.badgeEl.setOpacity(b.disableOpacity),a.badgeEl.setStyle(c),a.badgeEl.update(b.text.toString?b.text.toString():b.text),a.el.setStyle({overflow:"hidden"})},onBadgeClick:function(){var a=this;a.button.fireEvent("badgeclick",a.button,a.text)},setDisabled:function(a){var b=this;b.button.badgeEl.setStyle({"background-color":a?b.disableBg:b.enableBg,opacity:a?b.disableOpacity:1}),b.button.badgeEl.clearListeners(),a||b.button.badgeEl.on("click",b.onBadgeClick,b,{preventDefault:!0,stopEvent:!0})}}),Ext.define("App.ux.form.fields.plugin.ReadOnlyLabel",{extend:"Ext.AbstractPlugin",alias:"plugin.readonlylabel",align:"right",text:_("read_only"),textBg:"red",textSize:"14",textColor:"white",textOpacity:.4,init:function(a){var b=this;a.on("render",b.onRender,b),a.on("writeablechange",b.setReadOnly,b)},setReadOnly:function(a,b){a.readOnlyEl.setVisible(b)},onRender:function(a){this.addReadOnlyEl(a),this.setReadOnly(a,a.readOnly)},addReadOnlyEl:function(a){var b=this,c={position:"absolute","background-color":b.textBg,"font-size":b.textSize+"px",color:b.textColor,padding:"5px 10px",index:50,top:"10px","border-radius":"5px",visibility:"hidden"};"left"==b.align?c.left="10px":c.right="10px",a.readOnlyEl=Ext.DomHelper.append(a.el,{tag:"div",cls:"badgeText x-unselectable"},!0),a.readOnlyEl.setOpacity(b.textOpacity),a.readOnlyEl.setStyle(c),a.readOnlyEl.update(b.text.toString?b.text.toString():b.text)}}),Ext.define("App.ux.form.AdvanceForm",{extend:"Ext.AbstractPlugin",alias:"plugin.advanceform",syncAcl:!0,autoSync:!1,autoSyncTool:!0,syncDelay:3e3,transition:2e3,init:function(a){this.callParent(arguments),a.pugin=this,this.formPanel=a,this.formPanel.autoSync=this.autoSync,this.formPanel.on("beforerender",this.setFieldEvent,this),this.form=this.formPanel.getForm(),this.form.loadRecord=this.loadRecord,this.autoSyncTool&&this.addTool()},loadRecord:function(a){var b=this,c=b.owner,d=this.owner.pugin;return a?(b.isLoading=!0,b._record=a,d.setFormFieldsClean(!1),a.store.on("write",d.onStoreWrite,d),a.store.on("beforesync",function(a,b){c.fireEvent("beforesync",a,b)},d),a.store.on("update",function(a,b){c.fireEvent("update",a,b)},d),b.setValues(a.data),c.fireEvent("recordloaded",b,a),b.isLoading=!1,b):b},onStoreWrite:function(a,b){this.setFormFieldsClean(this.transition),this.formPanel.fireEvent("write",a,b),app.msg("Sweet!","Record Saved"),delete this.bufferSyncFormFn},setFieldEvent:function(a){for(var b=a.getForm().getFields().items,c=0;c<b.length;c++)"textfield"==b[c].xtype||"textareafield"==b[c].xtype?(b[c].enableKeyEvents=!0,b[c].on("keyup",this.setFieldCondition,this),b[c].on("change",this.setFieldCondition,this)):"radiofield"==b[c].xtype||"checkbox"==b[c].xtype?(b[c].scope=this,b[c].handler=this.setFieldCondition,b[c].on("change",this.setFieldCondition,this)):"datefield"==b[c].xtype?(b[c].on("select",this.setFieldCondition,this),b[c].on("change",this.setFieldCondition,this)):b[c].on("select",this.setFieldCondition,this)},setFieldCondition:function(a){var b,c=this,d=c.form.getRecord(),e=d?d.store:null,f={},g=c.getFieldEl(a);null!=e&&(!c.form.isLoading&&"radiofield"!=a.xtype||!c.form.isLoading&&"radiofield"==a.xtype&&a.checked)&&(f[a.name]=a.getSubmitValue(),d.set(f),b=0!==Object.getOwnPropertyNames(d.getChanges()).length,b===!0?c.setFieldDirty(a,g,!0,c.transition):c.setFieldDirty(a,g,!1,c.transition),this.formPanel.autoSync&&this.syncAcl&&("undefined"==typeof c.bufferSyncFormFn?(c.bufferSyncFormFn=Ext.Function.createBuffered(function(){e.sync()},c.syncDelay),c.bufferSyncFormFn()):b===!0?c.bufferSyncFormFn():(c.setFormFieldsClean(c.transition),delete c.bufferSyncFormFn)))},setFieldDirty:function(a,b,c,d){d=Ext.isNumber(d)?d:0,(a.el.hasChanged&&!c||!a.el.hasChanged&&c)&&(a.el.hasChanged=c,Ext.create("Ext.fx.Animator",{target:b,duration:d,keyframes:{0:{backgroundColor:c?"FFFFFF":"FFDDDD"},100:{backgroundColor:c?"FFDDDD":"FFFFFF"}},listeners:{keyframe:function(a,e){1==e&&(c?b.setStyle({"background-image":"none"}):Ext.Function.defer(function(){b.setStyle({"background-image":null})},d-400))}}}))},getFieldEl:function(a){return"textfield"==a.xtype||"textareafield"==a.xtype?a.inputEl:"radiofield"==a.xtype?a.ownerCt.el:"checkbox"==a.xtype?a.el:a.el},setFormFieldsClean:function(a){for(var b,c=this,d=c.form.getFields().items,e=0;e<d.length;e++)b=c.getFieldEl(d[e]),"undefined"!=typeof d[e].el&&d[e].el.hasChanged&&c.setFieldDirty(d[e],b,!1,a)},addTool:function(){var a=this,b=a.formPanel.getDockedItems()[0],c=a.formPanel.autoSync?"autosave":"";b&&a.autoSyncTool&&b.insert(0,Ext.create("Ext.panel.Tool",{type:"save",cls:c,tooltip:"Autosave",handler:function(b,c,d,e){a.formPanel.autoSync=!a.formPanel.autoSync,a.formPanel.autoSync?e.addCls("autosave"):e.removeCls("autosave"),app.msg("Sweet!","AutoSave is "+(a.formPanel.autoSync?"On":"Off"))}}))}}),Ext.define("App.ux.form.fields.Percent",{extend:"Ext.form.field.Number",alias:"widget.mitos.percent",currencySymbol:"%",useThousandSeparator:!1,thousandSeparator:",",alwaysDisplayDecimals:!0,fieldStyle:"text-align: right;",hideTrigger:!0,initComponent:function(){this.useThousandSeparator&&","==this.decimalSeparator&&","==this.thousandSeparator?this.thousandSeparator=".":this.allowDecimals&&"."==this.thousandSeparator&&"."==this.decimalSeparator&&(this.decimalSeparator=","),this.callParent(arguments)},setValue:function(a){App.ux.form.fields.Currency.superclass.setValue.call(this,null!=a?a.toString().replace(".",this.decimalSeparator):a),this.setRawValue(this.getFormattedValue(this.getValue()))},getFormattedValue:function(a){if(Ext.isEmpty(a)||!this.hasFormat())return a;var b=null;if(a=(b=0>a)?-1*a:a,a=this.allowDecimals&&this.alwaysDisplayDecimals?a.toFixed(this.decimalPrecision):a,this.useThousandSeparator){if(this.useThousandSeparator&&Ext.isEmpty(this.thousandSeparator))throw"NumberFormatException: invalid thousandSeparator, property must has a valid character.";if(this.thousandSeparator==this.decimalSeparator)throw"NumberFormatException: invalid thousandSeparator, thousand separator must be different from decimalSeparator.";a=a.toString();var c=a.split(".");c[1]=c[1]?c[1]:null;for(var d=c[0],e=/(\d+)(\d{3})/,f=this.thousandSeparator;e.test(d);)d=d.replace(e,"$1"+f+"$2");a=d+(c[1]?this.decimalSeparator+c[1]:"")}return Ext.String.format("{0}{1}{2}",b?"-":"",a,Ext.isEmpty(this.currencySymbol)?"":this.currencySymbol)},parseValue:function(a){return App.ux.form.fields.Currency.superclass.parseValue.call(this,this.removeFormat(a))},removeFormat:function(a){return Ext.isEmpty(a)||!this.hasFormat()?a:(a=a.toString().replace(this.currencySymbol,""),a=this.useThousandSeparator?a.replace(new RegExp("["+this.thousandSeparator+"]","g"),""):a)},getErrors:function(a){return App.ux.form.fields.Currency.superclass.getErrors.call(this,this.removeFormat(a))},hasFormat:function(){return"."!=this.decimalSeparator||1==this.useThousandSeparator&&null!=this.getRawValue()||!Ext.isEmpty(this.currencySymbol)||this.alwaysDisplayDecimals},onFocus:function(){this.setRawValue(this.removeFormat(this.getRawValue())),this.callParent(arguments)}}),function(){var Element=Ext.core.Element,DomHelper=Ext.core.DomHelper,slice=Array.prototype.slice;Ext.define("App.ux.ManagedIframe",{extend:"Ext.Component",alias:"widget.miframe",hideMode:Ext.isIE?"display":"nosize",autoScroll:!0,frameStyle:null,frameConfig:void 0,frameCls:"ux-miframe",shimCls:"ux-miframe-shim",shimUrl:Ext.BLANK_IMAGE_URL,eventsFollowFrameLinks:!0,src:"about:blank",autoMask:!1,maskMessage:"Loading...",resetUrl:void 0,ariaRole:"presentation",unsupportedText:"Frames are disabled",initComponent:function(){var a=this;a.frameStyle=Ext.isString(a.frameStyle)?Element.parseStyles(a.frameStyle):a.frameStyle||{},a.frameName=a.frameName||a.getId(),a.autoEl=a.autoEl||{cn:[Ext.applyIf(a.frameConfig||{},{tag:"iframe",cls:a.frameCls,style:Ext.apply({height:"100%",width:"100%"},a.frameStyle),frameBorder:"no",role:a.ariaRole,name:a.frameName}),{tag:"noframes",html:a.unsupportedText},{tag:"img",cls:a.shimCls,galleryimg:"no",style:"position:absolute;top:0;left:0;display:none;z-index:20;height:100%;width:100%;",src:a.shimUrl}]},this.callParent()},renderSelectors:{frameElement:"iframe.ux-miframe",frameShim:"img.ux-miframe-shim"},iframeMessageListener:function(event){if(event.origin===window.location.origin&&event.data.match(/^documentedit/)){var data=event.data.replace(/^documentedit/,"");app.fireEvent("documentedit",eval("("+data+")"))}},afterRender:function(){var a,b=this;b.callParent(),b.iframeMessageListener&&(window.addEventListener?window.addEventListener("message",b.iframeMessageListener,!1):window.attachEvent("onmessage",b.iframeMessageListener)),b.frameShim&&(b.frameShim.autoBoxAdjust=!1,b.frameShim.setVisibilityMode(Element.DISPLAY)),(a=b.frameElement)&&(a=b.frameElement=new App.ux.ManagedIframe.Element(a.dom),a.eventsFollowFrameLinks=!1,a.on({dataavailable:b.onFrameDataAvailable,scope:b}),this.autoLoad?(a.isReset=Ext.isIE,a.eventsFollowFrameLinks=!!b.eventsFollowFrameLinks):Ext.Function.defer(a.reset,100,a,[b.resetUrl,function(){var b=this;a.eventsFollowFrameLinks=!!b.eventsFollowFrameLinks,b.src||b.defaultSrc?b.setSrc():(b.data||b.html)&&b.update(b.data||b.html)},b]))},getContentTarget:function(){return this.frameElement},getActionEl:function(){return this.frameElement||this.el},onFrameDataAvailable:function(){this.autoMask&&this.setLoading(!1)},setSrc:function(a,b,c){var d=this;return a=a||d.src||d.defaultSrc,a&&d.rendered&&d.frameElement&&(d.autoMask&&d.isVisible(!0)&&d.setLoading(d.maskMessage||"",!0),d.frameElement.setSrc(a,!1,b,c)),d.src=a,d},setLoading:function(a){var b=this;a!==!1?b.el.mask(b.maskMessage||""):b.el.unmask()},initContent:function(){{var a=this;a.data||a.html}a.contentEl&&Ext.isDefined(Ext.global.console)&&Ext.global.console.warn("App.ux.ManagedIframe: 'contentEl' is not supported by this class."),a.tpl&&a.setTpl(a.tpl),delete a.contentEl},setTpl:function(a){return this.tpl=a&&!a.isTemplate?Ext.create("Ext.XTemplate",a):a,this},update:function(a,b,c,d){var e=this,f=a;if((e.tpl&&Ext.isArray(f)||Ext.isObject(f))&&(e.data=f,f=e.tpl.apply(f||{})),e.rendered){e.autoMask&&e.isVisible(!0)&&e.setLoading(e.maskMessage||"");var g=e.getContentTarget();Ext.defer(function(){g.update(f,b,c,d)},e.autoMask?100:10,e,[])}return e},setAutoScroll:function(a){var b,c=this;return Ext.isDefined(a)&&(a=!!a,c.rendered&&(b=c.getContentTarget())&&b.setStyle("overflow",a?"auto":"hidden"),c.autoScroll=a),c},toggleShim:function(a){var b=this;return b.frameShim&&b.frameShim[a?"show":"hide"](),b.frameShim},onDestroy:function(){var a,b=this;(a=b.frameElement)&&a.remove(),b.deleteMembers("frameElement","frameShim"),b.iframeMessageListener&&(window.addEventListener?removeEventListener("message",b.iframeMessageListener,!1):detachEvent("onmessage",b.iframeMessageListener)),b.callParent()}});var MIF=App.ux.ManagedIframe,EC=Ext.cache,DOC=window.document,addListener=function(){var a;a=window.addEventListener?function(a,b,c,d){a.addEventListener(b,c,!!d)}:window.attachEvent?function(a,b,c){a.attachEvent("on"+b,c)}:function(){};return a}(),removeListener=function(){var a;a=window.removeEventListener?function(a,b,c,d){a.removeEventListener(b,c,d)
}:window.detachEvent?function(a,b,c){a.detachEvent("on"+b,c)}:function(){};return a}();Ext.define("App.ux.ManagedIframe.Element",{extend:"Ext.core.Element",alias:"widget.miframeelement",visibilityMode:Element.ASCLASS,eventsFollowFrameLinks:!0,focusOnLoad:Ext.isIE,constructor:function(a){var b,c="string"==typeof a?DOC.getElementById(a):(a||{}).dom||a;return c?(b=c.id,this.dom=c,this.id=b||Ext.id(c),this.dom.name=this.dom.name||this.id,window.frames[this.dom.name]=this.dom,this.dom.manager=this,this._flyweights={},EC[this.id]&&EC[this.id].el?EC[this.id].el=this:Element.addToCache(this),Ext.isGecko||Ext.isWebkit||this.on(Ext.isOpera?"DOMFrameContentLoaded":"readystatechange",this.loadHandler,this,Ext.isOpera?{buffer:this.operaLoadBuffer||2e3}:null),void this.on({dataavailable:function(a){a&&Ext.apply(a,{frameAction:this._frameAction,frameResetting:this.isReset})},load:this.loadHandler,scope:this})):null},getFrameDocument:function(){var a=this.getWindow(),b=null;try{b=a.contentDocument||this.dom.contentDocument||window.frames[this.dom.name].document||a.document}catch(c){b=!1}return b||!1},getDoc:function(){return this.fly(this.getFrameDocument())},getBody:function(){var a;return(a=this.getFrameDocument())?this.get(a.body):null},get:function(a){return this.fly(a)},fly:function(a,b){var c,d=this,e=null,f=d.getFrameDocument();return f&&a?(b=b||"_global",a=Ext.getDom(a,!1,f),a&&(c=Ext.EventManager.getId(a),(d._flyweights[c]=d._flyweights[c]||new MIF.Element.Flyweight).dom=a,e=d._flyweights[c]),e):e},select:function(a){var b;return(b=this.getFrameDocument())?Element.select(a,!1,b):b=null},query:function(a){var b;return(b=this.getFrameDocument())?Ext.DomQuery.select(a,b):b=null},getDocumentURI:function(){var a,b;try{a=this.src&&(b=this.getFrameDocument())?b.location.href:null}catch(c){}return a||(Ext.isFunction(this.src)?this.src():this.src)},getWindowURI:function(){var a,b,c=this;try{a=(b=c.getWindow())?b.location.href:null}catch(d){}return a||(Ext.isFunction(c.src)?c.src():c.src)},getWindow:function(){var a=this.dom,b=null;try{b=a.contentWindow||window.frames[a.name]||null}catch(c){}return b},scrollChildIntoView:function(a,b,c){var d,e=this,f=e.getFrameDocument();return f&&(b=(b?Ext.getDom(b,!0,f):null)||(!Ext.isWebKit&&Ext.isDocumentStrict(f)?f.documentElement:f.body),(d=e.fly(a))&&d.scrollIntoView(b,c)),e},loadHandler:function(a,b,c){a=a||{};var d=this,e="readystatechange"==a.type?(d.dom||{}).readyState:a.type;if(d.eventsFollowFrameLinks||d._frameAction||d.isReset){switch(d.isReset&&a.stopEvent&&a.stopEvent(),e){case"domready":case"DOMFrameContentLoaded":d._onDocReady(e,a),d.fireDOMEvent("domready",null,{message:a.message});break;case"interactive":d.domReady=d.loaded=!1,d.isReset||d.assertOnReady();break;case"complete":d.loaded=!0,d.fireDOMEvent("complete",null,{message:a.message});break;case"load":d.loaded=!0,Ext.apply(a,{frameAction:d._frameAction,frameResetting:d.isReset}),d._onDocLoaded(e,a),d.dispatchCallbacks(a,b,c);break;case"error":d.fireDOMEvent("error",null,{message:a.message}),d._frameAction=!1}d.frameState=e}},_onDocReady:function(){var a=this;a.domReady=!0;try{!a.isReset&&a.focusOnLoad&&a.focus()}catch(b){}a.fireDOMEvent("datasetchanged"),a.isReset||a.domReadyFired||!a._renderHooks()||a.isReset||(a.domReadyFired=!0,a.fireDOMEvent("dataavailable"))},_onDocLoaded:function(){var a=this;!a.isReset&&(!a._frameAction||a.eventsFollowFrameLinks)&&!a.domReady&&a._onDocReady(),a._frameAction=a.domReadyFired=a.isReset=a.domReady=!1,a._targetURI=null},createEvent:document.createEvent?function(a,b,c,d){d=d||{bubbles:!0,cancelable:!1},b=b||"Event";var e=document.createEvent(b);return e.initEvent(a,!!Ext.value(d.bubbles,!0),!!Ext.value(d.cancelable,!1)),e}:function(a,b,c,d){d=d||{type:"on"+a,bubbles:!0,cancelable:!1};var e=document.createEventObject(c);return Ext.apply(e,d)},dispatchEvent:document.createEvent?function(a){return this.dom?!this.dom.dispatchEvent(a):null}:function(a,b){return this.dom?this.dom.fireEvent("on"+b,a):null},fireDOMEvent:function(a,b,c){return this.dispatchEvent(this.createEvent(a,null,b,c),a,c)},_renderHooks:function(){var a=this;a._windowContext=null,Ext.destroy(a.CSS),delete a.CSS,a._hooked=!1;try{if(a.writeScript('(function(){(window.hostMIF = parent.document.getElementById("'+a.id+'").manager)._windowContext='+(Ext.isIE?"window":'{eval:function(s){return new Function("return ("+s+")")();}}')+";})()")){var b,c=addListener,d=a._frameProxy||(a._frameProxy=Ext.bind(MIF.Element.eventProxy,a)),e=a.getFrameDocument();e&&(b=a.getWindow())&&(c(Ext.isIE?e.body||e.documentElement:b,"focus",d),c(Ext.isIE?e.body||e.documentElement:b,"blur",d),c(b,"resize",d),c(b,"beforeunload",d))}}catch(f){}return a._hooked=a.domWritable()},domWritable:function(){return!!this._windowContext&&!!this.getFrameDocument()},_unHook:function(){var a=this;if(a._hooked){try{a._windowContext&&(a._windowContext.hostMIF=null)}catch(b){}a._windowContext=null;var c,d=removeListener,e=a._frameProxy,f=a.getFrameDocument();e&&f&&(c=a.getWindow())&&(d(Ext.isIE?f.body||f.documentElement:c,"focus",e),d(Ext.isIE?f.body||f.documentElement:c,"blur",e),d(c,"resize",e),d(c,"beforeunload",e))}a._flyweights={},Ext.destroy(a.CSS),delete a.CSS,a._frameAction=a.domReady=a.domFired=a._hooked=!1},submitAsTarget:function(a){var b=a||{},c=this.getParentDocument(),d=Ext.getDom(b.form?b.form.form||b.form:null,!1,c)||Ext.DomHelper.append(c.body,{tag:"form",cls:"x-hide-offsets x-mif-form",encoding:"multipart/form-data"}),e=Ext.fly(d,"_dynaForm"),f={target:d.target||"",method:d.method||"",encoding:d.encoding||"",enctype:d.enctype||"",action:d.action||""},g=b.encoding||d.encoding,h=b.method||d.method||"POST";e.set({target:this.dom.name,method:h,encoding:g,action:b.url||b.action||d.action}),("POST"==h||b.enctype)&&e.set({enctype:b.enctype||d.enctype||g});var i,j,k;return b.params&&(k=Ext.isFunction(b.params)?b.params():b.params)&&(i=[],Ext.iterate(k="string"==typeof k?Ext.urlDecode(k,!1):k,function(a,b){Ext.fly(j=D.createElement("input")).set({type:"hidden",name:a,value:b}),d.appendChild(j),i.push(j)})),Ext.isFunction(b.callback)&&this.on("datasetchanged",b.callback,b.scope||this,{single:!0,submitOptions:b}),this._frameAction=!0,this._targetURI=location.href,d.submit(),i&&Ext.each(i,Ext.removeNode,Ext),e.hasClass("x-mif-form")?e.remove():e.set(f),e=null,this},resetUrl:function(){return Ext.isIE&&Ext.isSecure?Ext.SSL_SECURE_URL:"about:blank"}(),setSrc:function(a,b,c,d){var e=a||this.src||this.resetUrl;Ext.isFunction(c)&&this.queueCallback(c,d||this),b!==!0&&(this.src=e);var f=this._targetURI=Ext.isFunction(e)?e()||"":e;try{this._frameAction=!0,this.dom.src=f,Ext.isIE||this.assertOnReady()}catch(g){}return this},setLocation:function(a,b,c,d){var e=this,f=a||e.src||e.resetUrl;e._unHook(),Ext.isFunction(c)&&e.queueCallback(c,d);var g=e._targetURI=Ext.isFunction(f)?f()||"":f;b!==!0&&(e.src=f);try{e._frameAction=!0,e.getWindow().location.replace(g),Ext.isIE||e.assertOnReady()}catch(h){}return e},reset:function(a,b,c){var d,e=this,f=a;return e._unHook(),(d=e.getWindow())&&(e.isReset=e._frameAction=!0,Ext.isFunction(b)&&e.queueCallback(b,c),Ext.isFunction(a)&&(f=a()),f=e._targetURI=Ext.isEmpty(f,!0)?e.resetUrl:f,d.location.href=f),e},queueCallback:function(a,b){var c=this;return c.callbacks=c.callbacks||[],c.callbacks.push(b?Ext.bind(a,b||c):a),c},dispatchCallbacks:function(a,b,c){var d=this;if(d.callbacks&&d.callbacks.length)for(;d.callbacks.length;)d.callbacks.shift()(a,b,c)},scriptRE:/(?:<script.*?>)((\n|\r|.)*?)(?:<\/script>)/gi,update:function(a,b,c,d){var e=this;a=DomHelper.markup(a||""),a=b!==!1?a:a.replace(e.scriptRE,"");var f;return(f=e.getFrameDocument())&&a.length?(e._unHook(),e.src=null,Ext.isFunction(c)&&e.queueCallback(c,d||this),e._targetURI=null,e._frameAction=!0,f.open(),f.write(a),e.assertOnReady(),f.close()):Ext.callback(c,d||e),e},execCommand:function(a,b,c,d){var e,f;if((e=this.getFrameDocument())&&a)try{return Ext.isIE&&this.focus(),f=d&&Ext.isFunction(e.queryCommandEnabled)?e.queryCommandEnabled(a):!0,f&&e.execCommand(a,!!b,c)}catch(g){return!1}return!1},setDesignMode:function(a){var b;return(b=this.getFrameDocument())&&(b.designMode=/on|true/i.test(String(a))?"On":"Off"),this},print:function(){try{var a;(a=this.getWindow())&&(Ext.isIE&&a.focus(),a.print())}catch(b){var c=this.statics().Error;c.raise({msg:c.message.printexception||b.description||b.message,error:b,win:a})}return this},writeScript:function(a,b){b=Ext.apply({},b||{},{type:"text/javascript",text:a});try{var c,d,e=this.getFrameDocument();if(e&&"undefined"!=typeof e.getElementsByTagName&&((c=e.getElementsByTagName("head")[0])||(c=e.createElement("head"),e.getElementsByTagName("html")[0].appendChild(c)),c&&(d=e.createElement("script")))){for(var f in b)b.hasOwnProperty(f)&&f in d&&(d[f]=b[f]);return!!c.appendChild(d)}}catch(g){}finally{d=c=null}return!1},execScript:function(a,b){var c=this;try{if(!c.domWritable()){var d=this.statics().Error;throw new d({msg:d.message["execscript-secure-context"],script:a})}if(!b)return c._windowContext.eval(a);c.writeScript(a)}catch(e){return!1}return!0},loadFunction:function(a,b,c){var d=a.name||a,e=a.fn||window[a];d&&e&&this.execScript(d+"="+e,b),c&&this.execScript(d+"()")},assertOnReady:function(){if(!Ext.isGecko&&!this.isReset){var a,b,c,d,e=0,f=this,g=!1,h=this.domReadyRetries||5e3,i=!1,j=(this.getFrameDocument()||{location:{}}).location.href,k=/undefined|unknown/i,l=function(m){if(!this.domReady){if(b=this.getFrameDocument()){d=b.location.href||"",i=!m||d&&(d!=j||d.indexOf(m)>-1),c=0;try{c=k.test(typeof b.fileSize)?0:parseFloat(b.fileSize)}catch(n){}if(g=!!c||i&&(a=b.body)&&!!(a.innerHTML||"").length)return f.loadHandler.call(f,{type:"domready"})}f.loaded||++e>h||Ext.defer(l,2,f,slice.call(arguments,0))}};l.call(f,f._targetURI)}},focus:function(a){var b=this,c=b.getWindow();if(c)try{Number(a)?Ext.defer(b.focus,a,b,[null]):c.focus()}catch(d){}return c=null,b},blur:function(){var a=this,b=a.getWindow();if(b)try{b.blur()}catch(c){}return b=null,a},remove:function(){var a=this,b=a.dom;b&&(a.reset(),Ext.removeNode(b),delete a.dom)},statics:{addMethods:function(a){Ext.apply(MIF.Element.prototype,a)},DOMFrameReadyHandler:function(a){var b;try{b=a.target?a.target.manager:null}catch(c){}b&&b.loadHandler.call(b,a)},eventProxy:function(a){if(a){var b,c;if(!a.eventPhase||a.eventPhase==(a.AT_TARGET||2))switch(a.type){case"blur":case"focus":c="UIEvents";case"resize":if(Ext.isIE)break;case"scroll":b=this.dispatchEvent(this.createEvent(a.type,c||"HTMLEvents"),a.type);break;case"unload":case"beforeunload":this._unHook()}return b}},Flyweight:Element.Flyweight,getParentDocument:Element.getParentDocument,isDocumentStrict:function(a){return a&&a.compatMode&&"BackCompat"!=a.compatMode},getDocumentHeight:function(a){a=a||window;var b=this.getParentDocument(a);return Math.max(this.isDocumentStrict(b)?b.documentElement.scrollHeight:b.body.scrollHeight,this.getViewportHeight(a))},getDocumentWidth:function(a){a=a||window;var b=this.getParentDocument(a);return Math.max(this.isDocumentStrict(b)?b.documentElement.scrollWidth:b.body.scrollWidth,this.getViewportWidth(a))},getViewportHeight:function(a){return(a||window).innerHeight},getViewportWidth:function(a){return(a||window).innerWidth},getViewSize:function(a){return a=a||window,{width:this.getViewportWidth(a),height:this.getViewportHeight(a)}},fromPoint:function(a,b,c){return c=this.getParentDocument(c||document),c?Ext.fly(c.elementFromPoint(a,b),"_fromPoint"):null}}}),Ext.define("App.ux.ManagedIframe.Error",{extend:"Ext.Error",name:"App.ux.ManagedIframe.Error",statics:{raise:Ext.Error.raise,ignore:!1,handle:function(){return this.ignore},message:{"execscript-secure-context":"An attempt was made at script execution within a document context with restricted access.",printexception:"An Error was encountered attempting the print the frame contents (document access is likely restricted)."}}}),MIF.Element.addStatics({Error:App.ux.ManagedIframe.Error}),window.addEventListener&&(window.addEventListener("DOMFrameContentLoaded",MIF.Element.DOMFrameReadyHandler,!1),Ext.EventManager.on(window,"beforeunload",function(){window.removeEventListener("DOMFrameContentLoaded",MIF.Element.DOMFrameReadyHandler,!1)}))}(),Ext.define("App.ux.form.Panel",{extend:"Ext.form.Panel",alias:"widget.mitos.form",bodyStyle:"padding: 10px;",autoWidth:!0,border:!1}),Ext.define("App.ux.grid.DeleteColumn",{extend:"Ext.grid.column.Action",xtype:"griddeletecolumn",icon:"resources/images/icons/delete.png",tooltip:_("delete"),acl:"*",width:30,handler:function(grid,rowIndex,colIndex,item,e,record){this.acl===!1||eval(a(this.acl))===!0?Ext.Msg.show({title:_("wait"),msg:_("delete_record_confirmation"),buttons:Ext.Msg.YESNO,icon:Ext.Msg.QUESTION,fn:function(a){"yes"==a&&record.store.remove(record)}}):app.msg(_("oops"),_("permission_denied"),!0)}}),Ext.define("App.ux.grid.EventHistory",{extend:"Ext.grid.Panel",alias:"widget.mitos.eventhistorygrid",initComponent:function(){Ext.apply(this,{columns:[{header:_("date"),dataIndex:"date",width:140,renderer:Ext.util.Format.dateRenderer("Y-m-d g:i:s a")},{header:_("user"),dataIndex:"user",width:150},{header:_("event"),dataIndex:"event",flex:1}]},null),this.callParent(arguments)}}),Ext.define("App.ux.combo.ActiveFacilities",{extend:"Ext.form.ComboBox",xtype:"activefacilitiescombo",storeAutoLoad:!0,editable:!1,queryMode:"local",valueField:"option_value",displayField:"option_name",emptyText:_("select"),initComponent:function(){var a=this;Ext.define("ActiveFacilitiesComboModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"int"}],proxy:{type:"direct",api:{read:"CombosData.getActiveFacilities"}}}),a.store=Ext.create("Ext.data.Store",{model:"ActiveFacilitiesComboModel",autoLoad:a.storeAutoLoad}),a.callParent(arguments)}}),Ext.define("App.ux.grid.RowFormEditor",{extend:"Ext.form.Panel",requires:["Ext.tip.ToolTip","Ext.util.HashMap","Ext.util.KeyNav"],saveBtnText:"Update",cancelBtnText:"Cancel",removeBtnText:"Remove",errorsText:"Errors",dirtyText:"Commit Cancel Your Changes",lastScrollLeft:0,lastScrollTop:0,bodyPadding:5,padding:"0 0 5 0",border:!1,saveBtnEnabled:!1,buttonAlign:"center",hideMode:"offsets",errorSummary:!1,style:"background-color:#E0E0E0",initComponent:function(){var a,b,c=this;c.cls=Ext.baseCSSPrefix+"grid-row-editor grid-row-form-editor",c.currRowH=null,b=c.editingPlugin,c.items=b.items,c.fieldDefaults=b.fieldDefaults;var d=[{action:"update",xtype:"button",itemId:"update",handler:b.completeEdit,scope:b,text:c.saveBtnText,disabled:!c.isValid},{xtype:"button",itemId:"cancel",handler:b.cancelEdit,scope:b,text:c.cancelBtnText}];b.enableRemove&&d.push({xtype:"button",itemId:"remove",handler:b.completeRemove,scope:b,text:c.removeBtnText}),c.dockedItems=[{xtype:"toolbar",dock:"bottom",ui:"footer",margin:0,layout:{pack:"center"},cls:"x-grid-row-editor x-panel-body",style:"border-top:none !important",defaults:{minWidth:Ext.panel.Panel.prototype.minButtonWidth},items:d}],c.callParent(arguments),a=c.getForm(),c.setFields(),a.trackResetOnLoad=!0,c.floatingButtons=c.getDockedItems('toolbar[dock="bottom"]')[0]},onFieldValueChange:function(){var a,b=this,c=b.getForm(),d=c.isValid();b.errorSummary&&b.isVisible()&&b[d?"hideToolTip":"showToolTip"](),a=b.query('button[action="update"]')[0],a&&a.setDisabled(!d),b.isValid=d},afterRender:function(){var a=this,b=a.editingPlugin,c=b.grid,d=c.lockable?c.normalGrid.view:c.view;a.callParent(arguments),a.scrollingView=d,a.scrollingViewEl=d.el,a.mon(a.renderTo,"scroll",a.onCtScroll,a,{buffer:100}),a.mon(a.el,{click:Ext.emptyFn,stopPropagation:!0}),a.el.swallowEvent(["keypress","keydown"]),a.keyNav=new Ext.util.KeyNav(a.el,{esc:b.onEscKey,scope:b}),a.mon(b.view,{beforerefresh:a.onBeforeViewRefresh,refresh:a.onViewRefresh,scope:a})},onBeforeViewRefresh:function(a){var b=this,c=a.el.dom;b.el.dom.parentNode===c&&c.removeChild(b.el.dom)},onViewRefresh:function(a){var b,c=this,d=a.el.dom,e=c.context;d.appendChild(c.el.dom),e&&(b=e.store.indexOf(e.record))>=0?(e.row=a.getNode(b),c.reposition(),c.tooltip&&c.tooltip.isVisible()&&c.tooltip.setTarget(e.row)):c.editingPlugin.cancelEdit()},onCtScroll:function(a,b){var c=this,d=b.scrollTop,e=b.scrollLeft;d!==c.lastScrollTop&&(c.lastScrollTop=d,(c.tooltip&&c.tooltip.isVisible()||c.hiddenTip)&&c.repositionTip()),e!==c.lastScrollLeft&&(c.lastScrollLeft=e,c.reposition())},reposition:function(a){this.currRowH&&this.currRow.setHeight(this.currRowH);var b,c,d=this,e=d.context,f=e&&Ext.get(e.row),g=d.editingPlugin.grid,h=g.view.el,i=g.verticalScroller,j=g.headerCt.getFullWidth(),k=g.getWidth(),l=(Math.min(j,k),g.view.el.dom.scrollLeft,function(){i&&(i.invalidate(),btnEl.scrollIntoView(h,!1)),a&&a.callback&&a.callback.call(a.scope||d)});if(f&&Ext.isElement(f.dom))if(f.scrollIntoView(h,!1),b=f.getXY()[1]+19,d.currRowH=f.getHeight(),d.currRow=f,f.setHeight(d.getHeight()+19),Ext.isIE&&(c+=2),a){var m={to:{y:b},duration:a.duration||125,listeners:{afteranimate:function(){l(),b=f.getXY()[1]+19,d.el.setY(b)}}};d.animate(m)}else d.el.setY(b),l();d.getWidth()!=j&&d.setWidth(j)},resizeEditor:function(){this.currRowH&&this.currRow.setHeight(this.currRowH);{var a,b,c=this,d=c.context,e=d&&Ext.get(d.row),f=c.editingPlugin.grid,g=f.view.el,h=(f.verticalScroller,f.headerCt.getFullWidth()),i=f.getWidth();Math.min(h,i),f.view.el.dom.scrollLeft}e&&Ext.isElement(e.dom)&&(e.scrollIntoView(g,!1),a=e.getXY()[1]+19,c.currRowH=e.getHeight(),c.currRow=e,e.setHeight(c.getHeight()+19),Ext.isIE&&(b+=2)),c.getWidth()!=h&&c.setWidth(h)},getGridStores:function(){for(var a=this,b=a.query("grid"),c=[],d=0;d<b.length;d++)c.push(b[d].store);return c},syncChildStoresChanges:function(){for(var a=this,b=a.getGridStores(),c=0;c<b.length;c++)b[c].sync()},rejectChildStoresChanges:function(){for(var a=this,b=a.getGridStores(),c=0;c<b.length;c++)b[c].rejectChanges()},getEditor:function(a){var b=this;return Ext.isNumber(a)?b.query(">[isFormField]")[a]:a instanceof Ext.grid.column.Column?a.getEditor():!1},setFields:function(){for(var a=this,b=a.getForm(),c=b.getFields().items,d=a.query("container"),e=0;e<c.length;e++)a.mon(c[e],"change",a.onFieldValueChange,a);for(var f=0;f<d.length;f++)a.mon(d[f],"resize",a.resizeEditor,a)},loadRecord:function(a){var b=this,c=b.getForm(),d=b.query('button[action="update"]')[0],e=a.phantom?"Save":"Update";b.editingPlugin.fireEvent("beforerecordload",b,a),c.loadRecord(a),b.editingPlugin.fireEvent("recordload",b,a),d.setText(e),b.saveBtnEnabled&&d.setDisabled(!b.saveBtnEnabled),this.errorSummary&&(c.isValid()?b.hideToolTip():b.showToolTip()),Ext.Array.forEach(b.query(">displayfield"),function(c){b.renderColumnData(c,a)},b)},renderColumnData:function(a,b){var c=this,d=c.editingPlugin.grid,e=(d.headerCt,d.view),f=(e.store,c.getForm());f.loadRecord(b)},beforeEdit:function(){var a=this;return a.getGridStores(),a.isVisible()&&!a.autoCancel&&a.isDirty()?(a.showToolTip(),!1):void 0},startEdit:function(a){var b=this,c=b.editingPlugin.grid,d=(c.getView(),c.store),e=b.context=Ext.apply(b.editingPlugin.context,{view:c.getView(),store:d});e.grid.getSelectionModel().select(a),b.loadRecord(a),b.isVisible()?b.reposition({callback:this.focusContextCell}):(b.show(),b.focusContextCell())},focusContextCell:function(){var a=this.getEditor(this.context.colIdx);a&&a.focus&&a.focus()},cancelEdit:function(){var a=this,b=a.getForm();a.rejectChildStoresChanges(),a.hide(),b.clearInvalid(),b.reset()},completeEdit:function(){var a=this,b=a.getForm();if(b.isValid())return a.context.record.set(a.context.newValues),a.editingPlugin.autoSync&&a.context.record.store.sync({callback:function(){a.fireEvent("sync",a,a.context)}}),a.syncChildStoresChanges(),a.hide(),!0},completeRemove:function(){var a=this,b=a.getForm(),c=a.context.view,d=a.context.store,e=c.getSelectionModel().getLastSelected();c.panel.fireEvent("beforeremove",a,d,e)&&Ext.Msg.show({title:"WAIT!!!",msg:"Are you sure you want to remove this record?",buttons:Ext.Msg.YESNO,icon:Ext.Msg.QUESTION,scope:a,fn:function(f){"yes"==f&&(e.parentNode?e.parentNode.removeChild(e):d.remove(e),c.panel.fireEvent("remove",a,d,e),a.hide(),b.clearInvalid(),b.reset(),a.editingPlugin.autoSync&&d.sync({callback:function(){a.fireEvent("sync",a,a.context)}}))}})},onShow:function(){var a=this;a.callParent(arguments),a.reposition()},onHide:function(){var a=this;a.callParent(arguments),a.hideToolTip(),a.invalidateScroller(),a.context&&(a.context.view.focus(),a.context=null),a.currRow.setHeight(a.currRowH),a.currRowH=null},isDirty:function(){var a=this,b=a.getForm();return b.isDirty()},getToolTip:function(){return this.tooltip||(this.tooltip=new Ext.tip.ToolTip({cls:Ext.baseCSSPrefix+"grid-row-editor-errors",title:this.errorsText,autoHide:!1,closable:!0,closeAction:"disable",anchor:"left",anchorToTarget:!1}))},hideToolTip:function(){var a=this,b=a.getToolTip();b.rendered&&b.disable(),a.hiddenTip=!1},showToolTip:function(){var a=this,b=a.getToolTip();b.showAt([0,0]),b.update(a.getErrors()),a.repositionTip(),b.enable()},repositionTip:function(){var a=this,b=a.getToolTip(),c=a.context,d=Ext.get(c.row),e=a.scrollingViewEl,f=e.dom.clientHeight,g=a.lastScrollTop,h=g+f,i=d.getHeight(),j=d.getOffsetsTo(a.context.view.body)[1],k=j+i;k>g&&h>j?(b.showAt(b.getAlignToXY(e,"tl-tr",[15,d.getOffsetsTo(e)[1]])),a.hiddenTip=!1):(b.hide(),a.hiddenTip=!0)},getErrors:function(){var a,b=this,c=[],d=b.query("[isFormField]"),e=d.length;for(a=0;e>a;a++)c=c.concat(Ext.Array.map(d[a].getErrors(),b.createErrorListItem));return c.length||b.autoCancel||!b.isDirty()||(c[0]=b.createErrorListItem(b.dirtyText)),'<ul class="'+Ext.plainListCls+'">'+c.join("")+"</ul>"},createErrorListItem:function(a){return'<li class="'+Ext.baseCSSPrefix+'grid-row-editor-errors-item">'+a+"</li>"},invalidateScroller:function(){var a=this,b=a.context,c=b.grid.verticalScroller;c&&c.invalidate()}}),Ext.define("App.ux.combo.ActiveInsurances",{extend:"Ext.form.ComboBox",xtype:"activeinsurancescombo",editable:!1,displayField:"option_name",valueField:"option_value",emptyText:_("select"),initComponent:function(){var a=this;Ext.define("ActiveInsurancesComboModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:"CombosData.getActiveInsurances"}}}),a.store=Ext.create("Ext.data.Store",{model:"ActiveInsurancesComboModel",autoLoad:!0}),a.callParent()}}),Ext.define("App.ux.combo.ActiveProviders",{extend:"Ext.form.ComboBox",xtype:"activeproviderscombo",displayField:"option_name",valueField:"option_value",editable:!1,emptyText:_("select"),initComponent:function(){var a=this;Ext.define("ActiveProvidersModel"+this.id,{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"title",type:"string"},{name:"fname",type:"string"},{name:"mname",type:"string"},{name:"lname",type:"string"},{name:"fullname",type:"string",convert:function(a,b){return b.data.title+" "+b.data.lname+", "+b.data.fname+" "+b.data.mname}},{name:"option_name",type:"string",convert:function(a,b){return b.data.title+" "+b.data.lname+", "+b.data.fname+" "+b.data.mname}},{name:"option_value",type:"int",convert:function(a,b){return b.data.id}}],proxy:{type:"direct",api:{read:"User.getActiveProviders"}}}),a.store=Ext.create("Ext.data.Store",{model:"ActiveProvidersModel"+this.id,autoLoad:!0}),a.callParent(arguments)}}),Ext.define("App.ux.combo.Allergies",{extend:"Ext.form.ComboBox",alias:"widget.mitos.allergiescombo",initComponent:function(){var a=this;Ext.define("AllergiesComboModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"allergy_name"},{name:"allergy_type",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getAllergiesByType}}}),a.store=Ext.create("Ext.data.Store",{model:"AllergiesComboModel",autoLoad:!1}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"allergy_name",valueField:"allergy_name",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.AllergiesAbdominal",{extend:"Ext.form.ComboBox",alias:"widget.mitos.allergiesabdominalcombo",initComponent:function(){var a=this;Ext.define("allergiesabdominalModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:"CombosData.getOptionsByListId"}}}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:Ext.create("Ext.data.Store",{model:"allergiesabdominalModel",autoLoad:!1})}),a.callParent(arguments)}}),Ext.define("App.ux.combo.AllergiesLocation",{extend:"Ext.form.ComboBox",alias:"widget.mitos.allergieslocationcombo",initComponent:function(){var a=this;Ext.define("allergieslocationModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:"CombosData.getOptionsByListId"},extraParams:{list_id:79}}}),a.store=Ext.create("Ext.data.Store",{model:"allergieslocationModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.AllergiesSeverity",{extend:"Ext.form.ComboBox",alias:"widget.mitos.allergiesseveritycombo",initComponent:function(){var a=this;Ext.define("allergiesseverityModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:84}}}),a.store=Ext.create("Ext.data.Store",{model:"allergiesseverityModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.AllergiesTypes",{extend:"Ext.form.ComboBox",alias:"widget.mitos.allergiestypescombo",initComponent:function(){var a=this;Ext.define("AllergiesTypesComboModel",{extend:"Ext.data.Model",fields:[{name:"allergy_type",type:"string"}],proxy:{type:"direct",api:{read:"CombosData.getAllergyTypes"}}}),a.store=Ext.create("Ext.data.Store",{model:"AllergiesTypesComboModel",autoLoad:!1}),Ext.apply(this,{editable:!1,displayField:"allergy_type",valueField:"allergy_type",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.Authorizations",{extend:"Ext.form.ComboBox",alias:"widget.mitos.authorizationscombo",initComponent:function(){var a=this;Ext.define("AuthorizationsModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"name",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getAuthorizations}}}),a.store=Ext.create("Ext.data.Store",{model:"AuthorizationsModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",valueField:"id",displayField:"name",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.BillingFacilities",{extend:"Ext.form.ComboBox",alias:"widget.mitos.billingfacilitiescombo",initComponent:function(){var a=this;Ext.define("BillingFacilitiesComboModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"int"}],proxy:{type:"direct",api:{read:"CombosData.getBillingFacilities"}}}),a.store=Ext.create("Ext.data.Store",{model:"BillingFacilitiesComboModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",valueField:"option_value",displayField:"option_name",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.CalendarCategories",{extend:"Ext.form.ComboBox",alias:"widget.mitos.calcategoriescombobox",editable:!1,displayField:"catname",valueField:"catid",emptyText:_("select"),initComponent:function(){var a=this;Ext.define("CalendarCategoriesModel",{extend:"Ext.data.Model",fields:[{name:"catid",type:"int"},{name:"catname",type:"string"}],idProperty:"catid",proxy:{type:"direct",api:{read:CombosData.getCalendarCategories}}}),a.store=Ext.create("Ext.data.Store",{model:"CalendarCategoriesModel",autoLoad:!0}),Ext.apply(this,{store:a.store},null),a.callParent()}}),Ext.define("App.ux.combo.CalendarStatus",{extend:"Ext.form.ComboBox",alias:"widget.mitos.calstatuscombobox",name:"status",initComponent:function(){var a=this;Ext.define("CalendarStatusModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:30}}}),a.store=Ext.create("Ext.data.Store",{model:"CalendarStatusModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent()}}),Ext.define("App.ux.combo.CodesTypes",{extend:"Ext.form.ComboBox",alias:"widget.mitos.codestypescombo",initComponent:function(){var a=this;Ext.define("CodesTypesModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:"CombosData.getOptionsByListId"},extraParams:{list_id:56}}}),a.store=Ext.create("Ext.data.Store",{model:"CodesTypesModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",valueField:"option_value",displayField:"option_name",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.Combo",{extend:"Ext.form.ComboBox",alias:"widget.gaiaehr.combo",displayField:"option_name",valueField:"option_value",emptyText:_("select"),forceSelection:!1,list:null,loadStore:!1,valueDataType:"string",initComponent:function(){var a=this,b=a.id+"ComboModel";Ext.define(b,{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:a.valueDataType},{name:"code",type:"string"},{name:"code_type",type:"string"},{name:"color",type:"string"},{name:"extraListClass",type:"string"},{name:"bg_color",type:"string",convert:function(b,c){if("bgcolor"==c.data.code_type){var d=c?c.data.code:"#FFFFFF";return c.set({color:a.getContrastYIQ(d),extraListClass:"listwith"}),d}}}],proxy:{type:"direct",api:{read:"CombosData.getOptionsByListId"},extraParams:{list_id:a.list}},idProperty:"option_value"}),a.store=Ext.create("Ext.data.Store",{model:b,autoLoad:a.loadStore}),a.listConfig={itemTpl:new Ext.XTemplate('<tpl if="this.hasColorBg(code_type)">   <div class="combo-list-icon" style="background-color:{bg_color}">&#160;</div>{option_name}',"<tpl else>   {option_name}","</tpl>",{hasColorBg:function(a){return"bgcolor"==a}})},a.callParent(arguments),a.on("change",function(b,c){a.setFieldBgColor(b,c)})},setFieldBgColor:function(a,b){var c=this;Ext.Function.defer(function(){var d=a.findRecordByValue(b);if(a.getStore().isLoading()){if(a.tries=a.tries?a.tries+1:1,a.tries>2)return;Ext.Function.defer(function(){c.setFieldBgColor(a,b)},1e3)}else if(d!==!1&&"bgcolor"==d.data.code_type)a.inputEl.setStyle({"background-color":d.data.bg_color,"background-image":"none",color:d.data.color});else{if(a.tries=a.tries?a.tries+1:1,a.tries>2)return;Ext.Function.defer(function(){c.setFieldBgColor(a,b)},1e3)}},100)},getContrastYIQ:function(a){"#"!=a[0]&&(a=this.getHexColor(a)),a=a.replace("#","");var b=parseInt(a.substr(0,2),16),c=parseInt(a.substr(2,2),16),d=parseInt(a.substr(4,2),16),e=(299*b+587*c+114*d)/1e3;return e>=129?"black":"white"},getHexColor:function(a){a=a.toLowerCase();var b={aliceblue:"#f0f8ff",antiquewhite:"#faebd7",aqua:"#00ffff",aquamarine:"#7fffd4",azure:"#f0ffff",beige:"#f5f5dc",bisque:"#ffe4c4",black:"#000000",blanchedalmond:"#ffebcd",blue:"#0000ff",blueviolet:"#8a2be2",brown:"#a52a2a",burlywood:"#deb887",cadetblue:"#5f9ea0",chartreuse:"#7fff00",chocolate:"#d2691e",coral:"#ff7f50",cornflowerblue:"#6495ed",cornsilk:"#fff8dc",crimson:"#dc143c",cyan:"#00ffff",darkblue:"#00008b",darkcyan:"#008b8b",darkgoldenrod:"#b8860b",darkgray:"#a9a9a9",darkgrey:"#a9a9a9",darkgreen:"#006400",darkkhaki:"#bdb76b",darkmagenta:"#8b008b",darkolivegreen:"#556b2f",darkorange:"#ff8c00",darkorchid:"#9932cc",darkred:"#8b0000",darksalmon:"#e9967a",darkseagreen:"#8fbc8f",darkslateblue:"#483d8b",darkslategray:"#2f4f4f",darkslategrey:"#2f4f4f",darkturquoise:"#00ced1",darkviolet:"#9400d3",deeppink:"#ff1493",deepskyblue:"#00bfff",dimgray:"#696969",dimgrey:"#696969",dodgerblue:"#1e90ff",firebrick:"#b22222",floralwhite:"#fffaf0",forestgreen:"#228b22",fuchsia:"#ff00ff",gainsboro:"#dcdcdc",ghostwhite:"#f8f8ff",gold:"#ffd700",goldenrod:"#daa520",gray:"#808080",grey:"#808080",green:"#008000",greenyellow:"#adff2f",honeydew:"#f0fff0",hotpink:"#ff69b4",indianred:"#cd5c5c",indigo:"#4b0082",ivory:"#fffff0",khaki:"#f0e68c",lavender:"#e6e6fa",lavenderblush:"#fff0f5",lawngreen:"#7cfc00",lemonchiffon:"#fffacd",lightblue:"#add8e6",lightcoral:"#f08080",lightcyan:"#e0ffff",lightgoldenrodyellow:"#fafad2",lightgray:"#d3d3d3",lightgrey:"#d3d3d3",lightgreen:"#90ee90",lightpink:"#ffb6c1",lightsalmon:"#ffa07a",lightseagreen:"#20b2aa",lightskyblue:"#87cefa",lightslategray:"#778899",lightslategrey:"#778899",lightsteelblue:"#b0c4de",lightyellow:"#ffffe0",lime:"#00ff00",limegreen:"#32cd32",linen:"#faf0e6",magenta:"#ff00ff",maroon:"#800000",mediumaquamarine:"#66cdaa",mediumblue:"#0000cd",mediumorchid:"#ba55d3",mediumpurple:"#9370d8",mediumseagreen:"#3cb371",mediumslateblue:"#7b68ee",mediumspringgreen:"#00fa9a",mediumturquoise:"#48d1cc",mediumvioletred:"#c71585",midnightblue:"#191970",mintcream:"#f5fffa",mistyrose:"#ffe4e1",moccasin:"#ffe4b5",navajowhite:"#ffdead",navy:"#000080",oldlace:"#fdf5e6",olive:"#808000",olivedrab:"#6b8e23",orange:"#ffa500",orangered:"#ff4500",orchid:"#da70d6",palegoldenrod:"#eee8aa",palegreen:"#98fb98",paleturquoise:"#afeeee",palevioletred:"#d87093",papayawhip:"#ffefd5",peachpuff:"#ffdab9",peru:"#cd853f",pink:"#ffc0cb",plum:"#dda0dd",powderblue:"#b0e0e6",purple:"#800080",red:"#ff0000",rosybrown:"#bc8f8f",royalblue:"#4169e1",saddlebrown:"#8b4513",salmon:"#fa8072",sandybrown:"#f4a460",seagreen:"#2e8b57",seashell:"#fff5ee",sienna:"#a0522d",silver:"#c0c0c0",skyblue:"#87ceeb",slateblue:"#6a5acd",slategray:"#708090",slategrey:"#708090",snow:"#fffafa",springgreen:"#00ff7f",steelblue:"#4682b4",tan:"#d2b48c",teal:"#008080",thistle:"#d8bfd8",tomato:"#ff6347",turquoise:"#40e0d0",violet:"#ee82ee",wheat:"#f5deb3",white:"#ffffff",whitesmoke:"#f5f5f5",yellow:"#ffff00",yellowgreen:"#9acd32"},c=b[a];
return void 0===c?"Invalid Color Name":c}}),Ext.define("App.ux.combo.CVXManufacturers",{extend:"Ext.form.ComboBox",alias:"widget.cvxmanufacturerscombo",initComponent:function(){var a=this;Ext.define("CVXManufacturersComboModel",{extend:"Ext.data.Model",fields:[{name:"mvx_code",type:"string"},{name:"manufacturer",type:"string"}],proxy:{type:"direct",api:{read:Immunizations.getMvx}}}),a.store=Ext.create("Ext.data.Store",{model:"CVXManufacturersComboModel",autoLoad:!1}),Ext.apply(this,{editable:!1,valueField:"mvx_code",displayField:"manufacturer",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.CVXManufacturersForCvx",{extend:"Ext.form.ComboBox",alias:"widget.cvxmanufacturersforcvxcombo",initComponent:function(){var a=this;Ext.define("CVXManufacturersForCvxComboModel",{extend:"Ext.data.Model",fields:[{name:"mvx_code",type:"string"},{name:"manufacturer",type:"string"}],proxy:{type:"direct",api:{read:"Immunizations.getMvxForCvx"}}}),a.store=Ext.create("Ext.data.Store",{model:"CVXManufacturersForCvxComboModel",autoLoad:!1}),Ext.apply(this,{queryMode:"local",valueField:"mvx_code",displayField:"manufacturer",emptyText:_("select"),store:a.store}),a.callParent(arguments)}}),Ext.define("App.ux.combo.EncounterICDS",{extend:"Ext.form.ComboBox",alias:"widget.encountericdscombo",initComponent:function(){var a=this;Ext.define("EncounterICDXComboModel",{extend:"Ext.data.Model",fields:[{name:"code",type:"string"},{name:"code_type",type:"string"},{name:"short_desc",type:"string"},{name:"code_and_code_type",type:"string",convert:function(a,b){return b.data.code_type+":"+b.data.code}}],proxy:{type:"direct",api:{read:"Encounter.getEncounterDxs"}}}),Ext.apply(this,{queryMode:"local",editable:!1,multiSelect:!0,displayField:"code_and_code_type",valueField:"code_and_code_type",emptyText:_("select"),store:Ext.create("Ext.data.Store",{model:"EncounterICDXComboModel",autoLoad:!1}),listConfig:{getInnerTpl:function(){return'<span style="font-weight:bold">{code}</span> - {short_desc}</div>'}}}),a.callParent(arguments)}}),Ext.define("App.ux.combo.EncounterPriority",{extend:"App.ux.combo.Combo",xtype:"encounterprioritycombo",editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("priority"),list:94,loadStore:!0}),Ext.define("App.ux.combo.Ethnicity",{extend:"Ext.form.ComboBox",alias:"widget.gaiaehr.ethnicitycombo",initComponent:function(){var a=this;Ext.define("ethnicityModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:14}}}),a.store=Ext.create("Ext.data.Store",{model:"ethnicityModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.Facilities",{extend:"Ext.form.ComboBox",alias:"widget.mitos.facilitiescombo",editable:!1,queryMode:"local",valueField:"id",displayField:"name",emptyText:_("select"),initComponent:function(){var a=this;Ext.define("FacilitiesComboModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"name",type:"string"}],proxy:{type:"direct",api:{read:"CombosData.getFacilities"}}}),a.store=Ext.create("Ext.data.Store",{model:"FacilitiesComboModel",autoLoad:!0}),a.callParent(arguments)}}),Ext.define("App.ux.combo.FloorPlanAreas",{extend:"Ext.form.ComboBox",alias:"widget.floorplanareascombo",initComponent:function(){var a=this;Ext.define("FloorPlanAreasModel",{extend:"Ext.data.Model",fields:[{name:"title",type:"string"},{name:"id",type:"int"}],proxy:{type:"direct",api:{read:CombosData.getFloorPlanAreas}}}),a.store=Ext.create("Ext.data.Store",{model:"FloorPlanAreasModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"title",valueField:"id",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.model.administration.FloorPlanZones",{extend:"Ext.data.Model",table:{name:"floor_plans_zones",comment:"Floor Plan Zones"},fields:[{name:"id",type:"int",comment:"Floor Plan Zones ID"},{name:"floor_plan_id",type:"int",index:!0},{name:"code",type:"string",len:40,index:!0},{name:"title",type:"string",len:180},{name:"type",type:"string",len:100},{name:"bg_color",type:"string",lem:10,useNull:!0},{name:"border_color",type:"string",lem:10,useNull:!0},{name:"scale",type:"string",lem:30,defaultValue:"medium"},{name:"width",type:"int",useNull:!0},{name:"height",type:"int",useNull:!0},{name:"x",type:"int"},{name:"y",type:"int"},{name:"show_priority_color",type:"bool"},{name:"show_patient_preview",type:"bool"},{name:"active",type:"bool",index:!0}],proxy:{type:"direct",api:{read:"FloorPlans.getFloorPlanZones",create:"FloorPlans.createFloorPlanZone",update:"FloorPlans.updateFloorPlanZone",destroy:"FloorPlans.removeFloorPlanZone"}}}),Ext.define("App.store.administration.FloorPlanZones",{extend:"Ext.data.Store",model:"App.model.administration.FloorPlanZones",autoSync:!1,autoLoad:!1}),Ext.define("App.ux.grid.RowFormEditing",{extend:"Ext.grid.plugin.Editing",alias:"plugin.rowformediting",requires:["App.ux.grid.RowFormEditor"],lockableScope:"top",editStyle:"row",enableRemove:!1,enableAddBtn:!1,addBtnText:"Add",addBtnIconCls:null,toolbarDock:"top",fieldDefaults:{},saveBtnEnabled:!1,autoSync:!0,autoCancel:!0,errorSummary:!1,constructor:function(){var a=this;a.callParent(arguments),a.clicksToMoveEditor||(a.clicksToMoveEditor=a.clicksToEdit),a.autoCancel=!!a.autoCancel},init:function(a){var b,c=this;c.callParent(arguments),c.enableAddBtn&&(b=a.getDockedItems('toolbar[dock="'+c.toolbarDock+'"]')[0]||a.addDocked({xtype:"toolbar",dock:c.toolbarDock})[0],b.add({xtype:"button",text:c.addBtnText,iconCls:c.addBtnIconCls,handler:c.doAddRecord,scope:c})),c.grid.on("beforeselect",c.editHandler,c),c.grid.on("beforecellclick",c.editHandler,c),c.grid.on("beforecelldblclick",c.editHandler,c),c.grid.on("beforecellmousedown",c.editHandler,c)},editHandler:function(){return!this.editing},doAddRecord:function(){var a=this,b=a.grid,c=b.store;a.cancelEdit(),c.insert(0,{}),a.startEdit(0,0)},destroy:function(){var a=this;Ext.destroy(a.editor),a.callParent(arguments)},startEdit:function(){var a,b=this,c=b.getEditor();return c.beforeEdit()!==!1&&(a=b.callParent(arguments))?(b.context=a,b.lockingPartner&&b.lockingPartner.cancelEdit(),c.startEdit(a.record,a.column,a),!0):!1},cancelEdit:function(){var a=this;return a.editing?(a.getEditor().cancelEdit(),a.callParent(arguments),a.autoCancel&&a.view.store.rejectChanges(),void a.fireEvent("canceledit",a.context)):!0},completeEdit:function(){var a=this;a.editing&&a.validateEdit()&&(a.editing=!1,a.fireEvent("edit",a,a.context))},completeRemove:function(){var a=this;a.editing&&(a.getEditor().completeRemove(),a.fireEvent("completeremove",a,a.context))},validateEdit:function(){var a=this,b=a.editor,c=a.context,d=c.record,e={},f=b.getForm().getValues();return Ext.Object.each(f,function(a){e[a]=d.get(a)}),Ext.apply(c,{newValues:f,originalValues:e}),a.fireEvent("validateedit",a,c)!==!1&&!c.cancel&&a.getEditor().completeEdit()},getEditor:function(){var a=this;return a.editor||(a.editor=a.initEditor()),a.editor},initEditor:function(){return new App.ux.grid.RowFormEditor(this.initEditorConfig())},initEditorConfig:function(){var a,b,c=this,d=c.grid,e=c.view,f=d.headerCt,g=["saveBtnText","cancelBtnText","errorsText","dirtyText"],h=g.length,i={autoCancel:c.autoCancel,errorSummary:c.errorSummary,saveBtnEnabled:c.disableValidation,fields:f.getGridColumns(),hidden:!0,view:e,editingPlugin:c,renderTo:e.el};for(a=0;h>a;a++)b=g[a],Ext.isDefined(c[b])&&(i[b]=c[b]);return i},initEditTriggers:function(){var a=this,b=1===a.clicksToMoveEditor?"click":"dblclick";a.callParent(arguments),a.clicksToMoveEditor!==a.clicksToEdit&&a.mon(a.view,"cell"+b,a.moveEditorByClick,a)},startEditByClick:function(){var a=this;a.editing&&a.clicksToMoveEditor!==a.clicksToEdit||a.callParent(arguments)},moveEditorByClick:function(){var a=this;a.editing&&a.superclass.onCellClick.apply(a,arguments)},onCellClick:function(){var a=this;a.autoCancel&&(a.view.store.rejectChanges(),a.editor&&a.editor.rejectChildStoresChanges()),a.callParent(arguments)},setColumnField:function(a){var b=this;editor.removeField(a),b.callParent(arguments),b.getEditor().setField(a.field,a)}}),Ext.define("App.ux.combo.FloorPlanZones",{extend:"Ext.form.ComboBox",xtype:"floorplanazonescombo",editable:!1,displayField:"title",valueField:"id",emptyText:_("select"),store:Ext.create("App.store.administration.FloorPlanZones")}),Ext.define("App.ux.combo.FollowUp",{extend:"Ext.form.ComboBox",alias:"widget.mitos.followupcombo",initComponent:function(){var a=this;Ext.define("FollowUpModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:90}}}),a.store=Ext.create("Ext.data.Store",{model:"FollowUpModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.InsurancePayerType",{extend:"Ext.form.ComboBox",alias:"widget.mitos.insurancepayertypecombo",initComponent:function(){var a=this;a.store=Ext.create("Ext.data.Store",{fields:["id","name"],data:[{id:"1",name:_("all")},{id:"16",name:_("other_hcfa")},{id:"MB",name:_("medicare_part_b")},{id:"MC",name:_("medicaid")},{id:"CH",name:_("champusva")},{id:"CH",name:_("champus")},{id:"BL",name:_("blue_cross_blue_shield")},{id:"16",name:_("feca")},{id:"09",name:_("self_pay")},{id:"10",name:_("central_certification")},{id:"11",name:_("other_nonfederal_programs")},{id:"12",name:_("ppo")},{id:"13",name:_("pos")},{id:"14",name:_("epo")},{id:"15",name:_("indemnity_insurance")},{id:"16",name:_("hmo")},{id:"AM",name:_("automobile_medical")},{id:"CI",name:_("commercial_insurance")},{id:"DS",name:_("disability")},{id:"HM",name:_("health_maintenance_organization")},{id:"LI",name:_("liability")},{id:"LM",name:_("liability_medical")},{id:"OF",name:_("other_federal_program")},{id:"TV",name:_("title_v")},{id:"VA",name:_("veterans_administration_plan")},{id:"WC",name:_("workers_compensation_health_plan")},{id:"ZZ",name:_("mutually_defined")}]}),Ext.apply(this,{name:"freeb_type",editable:!1,displayField:"name",valueField:"id",queryMode:"local",emptyText:_("select"),store:a.store},null),a.callParent()}}),Ext.define("App.ux.combo.LabObservations",{extend:"Ext.form.ComboBox",alias:"widget.labobservationscombo",initComponent:function(){var a=this;Ext.define("labObservationsComboModel",{extend:"Ext.data.Model",fields:[{name:"label"},{name:"name"},{name:"unit"},{name:"range_start"},{name:"range_end"},{name:"threshold"},{name:"notes"}],proxy:{type:"direct",api:{read:"Services.getAllLabObservations"}}}),a.store=Ext.create("Ext.data.Store",{model:"labObservationsComboModel",autoLoad:!1}),Ext.apply(this,{store:a.store,displayField:"label",valueField:"id",emptyText:_("select_existing_observation"),editable:!1,width:810,listConfig:{getInnerTpl:function(){return'<div><span style="width:200px;display:inline-block;"><span style="font-weight:bold;">'+_("Label")+':</span> {label},</span><span style="width:90px;display:inline-block;"><span style="font-weight:bold;">'+_("unit")+':</span> {unit},</span><span style="width:150px;display:inline-block;"><span style="font-weight:bold;">'+_("range_start")+':</span> {range_start},</span><span style="width:130px;display:inline-block;"><span style="font-weight:bold;">'+_("range_end")+':</span> {range_end},</span><span style="width:100px;display:inline-block;"><span style="font-weight:bold;">'+_("threshold")+":</span> {threshold}</span></div>"}}},null),a.callParent()}}),Ext.define("App.ux.combo.LabsTypes",{extend:"Ext.form.ComboBox",alias:"widget.mitos.labstypescombo",initComponent:function(){var a=this;Ext.define("LabsTypesComboModel",{extend:"Ext.data.Model",fields:[{name:"id"},{name:"code_text_short"},{name:"parent_name",type:"string"},{name:"loinc_name",type:"string"}],proxy:{type:"direct",api:{read:Laboratories.getActiveLaboratoryTypes}}}),a.store=Ext.create("Ext.data.Store",{model:"LabsTypesComboModel",autoLoad:!1}),Ext.apply(this,{editable:!1,displayField:"loinc_name",valueField:"loinc_name",emptyText:_("select"),store:a.store}),a.callParent(arguments)}}),Ext.define("App.ux.combo.Languages",{extend:"Ext.form.ComboBox",alias:"widget.languagescombo",initComponent:function(){var a=this;Ext.define("LanguagesComboModel",{extend:"Ext.data.Model",fields:[{name:"code",type:"string"},{name:"description",type:"string"}],proxy:{type:"direct",api:{read:i18nRouter.getAvailableLanguages}}}),a.store=Ext.create("Ext.data.Store",{model:"LanguagesComboModel",autoLoad:!1}),Ext.apply(this,{editable:!1,valueField:"code",displayField:"description",emptyText:_("select"),store:a.store},null),a.callParent()}}),Ext.define("App.ux.combo.Lists",{extend:"Ext.form.ComboBox",alias:"widget.mitos.listscombo",width:250,iconCls:"icoListOptions",initComponent:function(){var a=this;Ext.define("ListComboModel",{extend:"Ext.data.Model",fields:[{name:"id"},{name:"title",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getLists}}}),a.store=Ext.create("Ext.data.Store",{model:"ListComboModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",valueField:"id",displayField:"title",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.MedicalIssues",{extend:"Ext.form.ComboBox",alias:"widget.mitos.medicalissuescombo",initComponent:function(){var a=this;Ext.define("MedicalIssuesModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:75}}}),a.store=Ext.create("Ext.data.Store",{model:"MedicalIssuesModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.Medications",{extend:"Ext.form.ComboBox",alias:"widget.mitos.medicationscombo",initComponent:function(){var a=this;Ext.define("MedicationsModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:"CombosData.getOptionsByListId"},extraParams:{list_id:74}}}),a.store=Ext.create("Ext.data.Store",{model:"MedicationsModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.MsgNoteType",{extend:"Ext.form.ComboBox",alias:"widget.msgnotetypecombo",initComponent:function(){var a=this;Ext.define("MsgNoteTypeModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:28}}}),a.store=Ext.create("Ext.data.Store",{model:"MsgNoteTypeModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent()}}),Ext.define("App.ux.combo.MsgStatus",{extend:"Ext.form.ComboBox",alias:"widget.msgstatuscombo",initComponent:function(){var a=this;Ext.define("MsgStatusModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:45}}}),a.store=Ext.create("Ext.data.Store",{model:"MsgStatusModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent()}}),Ext.define("App.ux.combo.Occurrence",{extend:"Ext.form.ComboBox",alias:"widget.mitos.occurrencecombo",initComponent:function(){var a=this;Ext.define("OccurrenceModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:"CombosData.getOptionsByListId"},extraParams:{list_id:26}}}),a.store=Ext.create("Ext.data.Store",{model:"OccurrenceModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store}),a.callParent(arguments)}}),Ext.define("App.ux.combo.Outcome",{extend:"Ext.form.ComboBox",alias:"widget.mitos.outcomecombo",initComponent:function(){var a=this;Ext.define("OutcomeModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:27}}}),a.store=Ext.create("Ext.data.Store",{model:"OutcomeModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.Outcome2",{extend:"Ext.form.ComboBox",alias:"widget.mitos.outcome2combo",initComponent:function(){var a=this;Ext.define("Outcome2model",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:"CombosData.getOptionsByListId"},extraParams:{list_id:74}}}),a.store=Ext.create("Ext.data.Store",{model:"Outcome2model",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store}),a.callParent(arguments)}}),Ext.define("App.ux.combo.PayingEntity",{extend:"Ext.form.ComboBox",alias:"widget.mitos.payingentitycombo",initComponent:function(){var a=this;Ext.define("PayingEntityModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:54}}}),a.store=Ext.create("Ext.data.Store",{model:"PayingEntityModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.PaymentMethod",{extend:"Ext.form.ComboBox",alias:"widget.mitos.paymentmethodcombo",initComponent:function(){var a=this;Ext.define("PaymentMethodModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:51}}}),a.store=Ext.create("Ext.data.Store",{model:"PaymentMethodModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.PaymentCategory",{extend:"Ext.form.ComboBox",alias:"widget.mitos.paymentcategorycombo",initComponent:function(){var a=this;Ext.define("PaymentCategoryModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:49}}}),a.store=Ext.create("Ext.data.Store",{model:"PaymentCategoryModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.Pharmacies",{extend:"Ext.form.ComboBox",alias:"widget.mitos.pharmaciescombo",initComponent:function(){var a=this;Ext.define("PharmaciesComboModel",{extend:"Ext.data.Model",fields:[{name:"option_name"},{name:"option_value"}],proxy:{type:"direct",api:{read:CombosData.getActivePharmacies}}}),a.store=Ext.create("Ext.data.Store",{model:"PharmaciesComboModel",autoLoad:!1}),Ext.apply(this,{editable:!1,displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.posCodes",{extend:"Ext.form.ComboBox",alias:"widget.mitos.poscodescombo",initComponent:function(){var a=this;Ext.define("PosCodesModel",{extend:"Ext.data.Model",fields:[{name:"code",type:"string"},{name:"title",type:"string",convert:function(a,b){return b.data.code+" - "+a}}],proxy:{type:"direct",api:{read:"CombosData.getPosCodes"}}}),a.store=Ext.create("Ext.data.Store",{model:"PosCodesModel",autoLoad:!0}),Ext.apply(a,{editable:!1,queryMode:"local",valueField:"code",displayField:"title",emptyText:_("select"),store:a.store}),a.callParent()}}),Ext.define("App.ux.combo.PrescriptionHowTo",{extend:"Ext.form.ComboBox",alias:"widget.mitos.prescriptionhowto",initComponent:function(){var a=this;Ext.define("PrescriptionHowTomodel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:"CombosData.getOptionsByListId"},extraParams:{list_id:88}}}),a.store=Ext.create("Ext.data.Store",{model:"PrescriptionHowTomodel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store}),a.callParent(arguments)}}),Ext.define("App.ux.combo.PrescriptionOften",{extend:"Ext.form.ComboBox",alias:"widget.mitos.prescriptionoften",initComponent:function(){var a=this;Ext.define("PrescriptionOftenmodel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:86}}}),a.store=Ext.create("Ext.data.Store",{model:"PrescriptionOftenmodel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.PrescriptionTypes",{extend:"Ext.form.ComboBox",alias:"widget.mitos.prescriptiontypes",initComponent:function(){var a=this;Ext.define("PrescriptionTypesModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:"CombosData.getOptionsByListId"},extraParams:{list_id:89}}}),a.store=Ext.create("Ext.data.Store",{model:"PrescriptionTypesModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store}),a.callParent(arguments)}}),Ext.define("App.ux.combo.PrescriptionWhen",{extend:"Ext.form.ComboBox",alias:"widget.mitos.prescriptionwhen",initComponent:function(){var a=this;Ext.define("PrescriptionWhenmodel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:87}}}),a.store=Ext.create("Ext.data.Store",{model:"PrescriptionWhenmodel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.PreventiveCareTypes",{extend:"Ext.form.ComboBox",alias:"widget.mitos.preventivecaretypescombo",initComponent:function(){var a=this;Ext.define("PreventiveCareTypesModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:78}}}),a.store=Ext.create("Ext.data.Store",{model:"PreventiveCareTypesModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",valueField:"option_value",displayField:"option_name",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.ProceduresBodySites",{extend:"Ext.form.ComboBox",alias:"widget.mitos.proceduresbodysitescombo",initComponent:function(){var a=this;Ext.define("ProceduresBodySitesModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:34}}}),a.store=Ext.create("Ext.data.Store",{model:"ProceduresBodySitesModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.Providers",{extend:"Ext.form.ComboBox",alias:"widget.mitos.providerscombo",editable:!1,queryMode:"local",displayField:"name",valueField:"id",emptyText:_("select"),initComponent:function(){var a=this;Ext.define("ProvidersComboBoxModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"string"},{name:"name",type:"string"}],proxy:{type:"direct",api:{read:"User.getProviders"}}}),a.store=Ext.create("Ext.data.Store",{model:"ProvidersComboBoxModel",autoLoad:!0}),a.callParent(arguments)}}),Ext.define("App.ux.combo.Race",{extend:"Ext.form.ComboBox",alias:"widget.gaiaehr.racecombo",initComponent:function(){var a=this;Ext.define("raceModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:59}}}),a.store=Ext.create("Ext.data.Store",{model:"raceModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.Roles",{extend:"Ext.form.ComboBox",alias:"widget.mitos.rolescombo",initComponent:function(){var a=this;Ext.define("RolesComboModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"role_name",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getRoles}}}),a.store=Ext.create("Ext.data.Store",{model:"RolesComboModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",valueField:"id",displayField:"role_name",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.Sex",{extend:"Ext.form.ComboBox",alias:"widget.gaiaehr.sexcombo",initComponent:function(){var a=this;Ext.define("Sexmodel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:19}}}),a.store=Ext.create("Ext.data.Store",{model:"Sexmodel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.Surgery",{extend:"Ext.form.ComboBox",alias:"widget.mitos.surgerycombo",initComponent:function(){var a=this;Ext.define("SurgeryModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:76}}}),a.store=Ext.create("Ext.data.Store",{model:"SurgeryModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.SmokingStatus",{extend:"App.ux.combo.Combo",alias:"widget.mitos.smokingstatuscombo",list:58,loadStore:!0}),Ext.define("App.ux.combo.TaxId",{extend:"Ext.form.ComboBox",alias:"widget.mitos.taxidcombo",initComponent:function(){var a=this;Ext.define("TaxIdsModel",{extend:"Ext.data.Model",fields:[{name:"option_id",type:"string"},{name:"title",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getTaxIds}}}),a.store=Ext.create("Ext.data.Store",{model:"TaxIdsModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"title",valueField:"option_id",emptyText:_("select"),store:a.store},null),a.callParent()}}),Ext.define("App.ux.combo.Templates",{extend:"Ext.form.ComboBox",alias:"widget.documentstemplatescombo",initComponent:function(){var a=this;Ext.define("DocumentsTemplatesComboModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"title",type:"string"},{name:"body",type:"string"}],proxy:{type:"direct",api:{read:"CombosData.getTemplatesTypes"}}}),Ext.apply(this,{editable:!1,displayField:"title",valueField:"id",queryMode:"local",emptyText:_("select"),store:Ext.create("Ext.data.Store",{model:"DocumentsTemplatesComboModel",autoLoad:!1})}),a.callParent(arguments),a.listeners={scope:a,beforerender:function(){a.getStore().load()}}}}),Ext.define("App.ux.combo.Themes",{extend:"Ext.form.ComboBox",alias:"widget.themescombo",initComponent:function(){var a=this;Ext.define("ThemesComboModel",{extend:"Ext.data.Model",fields:[{name:"name",type:"string"},{name:"value",type:"string"}],proxy:{type:"direct",api:{read:"CombosData.getThemes"}}}),a.store=Ext.create("Ext.data.Store",{model:"ThemesComboModel",autoLoad:!1}),Ext.apply(this,{editable:!1,valueField:"value",displayField:"name",emptyText:_("select"),store:a.store},null),a.callParent()}}),Ext.define("App.ux.combo.Time",{extend:"Ext.form.ComboBox",alias:"widget.mitos.timecombo",initComponent:function(){var a=this;Ext.define("Timemodel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:77}}}),a.store=Ext.create("Ext.data.Store",{model:"Timemodel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.Titles",{extend:"Ext.form.ComboBox",alias:"widget.mitos.titlescombo",initComponent:function(){var a=this;Ext.define("TitlesModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:22}}}),a.store=Ext.create("Ext.data.Store",{model:"TitlesModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.TransmitMethod",{extend:"Ext.form.ComboBox",alias:"widget.transmitmethodcombo",initComponent:function(){var a=this;a.storeTrsmit=Ext.create("Ext.data.Store",{fields:["id","name"],data:[{id:"1",name:"Print"},{id:"2",name:"Email"},{id:"3",name:"Email"}]}),Ext.apply(this,{name:"transmit_method",editable:!1,displayField:"name",valueField:"id",queryMode:"local",emptyText:_("select"),store:a.storeTrsmit},null),a.callParent()}}),Ext.define("App.ux.combo.Types",{extend:"Ext.form.ComboBox",alias:"widget.mitos.typescombobox",initComponent:function(){var a=this;Ext.define("TypesModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:32}}}),a.store=Ext.create("Ext.data.Store",{model:"TypesModel",autoLoad:!0}),Ext.apply(this,{name:"abook_type",editable:!1,displayField:"option_name",valueField:"option_value",queryMode:"local",store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.Units",{extend:"Ext.form.ComboBox",alias:"widget.mitos.unitscombo",initComponent:function(){var a=this;Ext.define("UnitsModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:38}}}),a.store=Ext.create("Ext.data.Store",{model:"UnitsModel",autoLoad:!0}),Ext.apply(this,{queryMode:"local",valueField:"option_value",displayField:"option_name",store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.Users",{extend:"Ext.form.ComboBox",alias:"widget.userscombo",initComponent:function(){var a=this;
Ext.define("UsersComboModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"name",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getUsers}}}),a.store=Ext.create("Ext.data.Store",{model:"UsersComboModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",valueField:"id",displayField:"name",emptyText:_("select"),store:a.store},null),a.callParent()}}),Ext.define("App.ux.combo.YesNoNa",{extend:"Ext.form.ComboBox",alias:"widget.mitos.yesnonacombo",initComponent:function(){var a=this;Ext.define("yesnonaModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:93}}}),a.store=Ext.create("Ext.data.Store",{model:"yesnonaModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.combo.YesNo",{extend:"Ext.form.ComboBox",alias:"widget.mitos.yesnocombo",initComponent:function(){var a=this;Ext.define("yesnoModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:CombosData.getOptionsByListId},extraParams:{list_id:23}}}),a.store=Ext.create("Ext.data.Store",{model:"yesnoModel",autoLoad:!0}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store},null),a.callParent(arguments)}}),Ext.define("App.ux.window.Window",{extend:"Ext.window.Window",autoHeight:!0,modal:!0,border:!0,autoScroll:!0,resizable:!1,closeAction:"hide",initComponent:function(){this.callParent(arguments)},updateTitle:function(a,b){this.setTitle(a+(b?"[ Read Only ]":""))},setReadOnly:function(){for(var a=this.query("form"),b=app.patient.readOnly,c=0;c<a.length;c++){var d,e=a[c];if(e.readOnly!=b){e.readOnly=b,d=e.getForm().getFields().items;for(var f=0;f<d.length;f++)d[f].setReadOnly(b)}}return b},setButtonsDisabled:function(a){for(var b=app.patient.readOnly,c=0;c<a.length;c++){var d=a[c];d.disabled!=b&&(d.disabled=b,d.setDisabled(b))}},checkIfCurrPatient:function(){return app.getCurrPatient()},patientInfoAlert:function(){var a=app.getCurrPatient();Ext.Msg.alert(_("status"),_("patient")+": "+a.name+" ("+a.pid+")")},currPatientError:function(){Ext.Msg.show({title:"Oops! "+_("no_patient_selected"),msg:_("select_patient_patient_live_search"),scope:this,buttons:Ext.Msg.OK,icon:Ext.Msg.ERROR,fn:function(){this.goBack()}})},getFormItems:function(formPanel,formToRender,callback){formPanel.removeAll(),FormLayoutEngine.getFields({formToRender:formToRender},function(provider,response){var items=eval(response.result);formPanel.add(items),"function"==typeof callback&&callback(formPanel,items,!0)})},boolRenderer:function(a){return"1"==a||1==a||"true"==a?'<img style="padding-left: 13px" src="resources/images/icons/yes.gif" />':"0"==a||0==a||"false"==a?'<img style="padding-left: 13px" src="resources/images/icons/no.gif" />':a},alertRenderer:function(a){return"1"==a||1==a||"true"==a?'<img style="padding-left: 13px" src="resources/images/icons/no.gif" />':"0"==a||0==a||"false"==a?'<img style="padding-left: 13px" src="resources/images/icons/yes.gif" />':a},warnRenderer:function(a,b,c){var d=c.data.warningMsg?' data-qtip="'+c.data.warningMsg+'" ':"";return"1"==a||1==a||"true"==a?'<img src="resources/images/icons/icoImportant.png" '+d+" />":void 0},onExpandRemoveMask:function(a){a.picker.loadMask.destroy()},strToLowerUnderscores:function(a){return a.toLowerCase().replace(/ /gi,"_")},getCurrPatient:function(){return app.getCurrPatient()},getApp:function(){return app.getApp()},msg:function(a,b){app.msg(a,b)},passwordVerificationWin:function(a){var b=Ext.Msg.prompt(_("password_verification"),_("please_enter_your_password")+":",function(b,c){a(b,c)}),c=b.textField.getInputId();return document.getElementById(c).type="password",b}}),Ext.define("App.view.search.PatientSearch",{extend:"App.ux.RenderPanel",id:"panelPatientSearch",pageTitle:_("advance_patient_search"),pageLayout:"border",uses:["Ext.grid.Panel"],initComponent:function(){var a=this;a.form=Ext.create("Ext.form.FormPanel",{region:"north",height:200,bodyPadding:10,margin:"0 0 3 0",buttonAlign:"left",items:[{xtype:"fieldcontainer",fieldLabel:_("name"),layout:"hbox",defaults:{margin:"0 5 0 0"},items:[{xtype:"textfield",emptyText:_("first_name"),name:"fname"},{xtype:"textfield",emptyText:_("middle_name"),name:"mname"},{xtype:"textfield",emptyText:_("last_name"),name:"lname"}]}],buttons:[{text:_("search"),iconCls:"save",handler:function(){}},"-",{text:_("reset"),iconCls:"save",tooltip:_("hide_selected_office_note"),handler:function(){}}]}),a.grid=Ext.create("Ext.grid.Panel",{region:"center",columns:[{header:"id",sortable:!1,dataIndex:"id",hidden:!0},{width:150,header:_("date"),sortable:!0,dataIndex:"date",renderer:Ext.util.Format.dateRenderer("Y-m-d H:i:s")},{width:150,header:_("user"),sortable:!0,dataIndex:"user"},{flex:1,header:_("note"),sortable:!0,dataIndex:"body"}],tbar:Ext.create("Ext.PagingToolbar",{store:a.store,displayInfo:!0,emptyMsg:_("no_office_notes_to_display"),plugins:Ext.create("Ext.ux.SlidingPager",{})})}),a.pageBody=[a.form,a.grid],a.callParent(arguments)},onActive:function(a){a(!0)}}),Ext.define("Modules.Module",{extend:"Ext.app.Controller",refs:[{ref:"viewport",selector:"viewport"},{ref:"mainNav",selector:"treepanel[action=mainNav]"}],addAppPanel:function(a){this.getViewport().MainPanel.add(a)},addHeaderItem:function(a){this.getViewport().Header.add(a)},addNavigationNodes:function(a,b,c){var d,e,f,g;if(d="root"==a||null==a?this.getMainNav().getStore().getRootNode():this.getMainNav().getStore().getNodeById(a)){if(e=d.findChildBy(function(a){return a.hasChildNodes()}),Ext.isArray(b)){for(f=[],g=0;g<b.length;g++)Ext.Array.push(f,d.insertBefore(b[g],e));return f}return c?d.insertChild(c,b):d.insertBefore(b,e)}},getModuleData:function(a){var b=this;Modules.getModuleByName(a,function(a,c){b.fireEvent("moduledata",c.result)})},updateModuleData:function(a){var b=this;Modules.updateModule(a,function(a,c){b.fireEvent("moduledataupdate",c.result)})},addLanguages:function(){},insertToHead:function(a){Ext.getHead().appendChild(a)}}),Ext.define("App.model.administration.MedicationInstruction",{extend:"Ext.data.Model",table:{name:"rxinstructions"},fields:[{name:"id",type:"int"},{name:"rxcui",type:"string",index:!0},{name:"occurrence",type:"int",index:!0},{name:"instruction",type:"string",len:140}],proxy:{type:"direct",api:{read:"Rxnorm.getMedicationInstructions",create:"Rxnorm.addMedicationInstruction",update:"Rxnorm.updateMedicationInstructions",destroy:"Rxnorm.destroyMedicationInstructions"},remoteGroup:!1}}),Ext.define("App.model.administration.CPT",{extend:"Ext.data.Model",table:{name:"cpt_codes"},fields:[{name:"id",type:"int"},{name:"ConceptID",type:"int",dataType:"bigint"},{name:"code",type:"string",len:50},{name:"code_text",type:"string",dataType:"text"},{name:"code_text_medium",type:"string",dataType:"text"},{name:"code_text_short",type:"string",dataType:"text"},{name:"code_type",type:"string",store:!1},{name:"isRadiology",type:"bool"},{name:"active",type:"bool"}],proxy:{type:"direct",api:{read:"CPT.getCPTs",create:"CPT.addCPT",update:"CPT.updateCPT",destroy:"CPT.deleteCPT"},reader:{root:"data"}}}),Ext.define("App.ux.LiveRXNORMSearch",{extend:"Ext.form.ComboBox",requires:["App.model.administration.MedicationInstruction"],alias:"widget.rxnormlivetsearch",hideLabel:!0,displayField:"STR",valueField:"RXCUI",initComponent:function(){var a=this;Ext.define("liveRXNORMSearchModel",{extend:"Ext.data.Model",fields:[{name:"RXCUI",type:"string"},{name:"CODE",type:"string"},{name:"NDC",type:"string"},{name:"STR",type:"string",convert:function(a){var b=/\(.*\) | \(.*\)|\(.*\)/g;return a.replace(b,"")}},{name:"DST",type:"auto"},{name:"DRT",type:"auto"},{name:"DDF",type:"auto"},{name:"DDFA",type:"auto"},{name:"RXN_QUANTITY",type:"auto"},{name:"SAB",type:"auto"},{name:"RXAUI",type:"auto"},{name:"CodeType",defaultValue:"RXNORM"}],proxy:{type:"direct",api:{read:"Rxnorm.getRXNORMLiveSearch"},reader:{totalProperty:"totals",root:"rows"}},hasMany:[{model:"App.model.administration.MedicationInstruction",name:"instructions",primaryKey:"RXCUI",foreignKey:"rxcui"}]}),a.store=Ext.create("Ext.data.Store",{model:"liveRXNORMSearchModel",pageSize:25,autoLoad:!1}),Ext.apply(this,{store:a.store,emptyText:_("search")+"...",typeAhead:!1,hideTrigger:!0,minChars:3,maxLength:255,listConfig:{loadingText:_("searching")+"...",getInnerTpl:function(){return'<div class="search-item">{STR} ( <b>RxNorm:</b> {RXCUI} <b>NDC:</b> {NDC} )</div>'}},pageSize:25,listeners:{select:function(a,b){var c=b[0].data,d=c.STR.indexOf("["),e=c.STR.indexOf("]");d>-1&&e>d&&this.setValue(c.STR.substr(0,d)+c.STR.substr(e+1))}}}),a.callParent()}}),Ext.define("App.store.administration.CPT",{extend:"Ext.data.Store",model:"App.model.administration.CPT"}),Ext.define("App.model.miscellaneous.AddressBook",{extend:"Ext.data.Model",table:{name:"address_book",comment:"Address Book"},fields:[{name:"id",type:"int"},{name:"title",type:"string",len:10},{name:"fname",type:"string",len:80,index:!0},{name:"mname",type:"string",len:80,index:!0},{name:"lname",type:"string",len:80,index:!0},{name:"email",type:"string",len:100,index:!0},{name:"direct_address",type:"string",len:150,index:!0},{name:"url",type:"string",len:150},{name:"organization",type:"string",len:160},{name:"street",type:"string",len:180},{name:"street_cont",type:"string",len:180},{name:"city",type:"string",len:80,index:!0},{name:"state",type:"string",len:100,index:!0},{name:"zip",type:"string",len:15,index:!0},{name:"country",type:"string",len:160},{name:"phone",type:"string",len:20,index:!0},{name:"phone2",type:"string",len:20},{name:"mobile",type:"string",len:20,comment:"cell phone"},{name:"fax",type:"string",len:20},{name:"fullname",type:"string",store:!1,convert:function(a,b){return b.data.fname+" "+b.data.mname+" "+b.data.lname}},{name:"notes",type:"string",len:600}],proxy:{type:"direct",api:{read:"AddressBook.getContacts",create:"AddressBook.addContact",update:"AddressBook.updateContact",destroy:"AddressBook.destroyContact"},reader:{totalProperty:"totals",root:"data"}}}),Ext.define("App.model.patient.CarePlanGoal",{extend:"Ext.data.Model",table:{name:"patient_care_plan_goals",comment:"Patient Care Plan Goals"},fields:[{name:"id",type:"int"},{name:"pid",type:"int",index:!0},{name:"eid",type:"int",index:!0},{name:"uid",type:"int"},{name:"goal",type:"string",len:300},{name:"goal_code",type:"string",len:20},{name:"goal_code_type",type:"string",len:15},{name:"instructions",type:"string",len:500},{name:"plan_date",type:"date",dateFormat:"Y-m-d",dataType:"date"},{name:"created_date",type:"date",dateFormat:"Y-m-d H:i:s"}],proxy:{type:"direct",api:{read:"CarePlanGoals.getPatientCarePlanGoals",create:"CarePlanGoals.addPatientCarePlanGoal",update:"CarePlanGoals.updatePatientCarePlanGoal",destroy:"CarePlanGoals.destroyPatientCarePlanGoal"}}}),Ext.define("App.model.patient.CognitiveAndFunctionalStatus",{extend:"Ext.data.Model",table:{name:"patient_cognitive_functional_status",comment:"Patient Cognitive Functional Status"},fields:[{name:"id",type:"int"},{name:"pid",type:"int",index:!0},{name:"eid",type:"int",index:!0},{name:"uid",type:"int"},{name:"category",type:"string",len:20},{name:"category_code",type:"string",len:20},{name:"category_code_type",type:"string",len:20},{name:"code",type:"string",len:20},{name:"code_text",type:"string",len:300},{name:"code_type",type:"string",len:15},{name:"status",type:"string",len:20},{name:"status_code",type:"string",len:40},{name:"status_code_type",type:"string",len:15},{name:"note",type:"string",len:500},{name:"begin_date",type:"date",dateFormat:"Y-m-d",dataType:"date"},{name:"end_date",type:"date",dateFormat:"Y-m-d",dataType:"date"},{name:"created_date",type:"date",dateFormat:"Y-m-d H:i:s"}],proxy:{type:"direct",api:{read:"CognitiveAndFunctionalStatus.getPatientCognitiveAndFunctionalStatuses",create:"CognitiveAndFunctionalStatus.addPatientCognitiveAndFunctionalStatus",update:"CognitiveAndFunctionalStatus.updateCognitiveAndFunctionalStatus",destroy:"CognitiveAndFunctionalStatus.destroyCognitiveAndFunctionalStatus"}}}),Ext.define("App.model.patient.SmokeStatus",{extend:"Ext.data.Model",table:{name:"patient_smoke_status",comment:"Patient Smoke status"},fields:[{name:"id",type:"int"},{name:"eid",type:"int",index:!0,comment:"encounter id"},{name:"pid",type:"int",index:!0,comment:"patient ID"},{name:"status",type:"string",len:80},{name:"status_code",type:"string",len:20},{name:"status_code_type",type:"string",len:20},{name:"counseling",type:"bool",comment:"1 if counseling received"},{name:"note",type:"string",dataType:"text"},{name:"start_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"end_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"create_uid",type:"int",comment:"user ID who created the record"},{name:"update_uid",type:"int",comment:"user ID who updated the record"},{name:"create_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"update_date",type:"date",dateFormat:"Y-m-d H:i:s"}],proxy:{type:"direct",api:{read:"SocialHistory.getSmokeStatus",create:"SocialHistory.addSmokeStatus",update:"SocialHistory.updateSmokeStatus"}}}),Ext.define("App.model.administration.ActiveProblems",{extend:"Ext.data.Model",table:{name:"activeproblems",comment:"Active Problems"},fields:[{name:"id",type:"int",comment:"Active Problems ID"},{name:"code_text",type:"string"},{name:"code",type:"string"}]}),Ext.define("App.model.administration.Applications",{extend:"Ext.data.Model",table:{name:"applications",comment:"Applications"},fields:[{name:"id",type:"int",comment:"Applications ID"},{name:"app_name",type:"string",len:120},{name:"pvt_key",type:"string",len:80},{name:"active",type:"bool"}],proxy:{type:"direct",api:{read:"Applications.getApplications",create:"Applications.addApplication",update:"Applications.updateApplication",destroy:"Applications.deleteApplication"}}}),Ext.define("App.model.administration.DefaultDocuments",{extend:"Ext.data.Model",table:{name:"defaultdocuments",comment:"Default Documents"},fields:[{name:"id",type:"int",comment:"Default Documents ID"},{name:"title",type:"string"},{name:"body",type:"string"},{name:"template_type",type:"string"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"}]}),Ext.define("App.model.administration.DocumentsTemplates",{extend:"Ext.data.Model",table:{name:"documents_templates",comment:"Documents Templates",data:"App.data.administration.DocumentTemplates"},fields:[{name:"id",type:"int",comment:"Documentation Templates ID"},{name:"title",type:"string",len:50},{name:"template_type",type:"string",len:50},{name:"body",type:"string",dataType:"text"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s",comment:"to be replace by created_date"},{name:"created_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"updated_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"created_by_uid",type:"int"},{name:"updated_by_uid",type:"int"}]}),Ext.define("App.model.administration.DocumentToken",{extend:"Ext.data.Model",table:{name:"documenttoken",comment:"Document Tokens"},fields:[{name:"id",type:"int",comment:"Documentation Token ID"},{name:"title",type:"string"},{name:"token",type:"string"}]}),Ext.define("App.model.administration.ExternalDataLoads",{extend:"Ext.data.Model",table:{name:"externaldataloads",comment:"External Data Loads"},fields:[{name:"id",type:"int",comment:"External Data Loads ID"},{name:"date",type:"date",dateFormat:"Y-m-d"},{name:"version",type:"string"},{name:"path",type:"string"},{name:"basename",type:"string"},{name:"codeType",type:"string"}]}),Ext.define("App.model.administration.Facility",{extend:"Ext.data.Model",table:{name:"facility",comment:"Facilities"},fields:[{name:"id",type:"int"},{name:"code",type:"string",len:80},{name:"name",type:"string",len:120,comment:"Facility Name"},{name:"legal_name",type:"string",len:180},{name:"attn",type:"string",len:80},{name:"phone",type:"string",len:25},{name:"fax",type:"string",len:25},{name:"address",type:"string",len:120},{name:"address_cont",type:"string",len:120},{name:"city",type:"string",len:80},{name:"state",type:"string",len:80},{name:"postal_code",type:"string",len:15},{name:"country_code",type:"string",len:5},{name:"service_location",type:"bool"},{name:"billing_location",type:"bool"},{name:"pos_code",type:"string",len:3},{name:"ssn",type:"string",len:15},{name:"ein",type:"string",len:15},{name:"clia",type:"string",len:15},{name:"fda",type:"string",len:15},{name:"npi",type:"string",len:15},{name:"lic",type:"string",len:15},{name:"ess",type:"string",len:15},{name:"active",type:"bool"}],proxy:{type:"direct",api:{read:"Facilities.getFacilities",create:"Facilities.addFacility",update:"Facilities.updateFacility",destroy:"Facilities.deleteFacility"}},reader:{totalProperty:"total",root:"data"}}),Ext.define("App.model.administration.FacilityStructure",{extend:"Ext.data.Model",table:{name:"facility_structures",comment:"Facilities Dept and Specialties"},fields:[{name:"id",type:"string"},{name:"fid",type:"int",index:!0},{name:"parentId",type:"string",index:!0},{name:"foreign_id",type:"int",index:!0},{name:"foreign_type",type:"string",len:1,index:!0,comment:"D = department S = specialty"},{name:"active",type:"bool"},{name:"leaf",type:"bool",store:!1,convert:function(a,b){return"S"==b.data.foreign_type}},{name:"text",type:"string",store:!1}],idProperty:"id",proxy:{type:"direct",api:{read:"Facilities.getFacilityConfigs",create:"Facilities.addFacilityConfig",update:"Facilities.updateFacilityConfig",destroy:"Facilities.deleteFacilityConfig"},writer:{writeAllFields:!0}}}),Ext.define("App.model.administration.FloorPlans",{extend:"Ext.data.Model",table:{name:"floor_plans",comment:"Floor Plans",data:"App.data.administration.FloorPlans"},fields:[{name:"id",type:"int",comment:"Floor Plans ID"},{name:"title",type:"string",len:180,comment:"Floor Title"},{name:"facility_id",type:"int",comment:"facility ID",index:!0},{name:"active",type:"bool",comment:"Active Floor Plan?",index:!0}],proxy:{type:"direct",api:{read:"FloorPlans.getFloorPlans",create:"FloorPlans.createFloorPlan",update:"FloorPlans.updateFloorPlan",destroy:"FloorPlans.removeFloorPlan"}}}),Ext.define("App.model.administration.FormListOptions",{extend:"Ext.data.Model",fields:[{name:"id",type:"int",comment:"Form List Options ID"},{name:"option_name",type:"string"},{name:"option_value",type:"string"}],proxy:{type:"direct",api:{read:"CombosData.getOptionsByListId"}}}),Ext.define("App.model.administration.FormsList",{extend:"Ext.data.Model",table:{name:"forms_layout",comment:"Form List"},fields:[{name:"id",type:"int"},{name:"name",type:"string",len:80},{name:"form_data",type:"string",len:80},{name:"model",type:"string",len:80},{name:"active",type:"bool"}],proxy:{type:"direct",api:{read:"FormLayoutBuilder.getForms"}}}),Ext.define("App.model.administration.Globals",{extend:"Ext.data.Model",table:{name:"globals",comment:"Global Settings"},fields:[{name:"id",type:"int"},{name:"gl_name",type:"string",comment:"Global Setting Unique Name or Key"},{name:"gl_value",type:"string",comment:"Global Setting Value"},{name:"gl_category",type:"string",comment:"Category"},{name:"gl_index",type:"int",comment:"Global Setting Index"}],proxy:{type:"direct",api:{read:"Globals.getGlobals",update:"Globals.updateGlobals"},remoteGroup:!1}}),Ext.define("App.model.administration.HeadersAndFooters",{extend:"Ext.data.Model",table:{name:"headersandfooters",comment:"Headers And Footers"},fields:[{name:"id",type:"int",comment:"Headers and Footers ID"},{name:"title",type:"string"},{name:"template_type",type:"string"},{name:"body",type:"string"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"}]}),Ext.define("App.model.administration.ImmunizationRelations",{extend:"Ext.data.Model",table:{name:"immunizationrelations",comment:"Immunization Relations"},fields:[{name:"id",type:"int",comment:"Immunization Relations ID"},{name:"immunization_id",type:"int"},{name:"foreign_id",type:"int"},{name:"code"},{name:"code_text",type:"string"},{name:"code_type"}],proxy:{type:"direct",api:{read:"PreventiveCare.getRelations",create:"PreventiveCare.addRelations",destroy:"PreventiveCare.removeRelations"},writer:{writeAllFields:!0}}}),Ext.define("App.model.administration.InsuranceCompany",{extend:"Ext.data.Model",table:{name:"insurance_companies",comment:"Insurance Companies"},fields:[{name:"id",type:"int"},{name:"code",type:"string",len:80,index:!0,comment:"use to reference the insurance to another software"},{name:"name",type:"string",len:120},{name:"attn",type:"string",len:120},{name:"address1",type:"string",len:100},{name:"address2",type:"string",len:100},{name:"city",type:"string",len:80},{name:"state",type:"string",len:80},{name:"zip_code",type:"string",len:15},{name:"country",type:"string",len:80},{name:"phone1",type:"string",len:20},{name:"phone2",type:"string",len:20},{name:"fax",type:"string",len:20},{name:"dx_type",type:"string",len:5},{name:"address_full",type:"string",store:!1,convert:function(a,b){return b.data.address1+" "+b.data.address2+" "+b.data.city+" "+b.data.state+", "+b.data.zip_code}},{name:"combo_text",type:"string",store:!1,convert:function(a,b){return b.data.id+": "+(b.data.name?b.data.name:" * ")+" "+(b.data.active?"":"("+_("inactive")+")")}},{name:"active",type:"bool"}],proxy:{type:"direct",api:{read:"Insurance.getInsuranceCompanies",create:"Insurance.addInsuranceCompany",update:"Insurance.updateInsuranceCompany"},reader:{root:"data"}}}),Ext.define("App.model.administration.LabObservations",{extend:"Ext.data.Model",table:{name:"labs_panels",comment:"Laboratory Observations"},fields:[{name:"id",type:"string",comment:"LOINC"},{name:"code_text_short",type:"string"},{name:"parent_id",type:"int",dataType:"bigint"},{name:"parent_loinc",type:"string",dataType:"text"},{name:"parent_name",type:"string",dataType:"text"},{name:"sequence",type:"string",dataType:"text"},{name:"loinc_number",type:"string",dataType:"text"},{name:"loinc_name",type:"string",dataType:"text"},{name:"default_unit",type:"string"},{name:"range_start",type:"string"},{name:"range_end",type:"string"},{name:"required_in_panel",type:"string",dataType:"text"},{name:"description",type:"string",dataType:"text"},{name:"active",type:"bool"}]}),Ext.define("App.model.administration.Laboratories",{extend:"Ext.data.Model",table:{name:"laboratories",comment:"Laboratories Grid"},fields:[{name:"id",type:"int",comment:"Laboratory ID"},{name:"name",type:"string"},{name:"transmit_method",type:"string"},{name:"email",type:"string"},{name:"address_id",type:"int"},{name:"line1",type:"string",store:!1},{name:"line2",type:"string",store:!1},{name:"city",type:"string",store:!1},{name:"state",type:"string",store:!1},{name:"zip",type:"string",store:!1},{name:"plus_four",type:"string",store:!1},{name:"country",type:"string",store:!1},{name:"address_full",type:"string",store:!1},{name:"phone_id",type:"int"},{name:"phone_country_code",type:"string",store:!1},{name:"phone_area_code",type:"string",store:!1},{name:"phone_prefix",type:"string",store:!1},{name:"phone_number",type:"string",store:!1},{name:"phone_full",type:"string",store:!1},{name:"fax_id",type:"int"},{name:"fax_country_code",type:"string",store:!1},{name:"fax_area_code",type:"string",store:!1},{name:"fax_prefix",type:"string",store:!1},{name:"fax_number",type:"string",store:!1},{name:"fax_full",type:"string",store:!1},{name:"active",type:"bool"}],proxy:{type:"direct",api:{read:"Practice.getLaboratories",create:"Practice.addLaboratory",update:"Practice.updateLaboratory"}}}),Ext.define("App.model.administration.LayoutTree",{extend:"Ext.data.Model",fields:[{name:"id",type:"string"},{name:"parentId",type:"string"},{name:"text",type:"string"},{name:"index",type:"int",mapping:"x_index"},{name:"parentId",type:"string"},{name:"text",type:"string"},{name:"index",type:"int"},{name:"xtype",type:"string"},{name:"form_id",type:"int"},{name:"title",type:"string"},{name:"fieldLabel",type:"string"},{name:"emptyText",type:"string"},{name:"labelWidth",type:"string"},{name:"hideLabel",type:"bool",useNull:!0,defaultValue:null},{name:"layout",type:"string"},{name:"width",type:"string"},{name:"height",type:"string"},{name:"anchor",type:"string"},{name:"margin",type:"string"},{name:"flex",type:"string"},{name:"collapsible",type:"bool",useNull:!0,defaultValue:null},{name:"checkboxToggle",type:"bool",useNull:!0,defaultValue:null},{name:"collapsed",type:"bool",useNull:!0,defaultValue:null},{name:"inputValue",type:"string"},{name:"allowBlank",type:"string"},{name:"value",type:"string"},{name:"minLength",type:"string"},{name:"maxLength",type:"string"},{name:"maxValue",type:"string"},{name:"minValue",type:"string"},{name:"boxLabel",type:"string"},{name:"grow",type:"bool",useNull:!0,defaultValue:null},{name:"growMin",type:"string"},{name:"growMax",type:"string"},{name:"increment",type:"string"},{name:"code",type:"string"},{name:"name",type:"string"},{name:"list_id",type:"string"},{name:"itemId",type:"string"},{name:"action",type:"string"}],proxy:{type:"direct",api:{read:"FormLayoutBuilder.getFormFieldsTree",create:"FormLayoutBuilder.createFormField",update:"FormLayoutBuilder.updateFormField",destroy:"FormLayoutBuilder.removeFormField"},writer:{writeAllFields:!0}}}),Ext.define("App.model.administration.ListOptions",{extend:"Ext.data.Model",table:{name:"combo_lists_options",comment:"Combo List Options"},fields:[{name:"id",type:"int",comment:"List Options ID"},{name:"list_id",type:"int",index:!0,comment:"List ID"},{name:"option_value",type:"string",index:!0,comment:"Value"},{name:"option_name",type:"string",comment:"Name"},{name:"code",type:"string",len:15,index:!0,comment:"value code"},{name:"code_type",type:"string",len:10,comment:"CPT4 LOINC SNOMEDCT ICD9 ICD10 RXNORM"},{name:"seq",type:"int",comment:"Sequence"},{name:"notes",type:"string",comment:"Notes"},{name:"active",type:"bool",comment:"Active?"}],proxy:{type:"direct",api:{read:"Lists.getOptions",create:"Lists.addOption",update:"Lists.updateOption"}}}),Ext.define("App.model.administration.Lists",{extend:"Ext.data.Model",table:{name:"combo_lists",comment:"Combo List"},fields:[{name:"id",type:"int",comment:"List Options ID"},{name:"title",type:"string",comment:"Title of the combo"},{name:"active",type:"bool",comment:"Active?"},{name:"in_use",type:"bool",persist:!1}],proxy:{type:"direct",api:{read:"Lists.getLists",create:"Lists.addList",update:"Lists.updateList",destroy:"Lists.deleteList"}}}),Ext.define("App.model.administration.AuditLog",{extend:"Ext.data.Model",table:{name:"audit_log",comment:"Audit Logs"},fields:[{name:"id",type:"int",comment:"Audit Log ID"},{name:"eid",type:"int",comment:"Encounter ID",index:!0},{name:"pid",type:"int",comment:"Patient ID",index:!0},{name:"uid",type:"int",comment:"User ID",index:!0},{name:"fid",type:"int",comment:"Facility ID",index:!0},{name:"event",type:"string",len:200,comment:"Event description"},{name:"user_title",type:"string",store:!1},{name:"user_fname",type:"string",store:!1},{name:"user_mname",type:"string",store:!1},{name:"user_lname",type:"string",store:!1},{name:"patient_title",type:"string",store:!1},{name:"patient_fname",type:"string",store:!1},{name:"patient_mname",type:"string",store:!1},{name:"patient_lname",type:"string",store:!1},{name:"user_name",type:"string",store:!1,convert:function(a,b){var c="";return b.data.user_title&&(c+=b.data.user_title+" "),b.data.user_fname&&(c+=b.data.user_fname+" "),b.data.user_mname&&(c+=b.data.user_mname+" "),b.data.user_lname&&(c+=b.data.user_lname),c}},{name:"patient_name",type:"string",store:!1,convert:function(a,b){var c="";return b.data.patient_title&&(c+=b.data.patient_title+" "),b.data.patient_fname&&(c+=b.data.patient_fname+" "),b.data.patient_mname&&(c+=b.data.patient_mname+" "),b.data.patient_lname&&(c+=b.data.patient_lname),c}},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s",comment:"Date of the event"}],proxy:{type:"direct",api:{read:"AuditLog.getLogs",create:"AuditLog.setLog",update:"AuditLog.setLog"},reader:{totalProperty:"totals",root:"rows"}}}),Ext.define("App.model.administration.Modules",{extend:"Ext.data.Model",table:{name:"modules",comment:"Modules"},fields:[{name:"id",type:"int"},{name:"title",type:"string",len:80},{name:"name",type:"string",len:100},{name:"description",type:"string"},{name:"enable",type:"bool"},{name:"installed_version",type:"string",len:20},{name:"licensekey",type:"string"},{name:"localkey",type:"string"}],proxy:{type:"direct",api:{read:"Modules.getActiveModules",update:"Modules.updateModule"},writer:{writeAllFields:!0}}}),Ext.define("App.model.administration.Medications",{extend:"Ext.data.Model",fields:[{name:"RXCUI",type:"auto"},{name:"CODE",type:"auto"},{name:"STR",type:"auto"},{name:"DST",type:"auto"},{name:"DRT",type:"auto"},{name:"DDF",type:"auto"},{name:"DDFA",type:"auto"},{name:"RXN_QUANTITY",type:"auto"},{name:"SAB",type:"auto"},{name:"RXAUI",type:"auto"}],proxy:{type:"direct",api:{read:"Rxnorm.getRXNORMList"},reader:{totalProperty:"totals",root:"data"},filterParam:"query",encodeFilters:function(a){return a[0].value}}}),Ext.define("App.model.administration.ParentFields",{extend:"Ext.data.Model",table:{name:"parentfields",comment:"Parent Fields"},fields:[{name:"name",type:"string"},{name:"value",type:"string"}],proxy:{type:"direct",api:{read:"FormLayoutBuilder.getParentFields"}}}),Ext.define("App.model.administration.Pharmacies",{extend:"Ext.data.Model",table:{name:"pharmacies",comment:"Pharmacies"},fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"transmit_method",type:"string"},{name:"email",type:"string"},{name:"address_id",type:"int"},{name:"line1",type:"string",store:!1},{name:"line2",type:"string",store:!1},{name:"city",type:"string",store:!1},{name:"state",type:"string",store:!1},{name:"zip",type:"string",store:!1},{name:"plus_four",type:"string",store:!1},{name:"country",type:"string",store:!1},{name:"address_full",type:"string",store:!1},{name:"phone_id",type:"int"},{name:"phone_country_code",type:"string",store:!1},{name:"phone_area_code",type:"string",store:!1},{name:"phone_prefix",type:"string",store:!1},{name:"phone_number",type:"string",store:!1},{name:"phone_full",type:"string",store:!1},{name:"fax_id",type:"int"},{name:"fax_country_code",type:"string",store:!1},{name:"fax_area_code",type:"string",store:!1},{name:"fax_prefix",type:"string",store:!1},{name:"fax_number",type:"string",store:!1},{name:"fax_full",type:"string",store:!1},{name:"active",type:"bool"}],proxy:{type:"direct",api:{read:"Practice.getPharmacies",create:"Practice.addPharmacy",update:"Practice.updatePharmacy"}}}),Ext.define("App.model.administration.PreventiveCare",{extend:"Ext.data.Model",table:{name:"preventivecare",comment:"Preventive Care"},fields:[{name:"id",type:"int"},{name:"pid",type:"int"},{name:"preventive_care_id",type:"int"},{name:"uid",type:"int"},{name:"description",type:"string"},{name:"age_start",type:"string"},{name:"age_end",type:"string"},{name:"sex",type:"string"},{name:"pregnant",type:"bool"},{name:"frequency",type:"string"},{name:"category_id",type:"string"},{name:"code",type:"string"},{name:"coding_system",type:"string"},{name:"dismiss",type:"bool"},{name:"frequency_type",type:"string"},{name:"reason",type:"string"},{name:"times_to_perform",type:"string"},{name:"doc_url1",type:"string"},{name:"doc_url2",type:"string"},{name:"doc_url3",type:"string"},{name:"active",type:"bool"}]}),Ext.define("App.model.administration.PreventiveCareActiveProblems",{extend:"Ext.data.Model",table:{name:"preventivecareactiveproblems",comment:"Preventive Care Active Problems"},fields:[{name:"guideline_id",type:"int"},{name:"code",type:"string"},{name:"code_text",type:"string"}]}),Ext.define("App.model.administration.PreventiveCareLabs",{extend:"Ext.data.Model",table:{name:"preventivecarelabs",comment:"Preventive Care Labs"},fields:[{name:"id",type:"int"},{name:"value_name",type:"string"},{name:"greater_than",type:"string"},{name:"less_than",type:"string"},{name:"equal_to",type:"string"},{name:"code",type:"string"},{name:"preventive_care_id",type:"string"}]}),Ext.define("App.model.administration.PreventiveCareMedications",{extend:"Ext.data.Model",table:{name:"preventivecaremedications",comment:"Preventive Care Medications"},fields:[{name:"guideline_id",type:"int"},{name:"code",type:"string"},{name:"code_text",type:"string"}]}),Ext.define("App.model.administration.ProviderCredentialization",{extend:"Ext.data.Model",table:{name:"provider_credentializations"},fields:[{name:"id",type:"int"},{name:"provider_id",type:"int",index:!0},{name:"insurance_company_id",type:"int",index:!0},{name:"insurance_company_name",type:"string",store:!1},{name:"start_date",type:"date",dataType:"date",dateFormat:"Y-m-d",index:!0},{name:"end_date",type:"date",dataType:"date",dateFormat:"Y-m-d",index:!0},{name:"credentialization_notes",type:"string"},{name:"active",type:"bool",store:!1,convert:function(a,b){var c=new Date;
return b.data.start_date<=c&&b.data.end_date>=c}},{name:"create_uid",type:"int"},{name:"create_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"update_uid",type:"int"},{name:"update_date",type:"date",dateFormat:"Y-m-d H:i:s"}],proxy:{type:"direct",api:{read:"Providers.getProviderCredentializations",create:"Providers.addProviderCredentialization",update:"Providers.updateProviderCredentialization",destroy:"Providers.deleteProviderCredentialization"},reader:{root:"data"}}}),Ext.define("App.model.administration.ReferringProviderFacility",{extend:"Ext.data.Model",table:{name:"referring_providers_facilities"},fields:[{name:"id",type:"int"},{name:"referring_provider_id",type:"int",index:!0},{name:"name",type:"string",len:80},{name:"address",type:"string",len:35},{name:"address_cont",type:"string",len:35},{name:"city",type:"string",len:35},{name:"state",type:"string",len:35},{name:"postal_code",type:"string",len:15},{name:"country",type:"string",len:10},{name:"taxonomy",type:"string",len:40,comment:"taxonomy",defaultValue:"207Q00000X"},{name:"accept_mc",type:"bool",comment:"Accepts Medicare"},{name:"email",type:"string",len:180},{name:"direct_address",type:"string",len:180},{name:"phone_number",type:"string",len:25},{name:"fax_number",type:"string",len:25},{name:"notes",type:"string",len:600},{name:"is_default",type:"bool"},{name:"active",type:"bool"},{name:"create_uid",type:"int"},{name:"update_uid",type:"int"},{name:"create_date",type:"date",comment:"create date",dateFormat:"Y-m-d H:i:s"},{name:"update_date",type:"date",comment:"last update date",dateFormat:"Y-m-d H:i:s"}],proxy:{type:"direct",api:{read:"ReferringProviders.getReferringProviderFacilities",create:"ReferringProviders.addReferringProviderFacility",update:"ReferringProviders.updateReferringProviderFacility"}}}),Ext.define("App.model.administration.ReferringProvider",{extend:"Ext.data.Model",table:{name:"referring_providers"},fields:[{name:"id",type:"int"},{name:"code",type:"string",len:40},{name:"title",type:"string",len:10},{name:"fname",type:"string",len:80},{name:"mname",type:"string",len:80},{name:"lname",type:"string",len:120},{name:"upin",type:"string",len:25,comment:"Carrier Claim Referring Physician UPIN Number"},{name:"lic",type:"string",len:25},{name:"npi",type:"string",len:25},{name:"fda",type:"string",len:25},{name:"ess",type:"string",len:25},{name:"ssn",type:"string",len:25,comment:"federal tax id"},{name:"taxonomy",type:"string",len:40,comment:"taxonomy",defaultValue:"207Q00000X"},{name:"accept_mc",type:"bool",comment:"Accepts Medicare"},{name:"notes",type:"string",len:600},{name:"email",type:"string",len:180},{name:"direct_address",type:"string",len:180},{name:"phone_number",type:"string",len:25},{name:"fax_number",type:"string",len:25},{name:"cel_number",type:"string",len:25},{name:"active",type:"bool"},{name:"create_uid",type:"int"},{name:"update_uid",type:"int"},{name:"create_date",type:"date",comment:"create date",dateFormat:"Y-m-d H:i:s"},{name:"update_date",type:"date",comment:"last update date",dateFormat:"Y-m-d H:i:s"}],proxy:{type:"direct",api:{read:"ReferringProviders.getReferringProviders",create:"ReferringProviders.addReferringProvider",update:"ReferringProviders.updateReferringProvider"},reader:{root:"data"}},hasMany:[{model:"App.model.administration.ReferringProviderFacility",name:"facilities",foreignKey:"referring_provider_id"}]}),Ext.define("App.model.administration.Services",{extend:"Ext.data.Model",table:{name:"services",comment:"Services"},fields:[{name:"id",type:"string",comment:"Services ID"},{name:"code_text",type:"string"},{name:"sg_code",type:"string"},{name:"long_desc",type:"string"},{name:"code_text_short",type:"string"},{name:"code",type:"string"},{name:"code_type",type:"string"},{name:"modifier",type:"string"},{name:"units",type:"string"},{name:"fee",type:"int"},{name:"superbill",type:"string"},{name:"related_code",type:"string"},{name:"taxrates",type:"string"},{name:"active",type:"bool"},{name:"reportable",type:"string"},{name:"has_children",type:"bool"},{name:"sex",type:"string"},{name:"age_start",type:"int"},{name:"age_end",type:"int"},{name:"times_to_perform",type:"int"},{name:"frequency_number",type:"int"},{name:"frequency_time",type:"string"},{name:"pregnant",type:"bool"},{name:"only_once",type:"bool"},{name:"active_problems",type:"string"},{name:"medications",type:"string"},{name:"labs",type:"string"},{name:"has_children",type:"bool"},{name:"class",type:"string"}]}),Ext.define("App.model.administration.Specialty",{extend:"Ext.data.Model",table:{name:"specialties",comment:"Providers Specialties"},fields:[{name:"id",type:"int"},{name:"code",type:"string",len:100},{name:"title",type:"string",len:100},{name:"taxonomy",type:"string",len:30},{name:"modality",type:"string",len:50},{name:"ges",type:"string",len:5},{name:"active",type:"bool"},{name:"text_details",type:"string",store:!1,convert:function(a,b){return b.data.id+": "+b.data.title}},{name:"combo_text",type:"string",store:!1,convert:function(a,b){return b.data.id+": "+b.data.title+" "+(b.data.active?"("+_("not_active")+")":"")}},{name:"create_uid",type:"int"},{name:"update_uid",type:"int"},{name:"create_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"update_date",type:"date",dateFormat:"Y-m-d H:i:s"}],proxy:{type:"direct",api:{read:"Specialties.getSpecialties",create:"Specialties.addSpecialty",update:"Specialties.updateSpecialty"},reader:{root:"data"}}}),Ext.define("App.model.administration.TemplatePanel",{extend:"Ext.data.Model",table:{name:"template_panels"},fields:[{name:"id",type:"int"},{name:"specialty_id",type:"int",index:!0},{name:"description",type:"string",len:300},{name:"sex",type:"string",len:1,index:!0},{name:"order",type:"int"},{name:"active",type:"bool",index:!0}],proxy:{type:"direct",api:{read:"TemplatePanels.getTemplatePanels",create:"TemplatePanels.createTemplatePanel",update:"TemplatePanels.updateTemplatePanel",destroy:"TemplatePanels.deleteTemplatePanel"},reader:{root:"data"}},hasMany:[{model:"App.model.administration.TemplatePanelTemplate",name:"templates",foreignKey:"panel_id",storeConfig:{groupField:"template_type"}}]}),Ext.define("App.model.administration.TemplatePanelTemplate",{extend:"Ext.data.Model",table:{name:"template_panels_templates"},fields:[{name:"id",type:"int"},{name:"panel_id",type:"int"},{name:"template_type",type:"string",len:80,comment:"rx lab rad etc"},{name:"description",type:"string",len:300},{name:"template_data",type:"string",dataType:"mediumtext"},{name:"active",type:"bool"}],proxy:{type:"direct",api:{read:"TemplatePanels.getTemplatePanelTemplates",create:"TemplatePanels.createTemplatePanelTemplate",update:"TemplatePanels.updateTemplatePanelTemplate",destroy:"TemplatePanels.deleteTemplatePanelTemplate"},reader:{root:"data"}}}),Ext.define("App.model.administration.TransactionLog",{extend:"Ext.data.Model",table:{name:"audit_transaction_log",comment:"Data INSERT UPDATE DELETE Logs"},fields:[{name:"id",type:"int"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s",comment:"Date of the event"},{name:"pid",type:"int",comment:"Patient ID"},{name:"eid",type:"int",comment:"Encounter ID"},{name:"uid",type:"int",comment:"User ID"},{name:"fid",type:"int",comment:"Facility ID"},{name:"event",type:"string",len:10,comment:"Event UPDATE INSERT DELETE"},{name:"table_name",type:"string",len:60},{name:"sql_string",type:"string",dataType:"mediumtext"},{name:"data",type:"array",dataType:"mediumtext",comment:"serialized data",convert:function(a,b){return b.serializeEventData(a)}},{name:"ip",type:"string",len:40},{name:"user_title",type:"string",store:!1},{name:"user_fname",type:"string",store:!1},{name:"user_mname",type:"string",store:!1},{name:"user_lname",type:"string",store:!1},{name:"patient_title",type:"string",store:!1},{name:"patient_fname",type:"string",store:!1},{name:"patient_mname",type:"string",store:!1},{name:"patient_lname",type:"string",store:!1},{name:"user_name",type:"string",store:!1,convert:function(a,b){var c="";return b.data.user_title&&(c+=b.data.user_title+" "),b.data.user_fname&&(c+=b.data.user_fname+" "),b.data.user_mname&&(c+=b.data.user_mname+" "),b.data.user_lname&&(c+=b.data.user_lname),c}},{name:"patient_name",type:"string",store:!1,convert:function(a,b){var c="";return b.data.patient_title&&(c+=b.data.patient_title+" "),b.data.patient_fname&&(c+=b.data.patient_fname+" "),b.data.patient_mname&&(c+=b.data.patient_mname+" "),b.data.patient_lname&&(c+=b.data.patient_lname),c}},{name:"is_valid",type:"bool",store:!1},{name:"checksum",type:"string",len:80}],proxy:{type:"direct",api:{read:"AuditLog.getLogs"},reader:{root:"data"}},serializeEventData:function(a){var b="";return Ext.Object.each(a,function(a,c){b+=a+" - "+c+"<br>"}),b}}),Ext.define("App.model.administration.XtypesComboModel",{extend:"Ext.data.Model",table:{name:"xtypescombo",comment:"XTYPE Combos"},fields:[{name:"id",type:"string"},{name:"name",type:"string"},{name:"value",type:"string"}],proxy:{type:"direct",api:{read:"CombosData.getFiledXtypes"}},autoLoad:!0}),Ext.define("App.model.administration.User",{extend:"Ext.data.Model",table:{name:"users",comment:"User accounts"},fields:[{name:"id",type:"int"},{name:"code",type:"string",len:40},{name:"providerCode",type:"string",len:40},{name:"create_uid",type:"int",comment:"create user ID"},{name:"update_uid",type:"int",comment:"update user ID"},{name:"create_date",type:"date",comment:"create date",dateFormat:"Y-m-d H:i:s"},{name:"update_date",type:"date",comment:"last update date",dateFormat:"Y-m-d H:i:s"},{name:"username",type:"string",comment:"username",len:20,index:!0},{name:"password",type:"string",comment:"password",dataType:"blob",encrypt:!0},{name:"pwd_history1",type:"string",comment:"first password history backwards",dataType:"blob",encrypt:!0},{name:"pwd_history2",type:"string",comment:"second password history backwards",dataType:"blob",encrypt:!0},{name:"title",type:"string",comment:"title (Mr. Mrs.)",len:10},{name:"fname",type:"string",comment:"first name",len:80,index:!0},{name:"mname",type:"string",comment:"middle name",len:80,index:!0},{name:"lname",type:"string",comment:"last name",len:120,index:!0},{name:"fullname",type:"string",comment:"title full name",store:!1},{name:"shortname",type:"string",comment:"title and last name",store:!1},{name:"pin",type:"string",comment:"pin number",len:10},{name:"is_attending",type:"bool",index:!0},{name:"npi",type:"string",comment:"National Provider Identifier",len:15,index:!0},{name:"lic",type:"string",len:80},{name:"ess",type:"string",len:80},{name:"upin",type:"string",len:80},{name:"fedtaxid",type:"string",comment:"federal tax id",len:80},{name:"feddrugid",type:"string",comment:"federal drug id",len:80},{name:"notes",type:"string",len:300},{name:"email",type:"string",len:150,index:!0},{name:"phone",type:"string",len:80},{name:"mobile",type:"string",len:80},{name:"direct_address",type:"string",comment:"direct_address",len:150,index:!0},{name:"specialty",type:"array",comment:"specialty",len:80},{name:"taxonomy",type:"string",comment:"taxonomy",defaultValue:"207Q00000X",len:40,index:!0},{name:"warehouse_id",type:"int",comment:"default warehouse"},{name:"facility_id",type:"int",comment:"default facility",index:!0},{name:"role_id",type:"int",comment:"acl_user_roles relation"},{name:"calendar",type:"bool",comment:"has calendar? 0=no 1=yes",index:!0},{name:"street",type:"string",len:55},{name:"street_cont",type:"string",len:55},{name:"city",type:"string",len:55},{name:"state",type:"string",len:55},{name:"postal_code",type:"string",len:15},{name:"country_code",type:"string",len:15},{name:"authorized",type:"bool"},{name:"active",type:"bool",index:!0}],proxy:{type:"direct",api:{read:"User.getUsers",create:"User.addUser",update:"User.updateUser"},reader:{root:"data"}},hasMany:[{model:"App.model.Phones",name:"phones",primaryKey:"id",foreignKey:"use_id"},{model:"App.model.Address",name:"address",primaryKey:"id",foreignKey:"use_id"}]}),Ext.define("App.model.miscellaneous.OfficeNotes",{extend:"Ext.data.Model",table:{name:"office_notes",comment:"Office Notes"},fields:[{name:"id",type:"int",comment:"Office Notes ID"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"body",type:"string"},{name:"user",type:"string"},{name:"facility_id",type:"string"},{name:"activity",type:"string"}],proxy:{type:"direct",api:{read:"OfficeNotes.getOfficeNotes",create:"OfficeNotes.addOfficeNotes",update:"OfficeNotes.updateOfficeNotes"}}}),Ext.define("App.model.miscellaneous.Amendment",{extend:"Ext.data.Model",table:{name:"patient_amendments"},fields:[{name:"id",type:"int"},{name:"portal_id",type:"int"},{name:"pid",type:"int"},{name:"amendment_type",type:"string",len:1,comment:"P = patient or D = Doctor or O = organization"},{name:"amendment_data",type:"array",dataType:"mediumtext"},{name:"amendment_message",type:"string",dataType:"text"},{name:"amendment_status",type:"string",len:1,comment:"W = waiting or A = approved or D = denied or C = canceled"},{name:"response_message",type:"string",len:500,comment:"denial or approval reason"},{name:"is_read",type:"bool"},{name:"is_viewed",type:"bool"},{name:"is_synced",type:"bool"},{name:"assigned_to_uid",type:"int"},{name:"create_uid",type:"int"},{name:"update_uid",type:"int"},{name:"response_uid",type:"int"},{name:"approved_by",type:"string",len:80},{name:"assigned_date",type:"date",comment:"Assigned date",dateFormat:"Y-m-d H:i:s"},{name:"response_date",type:"date",comment:"create date",dateFormat:"Y-m-d H:i:s"},{name:"cancel_date",type:"date",comment:"create date",dateFormat:"Y-m-d H:i:s"},{name:"cancel_by",type:"string",len:15,comment:"U for user P patient and ID"},{name:"create_date",type:"date",comment:"create date",dateFormat:"Y-m-d H:i:s"},{name:"update_date",type:"date",comment:"last update date",dateFormat:"Y-m-d H:i:s"},{name:"responded_by",type:"string",store:!1,convert:function(a,b){return"A"===b.data.amendment_status?b.data.response_title+" "+b.data.response_fname+" "+b.data.response_mname+" "+b.data.response_lname:""}},{name:"response_title",type:"string",store:!1},{name:"response_fname",type:"string",store:!1},{name:"response_mname",type:"string",store:!1},{name:"response_lname",type:"string",store:!1}],proxy:{type:"direct",api:{read:"Amendments.getAmendments",create:"Amendments.addAmendment",update:"Amendments.updateAmendment"},reader:{root:"data"}}}),Ext.define("App.model.account.VoucherLine",{extend:"Ext.data.Model",table:{name:"accvoucherline",comment:"Voucher / Receipt"},fields:[{name:"id",type:"int"},{name:"createUid",type:"int"},{name:"createDate",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"writeUid",type:"int"},{name:"writeDate",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"voucherId",type:"int",comment:"Voucher"},{name:"accountId",type:"int",comment:"Account"},{name:"moveLineId",type:"int",comment:"Journal Item"},{name:"reconcile",type:"bool",defaultValue:!1,comment:"Full Reconcile"},{name:"code",type:"string",comment:"COPAY/CPT/HCPCS/SKU codes"},{name:"name",type:"string",comment:"Description"},{name:"type",type:"string",comment:"debit/credit"},{name:"amountUnreconciled",type:"float",comment:"Open Balance"},{name:"amountUntax",type:"float",comment:"Untax Amount"},{name:"amountOriginal",type:"float",comment:"Default Amount"},{name:"amount",type:"float",comment:"Amount"}],proxy:{type:"direct",api:{read:"AccVoucher.getVoucherLines",create:"AccVoucher.addVoucherLine",update:"AccVoucher.updateVoucherLine",destroy:"AccVoucher.destroyVoucherLine"}},associations:[{type:"belongsTo",model:"App.model.account.Voucher",foreignKey:"voucherId",setterName:"setVoucher",getterName:"getVoucher"}]}),Ext.define("App.model.account.Voucher",{extend:"Ext.data.Model",table:{name:"accvoucher",comment:"Voucher / Receipt"},fields:[{name:"id",type:"int"},{name:"createUid",type:"int"},{name:"createDate",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"writeUid",type:"int"},{name:"writeDate",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"dateDue",type:"date",dateFormat:"Y-m-d H:i:s",comment:"Due Date"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s",comment:"Date"},{name:"encounterId",type:"int",comment:"Encounter"},{name:"accountId",type:"int",comment:"Account"},{name:"journalId",type:"int",comment:"Journal"},{name:"moveId",type:"int",comment:"Account Entry"},{name:"active",type:"bool",defaultValue:!0,comment:"Active?"},{name:"comment",type:"string",comment:"Comment"},{name:"reference",type:"string",comment:"Ref"},{name:"number",type:"string",comment:"Number"},{name:"notes",type:"string",mapping:"narration",comment:"Notes"},{name:"status",type:"string",mapping:"state",comment:"Status"},{name:"type",type:"string",comment:"visit/product/office"},{name:"amount",type:"float",defaultValue:0,comment:"Total Amount"}],proxy:{type:"direct",api:{read:"AccVoucher.getVoucher",create:"AccVoucher.addVoucher",update:"AccVoucher.updateVoucher",destroy:"AccVoucher.destroyVoucher"}},hasMany:[{model:"App.model.account.VoucherLine",name:"voucherlines",foreignKey:"voucherId"}]}),Ext.define("App.model.fees.Billing",{extend:"Ext.data.Model",table:{name:"billing",comment:"Billing"},fields:[{name:"eid",type:"int "},{name:"pid",type:"int"},{name:"patientName",type:"string"},{name:"primaryProvider",type:"string"},{name:"encounterProvider",type:"string"},{name:"supervisorProvider",type:"string"},{name:"facility",type:"string"},{name:"billing_facility",type:"string"},{name:"service_date",type:"date"},{name:"close_date",type:"date"},{name:"billing_stage",type:"int"},{name:"dxCodes",type:"auto"}],proxy:{type:"direct",api:{read:"Fees.getFilterEncountersBillingData"},reader:{root:"encounters",totalProperty:"totals"}}}),Ext.define("App.model.fees.Checkout",{extend:"Ext.data.Model",table:{name:"checkout",comment:"Checkout"},fields:[{name:"id",type:"int",comment:"Checkout ID"},{name:"time",type:"string"},{name:"follow_up_facility",type:"string"},{name:"note",type:"string"},{name:"reminder",type:"string"},{name:"patient_name",type:"string"},{name:"encounter_number",type:"int"},{name:"transaction_facility",type:"string"},{name:"transaction_number",type:"int"},{name:"transaction_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"payment_amount",type:"string"},{name:"paying_entity",type:"string"},{name:"post_to_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"check_number",type:"int"}],proxy:{type:"direct",api:{read:"Fees.getPaymentsBySearch"},reader:{root:"rows",totalProperty:"totals"}}}),Ext.define("App.model.fees.EncountersPayments",{extend:"Ext.data.Model",table:{name:"encounterspayments",comment:"Encounters Payments"},fields:[{name:"id",type:"int",dataType:"bigint",len:20,primaryKey:!0,autoIncrement:!0,allowNull:!1,store:!0,comment:"Encounter Payments ID"},{name:"paying_entity",type:"string"},{name:"payment_from",type:"string"},{name:"no",type:"int"},{name:"payment_method",type:"string"},{name:"pay_to",type:"string"},{name:"amount",type:"string"},{name:"date_from",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"date_to",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"note",type:"string"}],proxy:{type:"direct",api:{read:"Fees.getPaymentsBySearch"},reader:{root:"rows",totalProperty:"totals"}}}),Ext.define("App.model.fees.PaymentTransactions",{extend:"Ext.data.Model",table:{name:"paymenttransactions",comment:"Payment Transactions"},fields:[],proxy:{type:"direct",api:{read:"Fees.getPaymentsBySearch"},reader:{root:"rows",totalProperty:"totals"}}}),Ext.define("App.model.navigation.Navigation",{extend:"Ext.data.Model",fields:[{name:"text",type:"string"},{name:"disabled",type:"bool",defaultValue:!1}],proxy:{type:"direct",api:{read:"Navigation.getNavigation"}}}),Ext.define("App.model.patient.Vitals",{extend:"Ext.data.Model",table:{name:"encounter_vitals"},fields:[{name:"id",type:"int",comment:"Vital ID"},{name:"pid",type:"int",index:!0},{name:"eid",type:"int",index:!0},{name:"uid",type:"int"},{name:"auth_uid",type:"int"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"weight_lbs",type:"string",useNull:!0,len:10},{name:"weight_kg",type:"float",useNull:!0,len:10},{name:"height_in",type:"float",useNull:!0,len:10},{name:"height_cm",type:"float",useNull:!0,len:10},{name:"bp_systolic",type:"float",useNull:!0,len:10},{name:"bp_diastolic",type:"float",useNull:!0,len:10},{name:"pulse",type:"int",useNull:!0,len:10,convert:function(a){return a>0?a:null}},{name:"respiration",type:"int",useNull:!0,len:10,convert:function(a){return a>0?a:null}},{name:"temp_f",type:"float",useNull:!0,len:10,convert:function(a){return a>0?a:null}},{name:"temp_c",type:"float",useNull:!0,len:10,convert:function(a){return a>0?a:null}},{name:"temp_location",type:"string",len:40},{name:"oxygen_saturation",type:"float",useNull:!0,len:10},{name:"head_circumference_in",type:"float",useNull:!0,len:10},{name:"head_circumference_cm",type:"float",useNull:!0,len:10},{name:"waist_circumference_in",type:"float",useNull:!0,len:10},{name:"waist_circumference_cm",type:"float",useNull:!0,len:10},{name:"bmi",type:"float",useNull:!0,len:10,convert:function(a){return a>0?a:null}},{name:"bmi_status",type:"string",useNull:!0,len:10},{name:"other_notes",type:"string",len:600},{name:"bp_systolic_normal",type:"int",defaultValue:120,store:!1},{name:"bp_diastolic_normal",type:"int",defaultValue:80,store:!1},{name:"group_date",type:"string",store:!1,convert:function(a,b){return Ext.Date.format(b.data.date,"Y-m-d")}},{name:"administer_by",type:"string",store:!1},{name:"authorized_by",type:"string",store:!1}],proxy:{type:"direct",api:{read:"Vitals.getVitals",create:"Vitals.addVitals",update:"Vitals.updateVitals"},writer:{writeAllFields:!0}},belongsTo:{model:"App.model.patient.Encounter",foreignKey:"eid"}}),Ext.define("App.model.patient.FamilyHistory",{extend:"Ext.data.Model",table:{name:"patient_family_history"},fields:[{name:"id",type:"int"},{name:"pid",type:"int",index:!0},{name:"eid",type:"int",index:!0},{name:"condition",type:"string",len:60},{name:"condition_code",type:"string",len:60},{name:"condition_code_type",type:"string",len:60},{name:"relation",type:"string",len:60},{name:"relation_code",type:"string",len:60},{name:"relation_code_type",type:"string",len:60},{name:"create_uid",type:"int"},{name:"update_uid",type:"int"},{name:"create_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"update_date",type:"date",dateFormat:"Y-m-d H:i:s"}],proxy:{type:"direct",api:{read:"FamilyHistory.getFamilyHistory",create:"FamilyHistory.addFamilyHistory",update:"FamilyHistory.updateFamilyHistory"}},belongsTo:{model:"App.model.patient.Encounter",foreignKey:"eid"}}),Ext.define("App.model.patient.ReviewOfSystems",{extend:"Ext.data.Model",table:{name:"encounter_review_of_systems",comment:"Review of system"},fields:[{name:"id",type:"int"},{name:"pid",type:"int",index:!0},{name:"eid",type:"int",index:!0},{name:"uid",type:"int"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"weight_change",type:"bool"},{name:"weakness",type:"bool"},{name:"fatigue",type:"bool"},{name:"anorexia",type:"bool"},{name:"fever",type:"bool"},{name:"chills",type:"bool"},{name:"night_sweats",type:"bool"},{name:"insomnia",type:"bool"},{name:"irritability",type:"bool"},{name:"heat_or_cold",type:"bool"},{name:"intolerance",type:"bool"},{name:"change_in_vision",type:"bool"},{name:"eye_pain",type:"bool"},{name:"family_history_of_glaucoma",type:"bool"},{name:"irritation",type:"bool"},{name:"redness",type:"bool"},{name:"excessive_tearing",type:"bool"},{name:"double_vision",type:"bool"},{name:"blind_spots",type:"bool"},{name:"photophobia",type:"bool"},{name:"hearing_loss",type:"bool"},{name:"discharge",type:"bool"},{name:"pain",type:"bool"},{name:"vertigo",type:"bool"},{name:"tinnitus",type:"bool"},{name:"frequent_colds",type:"bool"},{name:"sore_throat",type:"bool"},{name:"sinus_problems",type:"bool"},{name:"post_nasal_drip",type:"bool"},{name:"nosebleed",type:"bool"},{name:"snoring",type:"bool"},{name:"apnea",type:"bool"},{name:"breast_mass",type:"bool"},{name:"abnormal_mammogram",type:"bool"},{name:"biopsy",type:"bool"},{name:"cough",type:"bool"},{name:"sputum",type:"bool"},{name:"shortness_of_breath",type:"bool"},{name:"wheezing",type:"bool"},{name:"hemoptysis",type:"bool"},{name:"asthma",type:"bool"},{name:"copd",type:"bool"},{name:"thyroid_problems",type:"bool"},{name:"diabetes",type:"bool"},{name:"abnormal_blood_test",type:"bool"},{name:"chest_pain",type:"bool"},{name:"palpitation",type:"bool"},{name:"syncope",type:"bool"},{name:"pnd",type:"bool"},{name:"doe",type:"bool"},{name:"orthopnea",type:"bool"},{name:"peripheral",type:"bool"},{name:"edema",type:"bool"},{name:"leg_pain_cramping",type:"bool"},{name:"arrythmia",type:"bool"},{name:"heart_problem",type:"bool"},{name:"history_of_heart_murmur",type:"bool"},{name:"polyuria",type:"bool"},{name:"polydypsia",type:"bool"},{name:"dysuria",type:"bool"},{name:"hematuria",type:"bool"},{name:"frequency",type:"bool"},{name:"urgency",type:"bool"},{name:"utis",type:"bool"},{name:"incontinence",type:"bool"},{name:"renal_stones",type:"bool"},{name:"hesitancy",type:"bool"},{name:"dribbling",type:"bool"},{name:"stream",type:"bool"},{name:"nocturia",type:"bool"},{name:"erections",type:"bool"},{name:"ejaculations",type:"bool"},{name:"cancer",type:"bool"},{name:"psoriasis",type:"bool"},{name:"acne",type:"bool"},{name:"disease",type:"bool"},{name:"other",type:"bool"},{name:"anemia",type:"bool"},{name:"hiv",type:"bool"},{name:"f_h_blood_problems",type:"bool"},{name:"hai_status",type:"bool"},{name:"allergies",type:"bool"},{name:"bleeding_problems",type:"bool"},{name:"frequent_illness",type:"bool"},{name:"dysphagia",type:"bool"},{name:"heartburn",type:"bool"},{name:"food_intolerance",type:"bool"},{name:"belching",type:"bool"},{name:"bloating",type:"bool"},{name:"flatulence",type:"bool"},{name:"nausea",type:"bool"},{name:"vomiting",type:"bool"},{name:"jaundice",type:"bool"},{name:"h_o_hepatitis",type:"bool"},{name:"hematemesis",type:"bool"},{name:"diarrhea",type:"bool"},{name:"hematochezia",type:"bool"},{name:"changed_bowel",type:"bool"},{name:"constipation",type:"bool"},{name:"female_g",type:"bool"},{name:"female_p",type:"bool"},{name:"female_ap",type:"bool"},{name:"lmp",type:"bool"},{name:"female_lc",type:"bool"},{name:"menopause",type:"bool"},{name:"flow",type:"bool"},{name:"abnormal_hair_growth",type:"bool"},{name:"menarche",type:"bool"},{name:"symptoms",type:"bool"},{name:"f_h_female_hirsutism_striae",type:"bool"},{name:"anxiety",type:"bool"},{name:"depression",type:"bool"},{name:"psychiatric_medication",type:"bool"},{name:"social_difficulties",type:"bool"},{name:"psychiatric_diagnosis",type:"bool"},{name:"fms",type:"bool"},{name:"swelling",type:"bool"},{name:"Warm",type:"bool"},{name:"muscle",type:"bool"},{name:"stiffness",type:"bool"},{name:"aches",type:"bool"},{name:"arthritis",type:"bool"},{name:"chronic_joint_pain",type:"bool"},{name:"loc",type:"bool"},{name:"stroke",type:"bool"},{name:"paralysis",type:"bool"},{name:"tia",type:"bool"},{name:"numbness",type:"bool"},{name:"memory_problems",type:"bool"},{name:"seizures",type:"bool"},{name:"intellectual_decline",type:"bool"},{name:"dementia",type:"bool"},{name:"headache",type:"bool"},{name:"cons_weakness",type:"bool"},{name:"brest_discharge",type:"bool"},{name:"fem_frequency",type:"bool"},{name:"notes",type:"string",dataType:"mediumtext"}],proxy:{type:"direct",api:{update:"Encounter.updateReviewOfSystems"}},belongsTo:{model:"App.model.patient.Encounter",foreignKey:"eid"}}),Ext.define("App.model.patient.HCFAOptions",{extend:"Ext.data.Model",table:{name:"encounter_1500_options"},fields:[{name:"id",type:"int"},{name:"pid",type:"int"},{name:"eid",type:"int"},{name:"uid",type:"int"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"employment_related",type:"bool"},{name:"auto_accident",type:"bool"},{name:"state",type:"string",len:80},{name:"other_accident",type:"bool"},{name:"similar_illness_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"unable_to_work_from",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"unable_to_work_to",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"hops_date_to",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"out_lab_used",type:"bool"},{name:"amount_charges",type:"string",len:10},{name:"medicaid_resubmission_code",type:"string",len:15},{name:"medicaid_original_reference_number",type:"string",len:60},{name:"prior_authorization_number",type:"string",len:60},{name:"replacement_claim",type:"bool"},{name:"notes",type:"string",dataType:"text"}],proxy:{type:"direct",api:{update:"Encounter.updateHCFA"}},belongsTo:{model:"App.model.patient.Encounter",foreignKey:"eid"}}),Ext.define("App.model.patient.EncounterService",{extend:"Ext.data.Model",table:{name:"encounter_services"},fields:[{name:"id",type:"int"},{name:"pid",type:"int",index:!0},{name:"eid",type:"int",index:!0},{name:"reference_type",type:"string",len:40,index:!0},{name:"reference_id",type:"int",index:!0},{name:"billing_reference",type:"string",len:20,index:!0},{name:"code",type:"string",len:40,index:!0},{name:"code_type",type:"string",len:40},{name:"code_text",type:"string",dataType:"text"},{name:"units",type:"int",len:5},{name:"tooth",type:"string",len:10},{name:"surface",type:"string",len:5},{name:"cavity_quadrant",type:"string",len:2},{name:"modifiers",type:"array"},{name:"dx_group_id",type:"int"},{name:"dx_pointers",type:"array"},{name:"status",type:"string",len:20},{name:"financial_class",type:"string",len:4},{name:"financial_name",type:"string",len:4,store:!1},{name:"create_uid",type:"int"},{name:"update_uid",type:"int"},{name:"date_create",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"date_update",type:"date",dateFormat:"Y-m-d H:i:s"}],proxy:{type:"direct",api:{read:"Services.getEncounterServices",create:"Services.addEncounterService",update:"Services.updateEncounterService",destroy:"Services.removeEncounterService"},writer:{writeAllFields:!0}}}),Ext.define("App.model.patient.encounter.snippetTree",{extend:"Ext.data.Model",table:{name:"soap_snippets"},fields:[{name:"id",type:"string"},{name:"parentId",type:"string",len:20,index:!0},{name:"specialty_id",type:"string",len:11,index:!0},{name:"index",type:"int"},{name:"title",type:"string",len:80},{name:"text",type:"string",dataType:"text"},{name:"category",type:"string",len:50,index:!0},{name:"leaf",type:"bool"}],proxy:{type:"direct",api:{read:"Snippets.getSoapSnippets",create:"Snippets.addSoapSnippets",update:"Snippets.updateSoapSnippets",destroy:"Snippets.deleteSoapSnippets"}}}),Ext.define("App.model.patient.encounter.Procedures",{extend:"Ext.data.Model",table:{name:"encounter_procedures",comment:"Patient Encounter Procedures"},fields:[{name:"id",type:"int"},{name:"pid",type:"int"},{name:"eid",type:"int"},{name:"uid",type:"int"},{name:"procedure_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"code",type:"string",len:40},{name:"code_text",type:"string",len:300},{name:"code_type",type:"string",len:15},{name:"status_code",type:"string",len:40},{name:"status_code_text",type:"string",len:300},{name:"status_code_type",type:"string",len:15},{name:"encounter_dx_id",type:"int"},{name:"observation",type:"string"},{name:"create_uid",type:"int"},{name:"update_uid",type:"int"},{name:"create_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"update_date",type:"date",dateFormat:"Y-m-d H:i:s"}],proxy:{type:"direct",api:{read:"Procedures.loadProcedures",create:"Procedures.saveProcedure",update:"Procedures.saveProcedure",destroy:"Procedures.destroyProcedure"}}}),Ext.define("App.model.patient.AppointmentRequest",{extend:"Ext.data.Model",table:{name:"patient_appointment_requests"},fields:[{name:"id",type:"int"},{name:"pid",type:"int"},{name:"eid",type:"int"},{name:"appointment_id",type:"int"},{name:"requested_uid",type:"int"},{name:"approved_uid",type:"int"},{name:"is_approved",type:"bool",persist:!1,convert:function(a,b){return b.data.approved_uid>1}},{name:"requested_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"approved_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"notes",type:"string"},{name:"procedure1",type:"string",store:!1},{name:"procedure1_code",type:"string",len:10},{name:"procedure1_code_type",type:"string",len:10},{name:"procedure2",type:"string",store:!1},{name:"procedure2_code",type:"string",len:10},{name:"procedure2_code_type",type:"string",len:10},{name:"procedure3",type:"string",store:!1},{name:"procedure3_code",type:"string",len:10},{name:"procedure3_code_type",type:"string",len:10},{name:"create_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"update_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"create_uid",type:"int"},{name:"update_uid",type:"int"}],proxy:{type:"direct",api:{read:"AppointmentRequest.getAppointmentRequests",create:"AppointmentRequest.addAppointmentRequest",update:"AppointmentRequest.updateAppointmentRequest",destroy:"AppointmentRequest.deleteAppointmentRequest"}}}),Ext.define("App.model.patient.AdvanceDirective",{extend:"Ext.data.Model",table:{name:"patient_advance_directives"},fields:[{name:"id",type:"int"},{name:"eid",type:"int",index:!0},{name:"pid",type:"int",index:!0},{name:"code",type:"string",len:80},{name:"code_text",type:"string",len:160},{name:"code_type",type:"string",len:20},{name:"status_code",type:"string",len:80},{name:"status_code_text",type:"string",len:160},{name:"status_code_type",type:"string",len:20},{name:"notes",len:300,type:"string"},{name:"start_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"end_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"verified_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"verified_uid",type:"int"},{name:"created_uid",type:"int"},{name:"updated_uid",type:"int"},{name:"create_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"update_date",type:"date",dateFormat:"Y-m-d H:i:s",defaultValue:"CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"}],proxy:{type:"direct",api:{read:"AdvanceDirective.getPatientAdvanceDirectives",create:"AdvanceDirective.addPatientAdvanceDirective",update:"AdvanceDirective.updatePatientAdvanceDirective"}}}),Ext.define("App.model.patient.Allergies",{extend:"Ext.data.Model",table:{name:"patient_allergies",comment:"Patient Allergies"},fields:[{name:"id",type:"int"},{name:"eid",type:"int",index:!0},{name:"pid",type:"int",index:!0},{name:"allergy_type",type:"string",len:80},{name:"allergy_type_code",type:"string",len:20},{name:"allergy_type_code_type",type:"string",len:20},{name:"allergy",len:80,type:"string"},{name:"allergy_code",type:"string",len:20,comment:"RxNORM RXCUI code if food allergy"},{name:"allergy_code_type",len:20,type:"string"},{name:"location",len:80,type:"string"},{name:"reaction",len:80,type:"string"},{name:"reaction_code",len:20,type:"string"},{name:"reaction_code_type",len:20,type:"string"},{name:"severity",len:80,type:"string"},{name:"severity_code",len:20,type:"string"},{name:"severity_code_type",len:20,type:"string"},{name:"status",len:15,type:"string"},{name:"status_code",len:20,type:"string"},{name:"status_code_type",len:20,type:"string"},{name:"begin_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"end_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"active",type:"bool",store:!1,convert:function(a,b){return""==b.data.end_date||null==b.data.end_date
}},{name:"created_uid",type:"int"},{name:"updated_uid",type:"int"},{name:"create_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"update_date",type:"date",dateFormat:"Y-m-d H:i:s",defaultValue:"CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP"}],proxy:{type:"direct",api:{read:"Allergies.getPatientAllergies",create:"Allergies.addPatientAllergy",update:"Allergies.updatePatientAllergy"}}}),Ext.define("App.model.patient.CheckoutAlertArea",{extend:"Ext.data.Model",table:{name:"checkoutalertarea",comment:"Checkout Alert Area"},fields:[{name:"id",type:"int",comment:"Checkout Alert ID"},{name:"alert",type:"string"},{name:"alertType",type:"int"}],proxy:{type:"direct",api:{read:"Encounter.checkoutAlerts"}}}),Ext.define("App.model.patient.CptCodes",{extend:"Ext.data.Model",fields:[{name:"id",type:"int",comment:"CPY Code ID"},{name:"eid",type:"int"},{name:"code",type:"string"},{name:"code_text",type:"string"},{name:"code_text_medium",type:"string"},{name:"place_of_service",type:"string"},{name:"emergency",type:"bool"},{name:"charge",type:"string"},{name:"days_of_units",type:"string"},{name:"essdt_plan",type:"string"},{name:"modifiers",type:"string"},{name:"status",type:"int",defaultValue:0}],proxy:{type:"direct",api:{read:"Services.getCptCodes",create:"Services.addCptCode",update:"Services.updateCptCode",destroy:"Services.deleteCptCode"},reader:{root:"rows",totalProperty:"totals"}}}),Ext.define("App.model.patient.Dental",{extend:"Ext.data.Model",fields:[{name:"id",type:"int",comment:"Dental Data ID"},{name:"eid",type:"int"},{name:"pid",type:"int"},{name:"created_uid",type:"int"},{name:"updated_uid",type:"int"},{name:"create_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"cdt_code",type:"string"},{name:"description",type:"string"},{name:"begin_date",type:"date",dateFormat:"Y-m-d"},{name:"end_date",type:"date",dateFormat:"Y-m-d"},{name:"ocurrence",type:"string"},{name:"referred_by",type:"string"},{name:"outcome",type:"string"},{name:"destination",type:"string"},{name:"alert",type:"bool"}],proxy:{type:"direct",api:{read:"Medical.getPatientDental",create:"Medical.addPatientDental",update:"Medical.updatePatientDental"}}}),Ext.define("App.model.patient.Disclosures",{extend:"Ext.data.Model",table:{name:"patient_disclosures",comment:"Disclosures"},fields:[{name:"id",type:"int"},{name:"pid",type:"int",index:!0},{name:"eid",type:"int",index:!0},{name:"uid",type:"int"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"type",type:"string",len:25},{name:"recipient",type:"string",len:25},{name:"description",type:"string",dataType:"text"},{name:"active",type:"bool"}],proxy:{type:"direct",api:{read:"Disclosure.getDisclosures",create:"Disclosure.addDisclosure",update:"Disclosure.updateDisclosure"}}}),Ext.define("App.model.patient.DismissedAlerts",{extend:"Ext.data.Model",fields:[{name:"id",type:"int",comment:"Dismissed Alerts ID"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"preventive_care_id",type:"int"},{name:"reason",type:"string"},{name:"observation",type:"string"},{name:"dismiss",type:"bool"},{name:"description",type:"string"}],proxy:{type:"direct",api:{read:"PreventiveCare.getPreventiveCareDismissedAlertsByPid",update:"PreventiveCare.updatePreventiveCareDismissedAlertsByPid"}}}),Ext.define("App.model.patient.DoctorsNote",{extend:"Ext.data.Model",table:{name:"patient_doctors_notes"},fields:[{name:"id",type:"int"},{name:"pid",type:"int",index:!0},{name:"eid",type:"int",index:!0},{name:"uid",type:"int"},{name:"template_id",type:"int"},{name:"create_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"order_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"from_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"to_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"restrictions",type:"array"},{name:"string_restrictions",type:"string",store:!1,convert:function(a,b){return b.data.restrictions.join?b.data.restrictions.join(", "):b.data.restrictions}},{name:"group_date",type:"date",dateFormat:"Y-m-d",store:!1,convert:function(a,b){return Ext.Date.format(b.data.date,"Y-m-d")}},{name:"comments",type:"string",dataType:"text"}],proxy:{type:"direct",api:{read:"DoctorsNotes.getDoctorsNotes",create:"DoctorsNotes.addDoctorsNote",update:"DoctorsNotes.updateDoctorsNote",destroy:"DoctorsNotes.destroyDoctorsNote"}}}),Ext.define("App.model.patient.EventHistory",{extend:"Ext.data.Model",table:{name:"encounter_history"},fields:[{name:"id",type:"int",comment:"Event History ID"},{name:"eid",type:"int"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"user",type:"string",len:80},{name:"event",type:"string",len:600}]}),Ext.define("App.model.patient.Encounter",{extend:"Ext.data.Model",table:{name:"encounters",comment:"Encounter Data"},fields:[{name:"eid",type:"int"},{name:"pid",type:"int",index:!0},{name:"rid",type:"string",len:80,comment:"reference ID"},{name:"open_uid",type:"int",index:!0},{name:"provider_uid",type:"int",index:!0},{name:"supervisor_uid",type:"int",index:!0},{name:"requires_supervisor",type:"bool",index:!0,defaultValue:!1},{name:"technician_uid",type:"int",useNull:!0,index:!0},{name:"specialty_id",type:"int",useNull:!0,index:!0},{name:"service_date",type:"date",dateFormat:"Y-m-d H:i:s",index:!0},{name:"close_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"onset_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"priority",type:"string",len:60},{name:"brief_description",type:"string",len:600,comment:"chief complaint"},{name:"visit_category",type:"string",len:80},{name:"facility",type:"int",len:1,index:!0},{name:"billing_stage",type:"int",len:1,index:!0},{name:"followup_time",type:"string",len:25},{name:"followup_facility",type:"string",len:80},{name:"review_immunizations",type:"bool"},{name:"review_allergies",type:"bool"},{name:"review_active_problems",type:"bool"},{name:"review_alcohol",type:"string",len:40},{name:"review_smoke",type:"bool"},{name:"review_pregnant",type:"string",len:40},{name:"review_surgery",type:"bool"},{name:"review_dental",type:"bool"},{name:"review_medications",type:"bool"},{name:"message",type:"string",dataType:"text"},{name:"patient_class",type:"string"},{name:"referring_physician",type:"string"}],idProperty:"eid",proxy:{type:"direct",api:{read:"Encounter.getEncounters",create:"Encounter.createEncounter",update:"Encounter.updateEncounter"},reader:{root:"encounter"}},hasMany:[{model:"App.model.patient.Vitals",name:"vitals",primaryKey:"eid",foreignKey:"eid"},{model:"App.model.patient.ReviewOfSystems",name:"reviewofsystems",primaryKey:"eid",foreignKey:"eid"},{model:"App.model.patient.FamilyHistory",name:"familyhistory",primaryKey:"eid",foreignKey:"eid"},{model:"App.model.patient.SOAP",name:"soap",primaryKey:"eid",foreignKey:"eid"},{model:"App.model.patient.HCFAOptions",name:"hcfaoptions",primaryKey:"eid",foreignKey:"eid"},{model:"App.model.patient.EncounterService",name:"services",primaryKey:"eid",foreignKey:"eid"},{model:"App.model.patient.AppointmentRequest",name:"appointmentrequests",primaryKey:"eid",foreignKey:"eid"}],isClose:function(){return"undefined"!=typeof this.data.close_date&&null!=this.data.close_date},isSigned:function(){return"undefined"!=typeof this.data.provider_uid&&null!=this.data.provider_uid&&0!=this.data.provider_uid},isCoSigned:function(){return"undefined"!=typeof this.data.supervisor_uid&&null!=this.data.supervisor_uid&&0!=this.data.supervisor_uid}}),Ext.define("App.model.patient.CVXCodes",{extend:"Ext.data.Model",table:{name:"cvx_codes",comment:"Immunizations  CVX"},fields:[{name:"id",type:"int",comment:"Immunization ID"},{name:"cvx_code",type:"int",len:10},{name:"name",type:"string"},{name:"description",type:"string",dataType:"text"},{name:"note",type:"string",dataType:"text"},{name:"status",type:"string",len:25},{name:"update_date",type:"date",dateFormat:"Y-m-d H:i:s"}],proxy:{type:"direct",api:{read:"Immunizations.getImmunizationsList"}}}),Ext.define("App.model.patient.ImmunizationCheck",{extend:"Ext.data.Model",fields:[{name:"id",type:"int",comment:"Immunization Check ID"},{name:"pid",type:"int"},{name:"code",type:"int"},{name:"vaccine_name",type:"string"},{name:"alert",type:"bool"}],proxy:{type:"direct",api:{read:"Immunizations.getPatientImmunizations"}}}),Ext.define("App.model.patient.LaboratoryTypes",{extend:"Ext.data.Model",fields:[{name:"id",type:"int",comment:"Laboratory Types ID"},{name:"label",type:"string"},{name:"fields"}],proxy:{type:"direct",api:{read:"Laboratories.getActiveLaboratoryTypes"}}}),Ext.define("App.model.patient.MeaningfulUseAlert",{extend:"Ext.data.Model",table:{name:"meaningfulusealert",comment:"Meaningful Use Alert"},fields:[{name:"id",type:"int",comment:"Meaningful Use Alert ID"},{name:"name",type:"string"},{name:"val",type:"bool"}],proxy:{type:"direct",api:{read:"Patient.getMeaningfulUserAlertByPid"}}}),Ext.define("App.model.patient.Insurance",{extend:"Ext.data.Model",table:{name:"patient_insurances",comment:"Patient Insurances"},fields:[{name:"id",type:"int"},{name:"code",type:"string",len:40,index:!0},{name:"pid",type:"int",index:!0},{name:"insurance_id",type:"int",index:!0},{name:"insurance_type",type:"string",comment:"P = primary S = supplemental C =complementary D = Disable",len:1,index:!0},{name:"effective_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"expiration_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"group_number",type:"string",comment:"group number",len:40},{name:"cover_medical",type:"string",len:10,index:!0},{name:"cover_dental",type:"string",len:10,index:!0},{name:"subscriber_title",type:"string",len:10},{name:"subscriber_given_name",type:"string",len:80},{name:"subscriber_middle_name",type:"string",len:80},{name:"subscriber_surname",type:"string",len:80},{name:"subscriber_relationship",type:"string",len:40},{name:"subscriber_dob",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"subscriber_ss",type:"string",len:10},{name:"subscriber_street",type:"string",len:80},{name:"subscriber_city",type:"string",len:80},{name:"subscriber_state",type:"string",len:80},{name:"subscriber_country",type:"string",len:80},{name:"subscriber_postal_code",type:"string",len:20},{name:"subscriber_phone",type:"string",len:20},{name:"subscriber_employer",type:"string",len:80},{name:"display_order",type:"int",len:3},{name:"notes",type:"string"},{name:"image",type:"string",dataType:"mediumtext",comment:"insurance image base64 string"},{name:"create_uid",type:"int"},{name:"update_uid",type:"int"},{name:"create_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"update_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"subscriber_sex",type:"string",len:1},{name:"policy_number",type:"string",len:40}],proxy:{type:"direct",api:{read:"Insurance.getInsurances",create:"Insurance.addInsurance",update:"Insurance.updateInsurance"}},associations:[{type:"belongsTo",model:"App.model.patient.Patient",associationKey:"pid",foreignKey:"pid"}]}),Ext.define("App.model.patient.Medications",{extend:"Ext.data.Model",table:{name:"patient_medications",comment:"Patient Medications"},fields:[{name:"id",type:"int"},{name:"pid",type:"int",index:!0},{name:"eid",type:"int",index:!0},{name:"uid",type:"int"},{name:"ref_order",type:"string",len:100,comment:"reference order number"},{name:"STR",type:"string",len:180},{name:"CODE",type:"string",len:40},{name:"RXCUI",type:"string",len:40},{name:"NDC",type:"string",len:40},{name:"dxs",type:"array"},{name:"dose",type:"string",len:180},{name:"form",type:"string",len:80},{name:"route",type:"string",len:80},{name:"directions",type:"string"},{name:"dispense",type:"string",len:80},{name:"refill",type:"string",len:80},{name:"potency_code",type:"string",len:10},{name:"days_supply",type:"int",useNull:!0},{name:"daw",type:"bool",useNull:!0,comment:"Dispensed As Written"},{name:"notes",type:"string",len:210},{name:"system_notes",type:"string",len:210},{name:"is_compound",type:"bool"},{name:"is_supply",type:"bool"},{name:"prescription_id",type:"int"},{name:"referred_by",type:"string",len:180},{name:"administered_uid",type:"int"},{name:"administered_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"administered_by",type:"string",store:!1,convert:function(a,b){return b.data.title+" "+b.data.fname+" "+b.data.mname+" "+b.data.lname}},{name:"title",type:"string",store:!1},{name:"fname",type:"string",store:!1},{name:"mname",type:"string",store:!1},{name:"lname",type:"string",store:!1},{name:"date_ordered",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"begin_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"end_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"active",type:"bool",store:!1,convert:function(a,b){return null===b.data.end_date}},{name:"created_date",type:"date",dateFormat:"Y-m-d H:i:s"}],proxy:{type:"direct",api:{read:"Medications.getPatientMedications",create:"Medications.addPatientMedication",update:"Medications.updatePatientMedication",destroy:"Medications.destroyPatientMedication"},writer:{writeAllFields:!0},remoteGroup:!1}}),Ext.define("App.model.patient.Notes",{extend:"Ext.data.Model",table:{name:"patient_notes"},fields:[{name:"id",type:"int"},{name:"eid",type:"int",index:!0},{name:"pid",type:"int",index:!0},{name:"uid",type:"int",index:!0},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s",index:!0},{name:"body",type:"string",len:600},{name:"type",type:"string",len:80,index:!0},{name:"user_name",type:"string",store:!1}],proxy:{type:"direct",api:{read:"Notes.getNotes",create:"Notes.addNote",update:"Notes.updateNote"}}}),Ext.define("App.model.patient.PatientActiveProblem",{extend:"Ext.data.Model",table:{name:"patient_active_problems",comment:"Active Problems"},fields:[{name:"id",type:"int"},{name:"pid",type:"int",index:!0},{name:"eid",type:"int",index:!0},{name:"code",type:"string",len:80},{name:"code_text",type:"string",len:300},{name:"code_type",type:"string",len:20},{name:"begin_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"end_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"occurrence",type:"string"},{name:"referred_by",type:"string"},{name:"status",type:"string",len:40},{name:"status_code",type:"string",len:20},{name:"status_code_type",type:"string",len:20},{name:"note",type:"string",len:300},{name:"active",type:"bool",store:!1,convert:function(a,b){return""==b.data.end_date||null==b.data.end_date}},{name:"created_uid",type:"int"},{name:"updated_uid",type:"int"},{name:"create_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"update_date",type:"date",dateFormat:"Y-m-d H:i:s"}],proxy:{type:"direct",api:{read:"ActiveProblems.getPatientActiveProblems",create:"ActiveProblems.addPatientActiveProblem",update:"ActiveProblems.updatePatientActiveProblem",destroy:"ActiveProblems.destroyPatientActiveProblem"}}}),Ext.define("App.model.patient.PatientArrivalLog",{extend:"Ext.data.Model",fields:[{name:"id",type:"int",comment:"Patient Arrival Log ID"},{name:"area_id",type:"int"},{name:"pid",type:"int"},{name:"time",type:"string"},{name:"name",type:"string"},{name:"status",type:"string"},{name:"area",type:"string"},{name:"warning",type:"bool"},{name:"warningMsg",type:"string"},{name:"isNew",type:"bool"}],proxy:{type:"direct",api:{read:"PoolArea.getPatientsArrivalLog",create:"PoolArea.addPatientArrivalLog",update:"PoolArea.updatePatientArrivalLog",destroy:"PoolArea.removePatientArrivalLog"},writer:{writeAllFields:!0}}}),Ext.define("App.model.patient.PatientCalendarEvents",{extend:"Ext.data.Model",table:{name:"patientcalendarevents",comment:"Patient Calendar Events"},fields:[{name:"id",type:"int",comment:"Patient Calendar Event ID"},{name:"user_id",type:"int"},{name:"category",type:"int"},{name:"facility",type:"int"},{name:"billing_facillity",type:"int"},{name:"patient_id",type:"int"},{name:"title",type:"string"},{name:"status",type:"string"},{name:"start",type:"date",dateFormat:"Y-m-d H:s:i"},{name:"end",type:"date",dateFormat:"Y-m-d H:s:i"},{name:"data",type:"string"},{name:"rrule",type:"string"},{name:"loc",type:"string"},{name:"notes",type:"string"},{name:"url",type:"string"},{name:"ad",type:"string"}],proxy:{type:"direct",api:{read:"Calendar.getPatientFutureEvents"}}}),Ext.define("App.model.patient.PatientDocuments",{extend:"Ext.data.Model",table:{name:"patient_documents",comment:"Patient Documents Storage"},fields:[{name:"id",type:"int"},{name:"code",type:"string",len:120,comment:"external reference id",index:!0},{name:"pid",type:"int",index:!0},{name:"eid",type:"int",index:!0},{name:"uid",type:"int",index:!0},{name:"docType",type:"string",index:!0},{name:"docTypeCode",type:"string",len:20,index:!0},{name:"name",type:"string"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s",index:!0},{name:"url",type:"string"},{name:"note",type:"string",dataType:"MEDIUMTEXT"},{name:"title",type:"string"},{name:"hash",type:"string"},{name:"encrypted",type:"bool",defaultValue:0},{name:"entered_in_error",type:"bool",defaultValue:0},{name:"error_note",type:"string",len:300},{name:"groupDate",type:"date",store:!1,convert:function(a,b){var c=Ext.clone(b.get("date"));return c?(c.setHours(0),c.setMinutes(0),c.setSeconds(0),c.setMilliseconds(0),c):null}},{name:"document_instance",type:"string",len:10},{name:"document_id",type:"int"},{name:"document",type:"string",dataType:"longblob"},{name:"site",type:"string",store:!1,useNull:!0}],proxy:{type:"direct",api:{read:"DocumentHandler.getPatientDocuments",create:"DocumentHandler.addPatientDocument",update:"DocumentHandler.updatePatientDocument"},reader:{root:"data"},remoteGroup:!1}}),Ext.define("App.model.patient.PatientImmunization",{extend:"Ext.data.Model",table:{name:"patient_immunizations",comment:"Patient Immunization"},fields:[{name:"id",type:"int",comment:"Patient Immunization ID"},{name:"pid",type:"int",index:!0},{name:"eid",type:"int",index:!0},{name:"uid",type:"int"},{name:"code",type:"string",len:10,comment:"vaccine code (CVX)"},{name:"code_type",type:"string",defaultValue:"CVX",len:15},{name:"vaccine_name",type:"string",len:300},{name:"lot_number",type:"string",len:60},{name:"administer_amount",type:"string",len:40},{name:"administer_units",type:"string",len:40},{name:"administered_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"exp_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"administered_uid",type:"int"},{name:"administered_by",type:"string",store:!1,convert:function(a,b){return b.data.administered_title+" "+b.data.administered_fname+" "+(b.data.administered_mname||"")+" "+b.data.administered_lname}},{name:"administered_title",type:"string",store:!1},{name:"administered_fname",type:"string",store:!1},{name:"administered_mname",type:"string",store:!1},{name:"administered_lname",type:"string",store:!1},{name:"route",type:"string",len:40},{name:"administration_site",type:"string",len:40},{name:"manufacturer",type:"string",len:180},{name:"education_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"education_doc_published",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"note",type:"string",len:300},{name:"create_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"created_uid",type:"int"},{name:"updated_uid",type:"int"},{name:"is_error",type:"bool"}],proxy:{type:"direct",api:{read:"Immunizations.getPatientImmunizations",create:"Immunizations.addPatientImmunization",update:"Immunizations.updatePatientImmunization"}}}),Ext.define("App.model.patient.PatientLabsResults",{extend:"Ext.data.Model",table:{name:"patientlabsresults",comment:"Patient Labs Results"},fields:[{name:"id",type:"int",comment:"Patient Labs Results ID"},{name:"pid",type:"int"},{name:"uid",type:"int"},{name:"auth_uid",type:"int"},{name:"eid",type:"int"},{name:"document_id",type:"int"},{name:"document_url"},{name:"date",type:"date",dateFormat:"Y-m-d H:s:i"},{name:"data"},{name:"columns"},{name:"parent_id"}],proxy:{type:"direct",api:{read:"Medical.getPatientLabsResults",create:"Medical.addPatientLabsResult",update:"Medical.updatePatientLabsResult",destroy:"Medical.deletePatientLabsResult"}}}),Ext.define("App.model.patient.PatientsLabOrderItems",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"loinc",type:"string"},{name:"title",type:"string"}]}),Ext.define("App.model.patient.PatientSocialHistory",{extend:"Ext.data.Model",table:{name:"patient_social_history",comment:"Patient Social History"},fields:[{name:"id",type:"int"},{name:"eid",type:"int",index:!0,comment:"encounter id"},{name:"pid",type:"int",index:!0,comment:"patient ID"},{name:"category_code",type:"string",len:25},{name:"category_code_type",type:"string",defaultValue:"SNOMEDCT",len:20},{name:"category_code_text",len:120,type:"string"},{name:"observation",type:"string",len:400,comment:"clinical observation for this history"},{name:"observation_code",type:"string",len:20},{name:"observation_code_type",type:"string",len:20},{name:"note",type:"string",dataType:"text"},{name:"start_date",type:"date",dateFormat:"Y-m-d H:i:s",comment:"same as CCD low time"},{name:"end_date",type:"date",dateFormat:"Y-m-d H:i:s",comment:"same as CCD high time"},{name:"create_uid",type:"int",comment:"user ID who created the record"},{name:"update_uid",type:"int",comment:"user ID who updated the record"},{name:"create_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"update_date",type:"date",dateFormat:"Y-m-d H:i:s"}],proxy:{type:"direct",api:{read:"SocialHistory.getSocialHistories",create:"SocialHistory.addSocialHistory",update:"SocialHistory.updateSocialHistory",destroy:"SocialHistory.destroySocialHistory"},remoteGroup:!1}}),Ext.define("App.model.patient.PatientsOrderObservation",{extend:"Ext.data.Model",table:{name:"patient_order_results_observations",comment:"Order Result Observations OBX"},fields:[{name:"id",type:"int"},{name:"result_id",type:"int",index:!0,comment:"Order ID"},{name:"code",type:"string",comment:"OBX 3",index:!0},{name:"code_text",type:"string",comment:"OBX 3"},{name:"code_type",type:"string",comment:"OBX 3"},{name:"value",type:"string",comment:"OBX 5"},{name:"units",type:"string",comment:"OBX 6"},{name:"reference_rage",type:"string",comment:"OBX 7"},{name:"probability",type:"string",comment:"OBX 9"},{name:"abnormal_flag",type:"string",comment:"OBX 8"},{name:"nature_of_abnormal",type:"string",comment:"OBX 10"},{name:"observation_result_status",type:"string",comment:"OBX 11"},{name:"date_rage_values",type:"date",dateFormat:"Y-m-d H:i:s",comment:"OBX 12 Effective Date of Reference Range Values"},{name:"date_observation",type:"date",dateFormat:"Y-m-d H:i:s",comment:"OBX 14"},{name:"observer",type:"string",comment:"OBX 16"},{name:"performing_org_name",type:"string",comment:"OBX 23"},{name:"performing_org_address",type:"string",comment:"OBX 24"},{name:"observer",type:"string",comment:"OBX 16"},{name:"date_analysis",type:"date",dateFormat:"Y-m-d H:i:s",comment:"OBX 19"},{name:"notes",type:"string",comment:"OBX NTE segments"}],proxy:{type:"direct",api:{read:"Orders.getOrderResultObservations",create:"Orders.addOrderResultObservations",update:"Orders.updateOrderResultObservations",destroy:"Orders.deleteOrderResultObservations"},remoteGroup:!1},associations:[{type:"belongsTo",model:"App.model.patient.PatientsOrderResult",name:"result",primaryKey:"id",foreignKey:"result_id"}]}),Ext.define("App.model.patient.PatientsOrderResult",{extend:"Ext.data.Model",requires:["App.model.patient.PatientsOrderObservation"],table:{name:"patient_order_results",comment:"Patients Results OBR"},fields:[{name:"id",type:"int"},{name:"pid",type:"int",index:!0},{name:"ordered_uid",type:"int",index:!0},{name:"signed_uid",type:"int",index:!0},{name:"order_id",type:"int",index:!0,comment:"OBR-2"},{name:"code",type:"string",len:40},{name:"code_text",type:"string",len:150},{name:"code_type",type:"string",len:20},{name:"lab_order_id",type:"string",len:50,index:!0,comment:"OBR-3"},{name:"lab_name",type:"string",len:150},{name:"lab_address",type:"string",len:200},{name:"create_date",type:"date",dateFormat:"Y-m-d H:i:s",index:!0},{name:"result_date",type:"date",dataType:"date",dateFormat:"Y-m-d",index:!0},{name:"observation_date",type:"date",dataType:"date",dateFormat:"Y-m-d",index:!0},{name:"result_status",type:"string",len:40},{name:"reason_code",type:"string",len:40},{name:"specimen_code",type:"string",len:40},{name:"specimen_text",type:"string",len:180},{name:"specimen_code_type",type:"string",len:40},{name:"specimen_notes",type:"string"},{name:"documentId",type:"string",comment:"this is the document or hl7 message id - example -> doc|123 or hl7|123",len:40},{name:"upload",type:"string",store:!1},{name:"void",type:"bool",defaultValue:!1,comment:"VOID the order"},{name:"void_comment",type:"string",comment:"VOID comments",len:100}],proxy:{type:"direct",api:{read:"Orders.getOrderResults",create:"Orders.addOrderResults",update:"Orders.updateOrderResults",destroy:"Orders.deleteOrderResults"},remoteGroup:!1},associations:[{type:"hasMany",model:"App.model.patient.PatientsOrderObservation",name:"observations",foreignKey:"result_id"},{type:"belongsTo",model:"App.model.patient.PatientsOrders",getterName:"getOrder",setterName:"setOrder",primaryKey:"id",foreignKey:"order_id"}]}),Ext.define("App.model.patient.PatientsOrders",{extend:"Ext.data.Model",requires:["App.model.patient.PatientsOrderResult"],table:{name:"patient_orders",comment:"Patients Orders"},fields:[{name:"id",type:"int"},{name:"eid",type:"int",index:!0,comment:"encounter id"},{name:"pid",type:"int",index:!0,comment:"patient ID"},{name:"uid",type:"int",comment:"user ID who created the order"},{name:"hl7_recipient_id",type:"int",comment:"laboratory id if electronic request"},{name:"code",type:"string",len:25,comment:"Order code"},{name:"code_type",type:"string",defaultValue:"LOINC",len:15,comment:"Order code type LOINC"},{name:"description",type:"string",comment:"Order Text Description"},{name:"date_ordered",type:"date",dateFormat:"Y-m-d H:i:s",comment:"when the order was generated",index:!0},{name:"date_collected",type:"date",dateFormat:"Y-m-d H:i:s",comment:"when the results were collected",index:!0},{name:"priority",type:"string",len:25,comment:"order priority",index:!0},{name:"status",type:"string",len:25,comment:"order status",index:!0},{name:"order_type",type:"string",comment:"Order is radiology or laboratory.",index:!0},{name:"type",type:"string",store:!1,convert:function(a,b){switch(b.data.order_type){case"lab":return _("laboratory");case"rad":return _("radiology")}}},{name:"note",type:"string"},{name:"void",type:"boolean",defaultValue:!1,comment:"VOID the Order"},{name:"void_comment",type:"string",comment:"VOID Comments",len:100}],proxy:{type:"direct",api:{read:"Orders.getPatientOrders",create:"Orders.addPatientOrder",update:"Orders.updatePatientOrder",destroy:"Orders.deletePatientOrder"},remoteGroup:!1},associations:[{type:"hasMany",model:"App.model.patient.PatientsOrderResult",name:"results",foreignKey:"order_id"}]}),Ext.define("App.model.patient.PatientsPrescriptionMedications",{extend:"Ext.data.Model",table:{name:"patient_medications",comment:"Patient Medications"},fields:[{name:"id",type:"int"},{name:"pid",type:"int",index:!0},{name:"eid",type:"int",index:!0},{name:"uid",type:"int"},{name:"prescription_id",type:"int"},{name:"STR",type:"string",len:180},{name:"CODE",type:"string",len:40},{name:"RXCUI",type:"string",len:40},{name:"NDC",type:"string",len:40},{name:"dxs",type:"string"},{name:"dose",type:"string",len:180},{name:"form",type:"string",len:80},{name:"route",type:"string",len:80},{name:"directions",type:"string"},{name:"dispense",type:"string",len:80},{name:"refill",type:"string",len:80},{name:"daw",type:"bool"},{name:"notes",type:"string",len:300},{name:"referred_by",type:"string",len:180},{name:"date_ordered",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"created_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"begin_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"end_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"active",type:"bool",store:!1,convert:function(a,b){return null==b.data.end_date}}]}),Ext.define("App.model.patient.PatientsPrescriptions",{extend:"Ext.data.Model",fields:[{name:"id",type:"int",comment:"Patient Prescription ID"},{name:"pid",type:"int"},{name:"eid",type:"int"},{name:"uid",type:"int"},{name:"created_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"note",type:"string"},{name:"document_id",type:"int"},{name:"docUrl",type:"string"},{name:"medications"}],proxy:{type:"direct",api:{read:"Prescriptions.getPrescriptions",create:"Prescriptions.addPrescription",update:"Prescriptions.updatePrescription"}}}),Ext.define("App.model.patient.PatientsXrayCtOrders",{extend:"Ext.data.Model",fields:[{name:"id",type:"int",comment:"Patients XrayCt Orders ID"},{name:"eid",type:"int"},{name:"pid",type:"int"},{name:"uid",type:"int"},{name:"description",type:"string"},{name:"date_created",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"laboratory_id",type:"int"},{name:"document_id",type:"int"},{name:"order_type",type:"string",defaultValue:"rad"},{name:"order_items",type:"string"},{name:"note",type:"string"},{name:"docUrl",type:"string"}],proxy:{type:"direct",api:{read:"Orders.getPatientXrayCtOrders",create:"Orders.addPatientXrayCtOrder",update:"Orders.updatePatientXrayCtOrder"}}}),Ext.define("App.model.patient.PreventiveCare",{extend:"Ext.data.Model",fields:[{name:"id",type:"int",comment:"Preventive Care ID"},{name:"pid",type:"int"},{name:"eid",type:"int"},{name:"uid",type:"int"},{name:"description"},{name:"date",dateFormat:"Y-m-d"},{name:"observation"},{name:"type"},{name:"dismiss"},{name:"reason"},{name:"alert",type:"bool"}],proxy:{type:"direct",api:{update:"PreventiveCare.addPreventivePatientDismiss",read:"PreventiveCare.getPreventiveCareCheck"}}}),Ext.define("App.model.patient.QRCptCodes",{extend:"Ext.data.Model",fields:[{name:"id",type:"int",comment:"QR CPT Code ID"},{name:"eid",type:"int"},{name:"code",type:"string"},{name:"code_text",type:"string"},{name:"code_text_medium",type:"string"},{name:"place_of_service",type:"string"},{name:"emergency",type:"bool"},{name:"charge",type:"string"},{name:"days_of_units",type:"string"},{name:"essdt_plan",type:"string"},{name:"modifiers",type:"string"},{name:"status",type:"int",defaultValue:0}],proxy:{type:"direct",api:{read:"Services.getCptCodes"},reader:{root:"rows",totalProperty:"totals"}}}),Ext.define("App.model.patient.Referral",{extend:"Ext.data.Model",table:{name:"patient_referrals",comment:"Patients Referrals"},fields:[{name:"id",type:"int"},{name:"eid",type:"int",index:!0,comment:"encounter id"},{name:"pid",type:"int",index:!0,comment:"patient ID"},{name:"create_uid",type:"int",comment:"user ID who created the referral"},{name:"update_uid",type:"int",comment:"user ID who updated the referral"},{name:"create_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"update_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"referral_date",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"service_text",type:"string",len:300},{name:"service_code",type:"string",len:10},{name:"service_code_type",type:"string",comment:"CPT SNOMED",len:10},{name:"referal_reason",type:"string",len:1e3},{name:"diagnosis_text",type:"string",len:300},{name:"diagnosis_code",type:"string",len:10},{name:"diagnosis_code_type",type:"string",len:10},{name:"is_external_referral",type:"bool"},{name:"refer_by",type:"string",len:80},{name:"refer_by_text",type:"string",len:120},{name:"refer_to",type:"string",len:80},{name:"refer_to_text",type:"string",len:120},{name:"risk_level",type:"string",len:20},{name:"send_record",type:"bool"}],proxy:{type:"direct",api:{read:"Referrals.getPatientReferrals",create:"Referrals.addPatientReferral",update:"Referrals.updatePatientReferral",destroy:"Referrals.deletePatientReferral"},remoteGroup:!1}}),Ext.define("App.model.patient.Reminders",{extend:"Ext.data.Model",table:{name:"patient_reminders"},fields:[{name:"id",type:"int"},{name:"eid",type:"int",index:!0},{name:"pid",type:"int",index:!0},{name:"uid",type:"int",index:!0},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s",index:!0},{name:"body",type:"string",len:600},{name:"type",type:"string",len:80,index:!0},{name:"user_name",type:"string",store:!1},{name:"active",type:"bool",defaultValue:!0}],proxy:{type:"direct",api:{read:"Reminders.getReminders",create:"Reminders.addReminder",update:"Reminders.updateReminder"},reader:{root:"data"}}}),Ext.define("App.model.patient.Surgery",{extend:"Ext.data.Model",fields:[{name:"id",type:"int",comment:"Surgery ID"},{name:"eid",type:"int"},{name:"pid",type:"int"},{name:"created_uid",type:"int"},{name:"updated_uid",type:"int"},{name:"create_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"surgery",type:"string"},{name:"surgery_id",type:"string"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"referred_by",type:"string"},{name:"outcome",type:"string"},{name:"notes",type:"string"},{name:"alert",type:"bool"}],proxy:{type:"direct",api:{read:"Medical.getPatientSurgery",create:"Medical.addPatientSurgery",update:"Medical.updatePatientSurgery"}}}),Ext.define("App.model.patient.VectorGraph",{extend:"Ext.data.Model",table:{name:"vectorgraph",comment:"Vector Graphics"},fields:[{name:"id",type:"int",comment:"Vector Graphics ID"},{name:"age_mos",type:"float"},{name:"height",type:"float"},{name:"PP",type:"float"},{name:"P3",type:"float"},{name:"P5",type:"float"},{name:"P10",type:"float"},{name:"P25",type:"float"},{name:"P50",type:"float"},{name:"P75",type:"float"},{name:"P85",type:"float"},{name:"P90",type:"float"},{name:"P95",type:"float"},{name:"P97",type:"float"}],proxy:{type:"direct",api:{read:"VectorGraph.getGraphData"},reader:{type:"json"}}}),Ext.define("App.model.patient.VisitPayment",{extend:"Ext.data.Model",table:{name:"visitpayment",comment:"Visit Payment"},fields:[{name:"id",type:"int",comment:"Visit Payment ID"},{name:"no",type:"int"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"facility",type:"string"},{name:"received_from",type:"string"},{name:"amount",type:"string"},{name:"for_payment_of",type:"string"},{name:"paid_by",type:"string"},{name:"description",type:"string"},{name:"next_appointment",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"accounted_amount",type:"string"},{name:"payment_amount",type:"string"},{name:"balance_due",type:"string"}],proxy:{type:"direct",api:{read:"Encounter.Checkout"},reader:{type:"json"}}}),Ext.define("App.model.patient.charts.BMIForAge",{extend:"Ext.data.Model",table:{name:"bmiforage",comment:"BMI For Age"},fields:[{name:"id",type:"int",comment:"BMI For Age ID"},{name:"age",type:"float"},{name:"PP",type:"float"},{name:"P3",type:"float"},{name:"P5",type:"float"},{name:"P10",type:"float"},{name:"P25",type:"float"},{name:"P50",type:"float"},{name:"P75",type:"float"},{name:"P90",type:"float"},{name:"P95",type:"float"},{name:"P97",type:"float"}],proxy:{type:"direct",api:{read:"VectorGraph.getGraphData"},reader:{type:"json"},extraParams:{type:8}}}),Ext.define("App.model.patient.charts.HeadCircumferenceInf",{extend:"Ext.data.Model",table:{name:"headcircumferenceinf",comment:"Head Circumference Information"},fields:[{name:"id",type:"int",comment:"Head Circumference Information ID"},{name:"age",type:"float"},{name:"PP",type:"float"},{name:"P3",type:"float"},{name:"P5",type:"float"},{name:"P10",type:"float"},{name:"P25",type:"float"},{name:"P50",type:"float"},{name:"P75",type:"float"},{name:"P90",type:"float"},{name:"P95",type:"float"},{name:"P97",type:"float"}],proxy:{type:"direct",api:{read:"VectorGraph.getGraphData"},reader:{type:"json"},extraParams:{type:4}}}),Ext.define("App.model.patient.charts.LengthForAgeInf",{extend:"Ext.data.Model",table:{name:"lengthforageinf",comment:"Length For Age Information"},fields:[{name:"id",type:"int",comment:"Length For Age Information ID"},{name:"age",type:"float"},{name:"PP",type:"float"},{name:"P3",type:"float"},{name:"P5",type:"float"},{name:"P10",type:"float"},{name:"P25",type:"float"},{name:"P50",type:"float"},{name:"P75",type:"float"},{name:"P90",type:"float"},{name:"P95",type:"float"},{name:"P97",type:"float"}],proxy:{type:"direct",api:{read:"VectorGraph.getGraphData"},reader:{type:"json"},extraParams:{type:2}}}),Ext.define("App.model.patient.charts.StatureForAge",{extend:"Ext.data.Model",table:{name:"statureforage",comment:"Stature For Age"},fields:[{name:"id",type:"int",comment:"Stature For Age ID"},{name:"age",type:"float"},{name:"PP",type:"float"},{name:"P3",type:"float"},{name:"P5",type:"float"},{name:"P10",type:"float"},{name:"P25",type:"float"},{name:"P50",type:"float"},{name:"P75",type:"float"},{name:"P90",type:"float"},{name:"P95",type:"float"},{name:"P97",type:"float"}],proxy:{type:"direct",api:{read:"VectorGraph.getGraphData"},reader:{type:"json"},extraParams:{type:7}}}),Ext.define("App.model.patient.charts.WeightForAge",{extend:"Ext.data.Model",table:{name:"weightforage",comment:"Weight For Age"},fields:[{name:"id",type:"int",comment:"Weight For Age ID"},{name:"age",type:"float"},{name:"PP",type:"float"},{name:"P3",type:"float"},{name:"P5",type:"float"},{name:"P10",type:"float"},{name:"P25",type:"float"},{name:"P50",type:"float"},{name:"P75",type:"float"},{name:"P90",type:"float"},{name:"P95",type:"float"},{name:"P97",type:"float"}],proxy:{type:"direct",api:{read:"VectorGraph.getGraphData"},reader:{type:"json"},extraParams:{type:6}}}),Ext.define("App.model.patient.charts.WeightForAgeInf",{extend:"Ext.data.Model",table:{name:"weightforageinf",comment:"Weight For Age Information"},fields:[{name:"id",type:"int",comment:"Weight For Age Information ID"},{name:"age",type:"float"},{name:"PP",type:"float"},{name:"P3",type:"float"},{name:"P5",type:"float"},{name:"P10",type:"float"},{name:"P25",type:"float"},{name:"P50",type:"float"},{name:"P75",type:"float"},{name:"P90",type:"float"},{name:"P95",type:"float"},{name:"P97",type:"float"}],proxy:{type:"direct",api:{read:"VectorGraph.getGraphData"},reader:{type:"json"},extraParams:{type:1}}}),Ext.define("App.model.patient.charts.WeightForRecumbentInf",{extend:"Ext.data.Model",table:{name:"weightforrecumbentinf",comment:"Weight For Recumbent Information"},fields:[{name:"id",type:"int",comment:"Weight For Recumbent Information ID"},{name:"age",type:"float"},{name:"PP",type:"float"},{name:"P3",type:"float"},{name:"P5",type:"float"},{name:"P10",type:"float"},{name:"P25",type:"float"},{name:"P50",type:"float"},{name:"P75",type:"float"},{name:"P90",type:"float"},{name:"P95",type:"float"},{name:"P97",type:"float"}],proxy:{type:"direct",api:{read:"VectorGraph.getGraphData"},reader:{type:"json"},extraParams:{type:3}}}),Ext.define("App.model.patient.charts.WeightForStature",{extend:"Ext.data.Model",table:{name:"weightforstature",comment:"Weight For Stature"},fields:[{name:"id",type:"int",comment:"Weight For Stature ID"},{name:"height",type:"float"},{name:"PP",type:"float"},{name:"P3",type:"float"},{name:"P5",type:"float"},{name:"P10",type:"float"},{name:"P25",type:"float"},{name:"P50",type:"float"},{name:"P75",type:"float"},{name:"P85",type:"float"},{name:"P90",type:"float"},{name:"P95",type:"float"},{name:"P97",type:"float"}],proxy:{type:"direct",api:{read:"VectorGraph.getGraphData"},reader:{type:"json"},extraParams:{type:5}}}),Ext.define("App.model.areas.PatientArea",{extend:"Ext.data.Model",fields:[{name:"pid",type:"int",comment:"Pool Areas ID"},{name:"eid",type:"int"},{name:"name",type:"string"},{name:"patient"},{name:"shortName",type:"string"},{name:"poolArea",type:"string"},{name:"floorPlanId",type:"int"},{name:"zoneId",type:"int"},{name:"patientZoneId",type:"int"},{name:"priority",type:"string"},{name:"rank",type:"int"}],proxy:{type:"direct",api:{read:"PoolArea.getPatientsByPoolAreaAccess"}}}),Ext.define("App.model.areas.PoolArea",{extend:"Ext.data.Model",table:{name:"pool_areas"},fields:[{name:"id",type:"int"},{name:"title",type:"string",len:80},{name:"floor_plan_id",type:"int"},{name:"facility_id",type:"int"},{name:"sequence",type:"int"},{name:"active",type:"bool"}]}),Ext.define("App.model.areas.PoolDropAreas",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"name",type:"string"},{name:"pid",type:"int"},{name:"pic",type:"string"},{name:"time_in",type:"date",dateFormat:"Y-m-d H:i:s"}]}),Ext.define("App.view.patient.windows.PreventiveCare",{extend:"App.ux.window.Window",title:_("preventive_care_window"),closeAction:"hide",bodyStyle:"background-color:#fff",modal:!0,bodyPadding:5,initComponent:function(){var a=this;
a.patientPreventiveCare=Ext.create("App.store.patient.PreventiveCare",{groupField:"type",sorters:["type"],autoSync:!0}),a.grid=Ext.create("Ext.grid.Panel",{store:a.patientPreventiveCare,height:400,width:700,features:Ext.create("Ext.grid.feature.Grouping",{groupHeaderTpl:_("type")+": {name} ({rows.length} "+_("item")+'{[values.rows.length > 1 ? "s" : ""]})',hideGroupedHeader:!0,startCollapsed:!0}),columns:[{header:_("type"),dataIndex:"type",width:200},{header:_("description"),dataIndex:"description",width:200},{header:_("reason"),dataIndex:"reason",flex:1}],plugins:Ext.create("App.ux.grid.RowFormEditing",{autoCancel:!1,errorSummary:!1,clicksToEdit:1,items:[{title:_("general"),xtype:"container",padding:10,layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",name:"reason",fieldLabel:_("reason"),width:585,labelWidth:70,disabled:!0,allowBlank:!1,action:"reason"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",fieldLabel:_("observation"),name:"observation",width:250,labelWidth:70,disabled:!0,action:"observation"},{fieldLabel:_("date"),xtype:"datefield",disabled:!0,action:"date",width:200,labelWidth:40,format:g("date_display_format"),name:"date"},{xtype:"checkboxfield",name:"dismiss",fieldLabel:_("dismiss_alert"),enableKeyEvents:!0,listeners:{scope:a,change:a.onChangeOption}},{xtype:"textfield",hidden:!0,name:"eid",action:"eid"}]}]}]})}),a.items=[a.grid],this.callParent(arguments)},onChangeOption:function(a,b){var c=a.up("form").query('[action="reason"]')[0],d=a.up("form").query('[action="date"]')[0],e=a.up("form").query('[action="eid"]')[0],f=a.up("form").query('[action="observation"]')[0];e.setValue(app.patient.eid),b?(c.setDisabled(!1),d.setDisabled(!1),f.setDisabled(!1)):b?(c.setDisabled(!0),d.setDisabled(!0),f.setDisabled(!0)):(c.setDisabled(!0),d.setDisabled(!0),f.setDisabled(!0))},loadPatientPreventiveCare:function(){var a=this;this.patientPreventiveCare.load({scope:a,params:{pid:app.patient.pid},callback:function(b){return b.length>0?(a.show(),app.AuditLog("Patient preventive care viewed"),!0):!1}})}}),Ext.define("App.view.patient.windows.DocumentViewer",{extend:"Ext.window.Window",xtype:"documentviewerwindow",title:_("documents_viewer_window"),layout:"fit",height:700,width:800,bodyStyle:"background-color:#fff",maximizable:!0,defaults:{margin:5},tbar:["->",{text:_("archive_document"),itemId:"archiveDocumentBtn",icon:"resources/images/icons/save.png"}]}),Ext.define("App.view.patient.windows.NewEncounter",{extend:"Ext.window.Window",itemId:"EncounterDetailWindow",title:_("encounter"),closeAction:"hide",closable:!1,modal:!0,width:660,initComponent:function(){var a=this;a.store=Ext.create("App.store.patient.Encounters"),Ext.apply(a,{items:[a.encForm=Ext.create("Ext.form.Panel",{itemId:"EncounterDetailForm",border:!1,bodyPadding:"10 10 0 10"})],buttons:[{text:_("save"),action:"encounter",scope:a,handler:a.onFormSave},{text:_("cancel"),scope:a,handler:a.cancelNewEnc}],listeners:{show:a.checkValidation,hide:a.resetRecord}},a),a.getFormItems(this.encForm,5),a.callParent(arguments)},checkValidation:function(){var b=this,c=b.down("form").getForm(),d=c.getRecord();app.patient.pid?!d&&a("add_encounters")?(b.loadRecord(Ext.create("App.model.patient.Encounter",{pid:app.patient.pid,service_date:new Date,priority:"Minimal",open_uid:app.user.id,facility:app.user.facility,billing_facility:app.user.facility,brief_description:g("default_chief_complaint")})),Encounter.checkOpenEncountersByPid(app.patient.pid,function(a,d){d.result.encounter&&Ext.Msg.show({title:"Oops! "+_("open_encounters_found")+"...",msg:_("do_you_want_to")+" <strong>"+_("continue_creating_the_new_encounters")+'</strong><br>"'+_("click_no_to_review_encounter_history")+'"',buttons:Ext.Msg.YESNO,icon:Ext.Msg.QUESTION,fn:function(a){"yes"!=a&&(b.hide(),c.reset())}})})):d&&a("edit_encounters")||app.accessDenied():app.currPatientError()},onFormSave:function(b){var c=this,d=c.encForm.getForm(),e=d.getValues(),f=d.getRecord(),g=0===f.data.eid;d.isValid()&&(g&&a("add_encounters")||!g&&a("edit_encounters")?(f.set(e),f.save({callback:function(a){if(g){var b=a.data;app.patientButtonRemoveCls(),app.patientBtn.addCls(b.priority),app.openEncounter(b.eid)}c.close()}})):(b.up("window").close(),app.accessDenied()))},loadRecord:function(a){this.encForm.getForm().loadRecord(a)},resetRecord:function(){this.down("form").getForm().reset(!0),delete this.down("form").getForm()._record},cancelNewEnc:function(){this.close()}}),Ext.define("App.view.patient.windows.ArrivalLog",{extend:"App.ux.window.Window",title:_("patient_arrival_log"),closeAction:"hide",layout:"fit",modal:!0,width:900,height:600,maximizable:!0,initComponent:function(){var a=this;a.store=Ext.create("App.store.patient.PatientArrivalLog",{autoSync:!0}),a.tbar=[{xtype:"patienlivetsearch",fieldLabel:_("look_for_patient"),width:400,hideLabel:!1,enableKeyEvents:!0,listeners:{scope:a,select:a.onPatientSearchSelect,keyup:a.onPatientSearchKeyUp}},"-",{text:_("add_new_patient"),iconCls:"icoAddRecord",action:"newPatientBtn",disabled:!0,scope:a,handler:a.onNewPatient},"->",{xtype:"tool",type:"refresh",scope:a,handler:a.onGridReload}],a.items=[a.ckGrid=Ext.create("Ext.grid.Panel",{store:a.store,margin:5,columns:[{xtype:"actioncolumn",width:25,items:[{icon:"resources/images/icons/delete.png",tooltip:_("remove"),scope:a,handler:a.onPatientRemove}]},{header:_("time"),dataIndex:"time",width:130},{header:_("record")+" #",dataIndex:"pid"},{header:_("patient_name"),dataIndex:"name",flex:1},{header:_("insurance"),dataIndex:"insurance"},{header:_("area"),dataIndex:"area"},{width:25,dataIndex:"warning",renderer:a.warnRenderer}],listeners:{scope:a,itemdblclick:a.onPatientDlbClick}})],a.listeners={scope:a,show:a.onWinShow},a.callParent(arguments)},onPatientSearchSelect:function(a,b){var c=this,d=c.query("grid")[0].getStore(),e=c.query('button[action="newPatientBtn"]')[0];d.add({pid:b[0].data.pid,name:b[0].data.fullname,time:Ext.Date.format(new Date,"Y-m-d H:i:s"),isNew:!1}),a.reset(),e.setDisabled(!0)},onPatientSearchKeyUp:function(a){this.query('button[action="newPatientBtn"]')[0].setDisabled(null==a.getValue())},onNewPatient:function(a){var b=this,c=b.query("patienlivetsearch")[0],d=c.getValue(),e=b.query("grid")[0].getStore();c.reset(),a.disable(),e.add({name:d,time:Ext.Date.format(new Date,"Y-m-d H:i:s"),isNew:!0})},onPatientRemove:function(a,b){var c=a.getStore(),d=this,e=c.getAt(b);Encounter.checkForAnOpenedEncounterByPid({pid:e.data.pid,date:Ext.Date.format(new Date,"Y-m-d H:i:s")},function(a,b){b.result?d.msg("Oops!",_("patient_have_a_opened_encounter")):(d.msg("Sweet!",_("patient_have_been_removed")),c.remove(e))})},onPatientDlbClick:function(a,b){var c=this,d=b.data;app.setPatient(d.pid,d.name,null,function(){app.openPatientSummary()}),c.close()},onGridReload:function(){this.store.load()},onWinShow:function(){var a=this;a.onGridReload(),new Ext.util.DelayedTask(function(){a.query("patienlivetsearch")[0].focus()}).delay(1e3)}}),Ext.define("App.view.patient.windows.DocumentErrorNote",{extend:"Ext.window.Window",xtype:"patientdocumenterrornotewindow",draggable:!1,modal:!0,autoShow:!0,title:_("error_note"),items:[{xtype:"form",bodyPadding:10,width:400,items:[{xtype:"textareafield",anchor:"100%",labelWidth:70,labelAlign:"top",name:"error_note",allowBlank:!1}]}],buttons:[{text:_("cancel"),itemId:"DocumentErrorNoteCancelBtn",handler:function(a){a.up("window").close()}},{text:_("save"),itemId:"DocumentErrorNoteSaveBtn"}]}),Ext.define("App.store.patient.CheckoutAlertArea",{extend:"Ext.data.Store",model:"App.model.patient.CheckoutAlertArea",remoteSort:!1,autoLoad:!1}),Ext.define("App.model.patient.Patient",{extend:"Ext.data.Model",requires:["App.model.patient.Insurance","App.model.patient.Allergies","App.model.patient.Medications","App.model.patient.PatientActiveProblem"],table:{name:"patient"},fields:[{name:"pid",type:"int",comment:"patient ID"},{name:"title",type:"string",comment:"Title Mr. Sr.",len:10},{name:"fname",type:"string",comment:"first name",index:!0,len:60},{name:"mname",type:"string",comment:"middle name",index:!0,len:40},{name:"lname",type:"string",comment:"last name",index:!0,len:60},{name:"name",type:"string",store:!1},{name:"sex",type:"string",comment:"sex",index:!0,len:10},{name:"DOB",type:"date",comment:"day of birth",dateFormat:"Y-m-d H:i:s",index:!0,defaultValue:"0000-00-00 00:00:00"},{name:"DOBFormatted",type:"string",persist:!1},{name:"marital_status",type:"string",comment:"marital status",len:40},{name:"SS",type:"string",index:!0,comment:"social security",len:40},{name:"pubpid",type:"string",index:!0,comment:"external reference id",len:40},{name:"pubaccount",type:"string",index:!0,comment:"external reference account",len:40},{name:"record_number",type:"string",persist:!1},{name:"drivers_license",type:"string",index:!0,comment:"driver licence #",len:40},{name:"drivers_license_state",type:"string",len:40},{name:"drivers_license_exp",type:"date",dataType:"date",dateFormat:"Y-m-d"},{name:"fulladdress",type:"string",persist:!1,convert:!1},{name:"phones",type:"string",store:!1},{name:"provider",type:"string",comment:"default provider",len:40},{name:"pharmacy",type:"string",comment:"default pharmacy",len:40},{name:"hipaa_notice",type:"string",comment:"HIPAA notice status",len:40},{name:"race",type:"string",comment:"race",len:40},{name:"ethnicity",type:"string",comment:"ethnicity",len:40},{name:"language",type:"string",comment:"language",len:10},{name:"allow_leave_msg",type:"bool"},{name:"allow_voice_msg",type:"bool"},{name:"allow_mail_msg",type:"bool"},{name:"allow_sms",type:"bool"},{name:"allow_email",type:"bool"},{name:"allow_immunization_registry",type:"bool"},{name:"allow_immunization_info_sharing",type:"bool"},{name:"allow_health_info_exchange",type:"bool"},{name:"allow_patient_web_portal",type:"bool"},{name:"occupation",type:"string",comment:"patient occupation",len:40},{name:"employer_name",type:"string",comment:"employer name",len:40},{name:"employer_address",type:"string",comment:"employer address",len:40},{name:"employer_city",type:"string",comment:"employer city",len:40},{name:"employer_state",type:"string",comment:"employer state",len:40},{name:"employer_country",type:"string",comment:"employer country",len:40},{name:"employer_postal_code",type:"string",comment:"employer postal code",len:10},{name:"rating",type:"int",comment:"patient stars rating"},{name:"image",type:"string",dataType:"mediumtext",comment:"patient image base64 string"},{name:"qrcode",type:"string",dataType:"mediumtext",comment:"patient QRCode base64 string"},{name:"birth_place",type:"string",len:150},{name:"birth_multiple",type:"bool"},{name:"birth_order",type:"int",defaultValue:1,len:2},{name:"is_veteran",type:"string",len:1},{name:"deceased",type:"string",len:1},{name:"death_date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"alias",type:"string",len:80},{name:"citizenship",type:"string",len:80},{name:"primary_facility",type:"int"},{name:"primary_provider",type:"int"},{name:"administrative_status",type:"string",comment:"active | inactive | merged",len:15},{name:"create_uid",type:"int",comment:"create user ID"},{name:"update_uid",type:"int",comment:"update user ID"},{name:"create_date",type:"date",comment:"create date",dateFormat:"Y-m-d H:i:s"},{name:"update_date",type:"date",comment:"last update date",dateFormat:"Y-m-d H:i:s"},{name:"portal_password",type:"string",dataType:"blob",encrypt:!0},{name:"portal_username",type:"string",len:40},{name:"phone_publicity",type:"string",len:10},{name:"phone_home",type:"string",len:25},{name:"phone_mobile",type:"string",len:25},{name:"phone_work",type:"string",len:25},{name:"phone_work_ext",type:"string",len:25},{name:"phone_fax",type:"string",len:25},{name:"email",type:"string",len:80},{name:"postal_address",type:"string",len:40},{name:"postal_address_cont",type:"string",len:40},{name:"postal_city",type:"string",len:35},{name:"postal_state",type:"string",len:35},{name:"postal_zip",type:"string",len:35},{name:"physical_address",type:"string",len:40},{name:"physical_address_cont",type:"string",len:40},{name:"physical_city",type:"string",len:35},{name:"physical_state",type:"string",len:35},{name:"physical_zip",type:"string",len:35},{name:"guardians_relation",type:"string",len:20},{name:"guardians_fname",type:"string",len:80},{name:"guardians_mname",type:"string",len:80},{name:"guardians_lname",type:"string",len:80},{name:"guardians_phone",type:"string",len:20},{name:"guardians_phone_type",type:"string",len:10},{name:"emergency_contact_relation",type:"string",len:20},{name:"emergency_contact_fname",type:"string",len:80},{name:"emergency_contact_mname",type:"string",len:80},{name:"emergency_contact_lname",type:"string",len:80},{name:"emergency_contact_phone",type:"string",len:20},{name:"emergency_contact_phone_type",type:"string",len:10}],idProperty:"pid",proxy:{type:"direct",api:{read:"Patient.getPatients",create:"Patient.savePatient",update:"Patient.savePatient"}},hasMany:[{model:"App.model.patient.Insurance",name:"insurance",primaryKey:"pid",foreignKey:"pid"},{model:"App.model.patient.Allergies",name:"allergies",primaryKey:"pid",foreignKey:"pid"},{model:"App.model.patient.Medications",name:"medications",primaryKey:"pid",foreignKey:"pid"},{model:"App.model.patient.PatientActiveProblem",name:"activeproblems",primaryKey:"pid",foreignKey:"pid"},{model:"App.model.patient.PatientContacts",name:"contacts",primaryKey:"pid",foreignKey:"pid"}],indexes:[{name:"live_search_index",choice:"INDEX",type:"BTREE",columns:["pid","pubpid","fname","mname","lname","SS"]}]}),Ext.define("App.model.patient.PatientPossibleDuplicate",{extend:"App.model.patient.Patient",proxy:{type:"direct",api:{read:"Patient.getPossibleDuplicatesByDemographic"},reader:{root:"data"}}}),Ext.define("App.view.dashboard.panel.PortalDropZone",{extend:"Ext.dd.DropTarget",constructor:function(a,b){this.portal=a,Ext.dd.ScrollManager.register(a.body),App.view.dashboard.panel.PortalDropZone.superclass.constructor.call(this,a.body,b),a.body.ddScrollConfig=this.ddScrollConfig},ddScrollConfig:{vthresh:50,hthresh:-1,animate:!0,increment:200},createEvent:function(a,b,c,d,e,f){return{portal:this.portal,panel:c.panel,columnIndex:d,column:e,position:f,data:c,source:a,rawEvent:b,status:this.dropAllowed}},notifyOver:function(a,b,c){var d=b.getXY(),e=this.portal,f=a.proxy;this.grid||(this.grid=this.getGrid());var g=e.body.dom.clientWidth;this.lastCW?this.lastCW!=g&&(this.lastCW=g,this.grid=this.getGrid()):this.lastCW=g;var h=0,i=0,j=this.grid.columnX,k=j.length,l=!1;for(k;k>h;h++)if(i=j[h].x+j[h].w,d[0]<i){l=!0;break}l||h--;var m,n=0,o=0,p=!1,q=e.items.getAt(h),r=q.items.items,s=!1;for(k=r.length;k>n;n++)if(m=r[n],o=m.el.getHeight(),0===o)s=!0;else if(m.el.getY()+o/2>d[1]){p=!0;break}n=(p&&m?n:q.items.getCount())+(s?-1:0);var t=this.createEvent(a,b,c,h,q,n);return e.fireEvent("validatedrop",t)!==!1&&e.fireEvent("beforedragover",t)!==!1?(f.getProxy().setWidth("auto"),m?a.panelProxy.moveProxy(m.el.dom.parentNode,p?m.el.dom:null):a.panelProxy.moveProxy(q.el.dom,null),this.lastPos={c:q,col:h,p:s||p&&m?n:!1},this.scrollPos=e.body.getScroll(),e.fireEvent("dragover",t),t.status):t.status},notifyOut:function(){delete this.grid},notifyDrop:function(a,b,c){if(delete this.grid,this.lastPos){var d=this.lastPos.c,e=this.lastPos.col,f=this.lastPos.p,g=a.panel,h=this.createEvent(a,b,c,e,d,f!==!1?f:d.items.getCount());if(this.portal.fireEvent("validatedrop",h)!==!1&&this.portal.fireEvent("beforedrop",h)!==!1){Ext.suspendLayouts(),g.el.dom.style.display="",a.panelProxy.hide(),a.proxy.hide(),f!==!1?d.insert(f,g):d.add(g),Ext.resumeLayouts(!0),this.portal.fireEvent("drop",h);var i=this.scrollPos.top;if(i){var j=this.portal.body.dom;setTimeout(function(){j.scrollTop=i},10)}}return delete this.lastPos,!0}},getGrid:function(){var a=this.portal.body.getBox();return a.columnX=[],this.portal.items.each(function(b){a.columnX.push({x:b.el.getX(),w:b.el.getWidth()})}),a},unreg:function(){Ext.dd.ScrollManager.unregister(this.portal.body),App.view.dashboard.panel.PortalDropZone.superclass.unreg.call(this)}}),Ext.define("App.view.dashboard.Dashboard",{extend:"App.ux.RenderPanel",requires:[],pageTitle:_("dashboard"),itemId:"DashboardPanel",initComponent:function(){var a=this;Ext.apply(a,{pageBody:[{xtype:"portalpanel",region:"center",items:[{itemId:"DashboardColumn1"},{itemId:"DashboardColumn2"}]}]}),a.callParent()}}),Ext.define("App.view.dashboard.panel.NewResults",{extend:"Ext.grid.Panel",itemId:"DashboardNewResultsGrid",requires:["Ext.ux.SlidingPager"],maxHeight:200,columnLines:!0,disableSelection:!0,initComponent:function(){var a=this;a.store=Ext.create("App.store.patient.PatientsOrderResults"),a.bbar={xtype:"pagingtoolbar",pageSize:10,store:a.store,displayInfo:!0,plugins:Ext.create("Ext.ux.SlidingPager")},a.columns=[{text:_("signed"),dataIndex:"signed_uid",width:60,renderer:function(a){return app.boolRenderer(a)}},{xtype:"datecolumn",text:_("received"),dataIndex:"create_date"},{text:_("description"),dataIndex:"code_text",flex:1},{text:_("status"),renderer:this.pctChange,dataIndex:"result_status"}],a.callParent(arguments)},change:function(a){return a>0?'<span style="color:green;">'+a+"</span>":0>a?'<span style="color:red;">'+a+"</span>":a},pctChange:function(a){return a>0?'<span style="color:green;">'+a+"%</span>":0>a?'<span style="color:red;">'+a+"%</span>":a}}),Ext.define("App.view.dashboard.panel.DailyVisits",{extend:"Ext.panel.Panel",initComponent:function(){var a=this;Ext.apply(a,{layout:"fit",height:300,items:{xtype:"chart",itemId:"DashboardDailyVisitsChart",animate:!1,shadow:!1,store:a.store=Ext.create("Ext.data.JsonStore",{fields:["total","time"]}),axes:[{type:"Numeric",minimum:0,position:"left",fields:["total"],title:"Patients Per Hour",label:{font:"11px Arial"}},{type:"Time",position:"bottom",fields:["time"],title:"Time",dateFormat:"g:ia",step:[Ext.Date.HOUR,1],constrain:!0,fromDate:(new Date).setHours(6,0,0,0),toDate:(new Date).setHours(20,0,0,0)}],series:[{type:"line",highlight:{size:7,radius:7},axis:"left",smooth:!0,fill:!0,xField:"time",yField:"total",markerConfig:{type:"circle",size:4,radius:4,"stroke-width":0}}]}}),a.callParent()}}),Ext.define("App.view.areas.FloorPlan",{extend:"App.ux.RenderPanel",itemId:"FloorPlanPanel",pageTitle:_("area_floor_plan"),pageBody:[{xtype:"panel",title:_("floor_plans"),layout:"absolute",itemId:"FloorPlanPatientZonePanel",tbar:["->",{xtype:"floorplanareascombo",fieldLabel:_("area"),labelWidth:40,itemId:"FloorPlanAreasCombo"}],tools:[{type:"refresh",handler:function(){App.app.getController("areas.FloorPlan").setZones()}}]}]}),Ext.define("App.view.messages.Messages",{extend:"App.ux.RenderPanel",id:"panelMessages",pageTitle:_("messages")+" ("+_("inbox")+")",pageLayout:"border",defaults:{split:!0},uses:["App.ux.LivePatientSearch","App.ux.combo.MsgStatus","App.ux.combo.MsgNoteType","App.ux.combo.Users"],initComponent:function(){var a=this;a.storeMsgs=Ext.create("App.store.messages.Messages"),a.msgGrid=Ext.create("Ext.grid.Panel",{store:a.storeMsgs,region:"center",border:!0,viewConfig:{forceFit:!0,stripeRows:!0},listeners:{scope:this,itemclick:this.onItemClick},columns:[{header:_("status"),sortable:!0,dataIndex:"message_status",width:70},{header:_("from"),sortable:!0,dataIndex:"from_user",width:200},{header:_("to"),sortable:!0,dataIndex:"to_user",width:200},{header:_("patient"),sortable:!0,dataIndex:"patient_name",width:200},{header:_("subject"),sortable:!0,dataIndex:"subject",flex:1},{header:_("type"),sortable:!0,dataIndex:"note_type",width:100}],tbar:Ext.create("Ext.PagingToolbar",{store:a.storeMsgs,displayInfo:!0,emptyMsg:_("no_office_notes_to_display"),plugins:Ext.create("Ext.ux.SlidingPager",{}),items:["-",{text:_("delete"),cls:"winDelete",iconCls:"delete",itemId:"deleteMsg",disabled:!0,scope:a,handler:a.onDelete},"-",{text:_("inbox"),action:"inbox",enableToggle:!0,toggleGroup:"message",pressed:!0,scope:a,handler:a.messagesType},"-",{text:_("sent"),action:"sent",enableToggle:!0,toggleGroup:"message",scope:a,handler:a.messagesType},"-",{text:_("trash"),action:"trash",enableToggle:!0,toggleGroup:"message",scope:a,handler:a.messagesType},"-"]}),bbar:[{text:_("new_message"),iconCls:"newMessage",itemId:"newMsg",handler:function(){a.onNewMessage()}},"-",{text:_("reply"),iconCls:"edit",itemId:"replyMsg",disabled:!0,handler:function(){a.action("reply")}},"-"]}),a.msgForm=Ext.create("Ext.form.Panel",{region:"south",height:340,cls:"msgForm",layout:{type:"vbox",align:"stretch"},fieldDefaults:{labelWidth:60,margin:5,anchor:"100%"},items:[{xtype:"container",height:95,cls:"message-form-header",padding:"5 0",layout:"anchor",items:[{xtype:"container",layout:"column",items:[{xtype:"container",layout:"anchor",columnWidth:".50",items:[{xtype:"patienlivetsearch",fieldLabel:_("patient"),emptyText:_("no_patient_selected"),itemId:"patientCombo",name:"pid",hideLabel:!1},{xtype:"textfield",fieldLabel:_("patient"),itemId:"patientField",name:"patient_name",readOnly:!0,hidden:!0},{xtype:"userscombo",name:"to_id",fieldLabel:_("to"),validateOnChange:!1,allowBlank:!1}]},{xtype:"container",layout:"anchor",columnWidth:".50",items:[{xtype:"msgnotetypecombo",name:"note_type",fieldLabel:_("type"),listeners:{scope:a,select:a.onChange}},{xtype:"msgstatuscombo",name:"message_status",fieldLabel:_("status"),listeners:{scope:a,select:a.onChange}}]}]},{xtype:"textfield",fieldLabel:_("subject"),name:"subject",margin:"0 5 5 5"}]},{xtype:"htmleditor",name:"body",itemId:"bodyMsg",flex:1,readOnly:!0,allowBlank:!1},{xtype:"textfield",hidden:!0,name:"id"},{xtype:"textfield",hidden:!0,name:"pid"},{xtype:"textfield",hidden:!0,name:"reply_id"}],bbar:[{text:_("send"),iconCls:"save",itemId:"sendMsg",scope:a,handler:a.onSend},"-",{text:_("delete"),cls:"winDelete",iconCls:"delete",itemId:"deleteMsg",margin:"0 3 0 0",disabled:!0,scope:a,handler:a.onDelete}],listeners:{scope:a,afterrender:a.onFormRender}}),a.pageBody=[a.msgGrid,a.msgForm],a.callParent(arguments)},messagesType:function(a){this.updateTitle("Messages ("+Ext.String.capitalize(a.action)+")"),this.storeMsgs.proxy.extraParams={get:a.action},this.storeMsgs.load()},onFormRender:function(){this.msgForm.getComponent("bodyMsg").setReadOnly(!0),this.onNewMessage()},onNewMessage:function(){var a=this.msgForm,b=Ext.create("App.model.messages.Messages",{message_status:_("new"),note_type:_("unassigned")});say(b),a.getForm().reset(),a.getForm().loadRecord(b),this.action("new")},onSend:function(a){var b=a.up("form").getForm(),c=this.storeMsgs;if(b.isValid()){var d=b.getRecord(),e=b.getValues(),f=c.indexOf(d);-1==f?c.add(e):d.set(e),c.sync(),c.load(),this.onNewMessage(),this.msg("Sweet!",_("message_sent"))}else this.msg("Oops!",_("please_complete_all_required_fields")+".")},onDelete:function(){var a=this.msgForm.getForm(),b=this.storeMsgs;Ext.Msg.show({title:_("please_confirm")+"...",icon:Ext.MessageBox.QUESTION,msg:_("are_you_sure_to_delete_this_message"),buttons:Ext.Msg.YESNO,scope:this,fn:function(c){if("yes"==c){var d=a.getRecord();b.remove(d),b.destroy(),this.onNewMessage(),this.msg("Sweet!",_("sent_to_trash"))}}})},onChange:function(a,b){var c=this,d=a.up("form").getForm();if(d.getRecord().data.id){var e=d.getRecord().data.id,f=a.name,g=b[0].data.option_id,h={id:e,col:f,val:g};Messages.updateMessage(h,function(){c.storeMsgs.load()})}},onItemClick:function(a,b){b.data.to_id=b.data.from_id,this.msgForm.getForm().loadRecord(b),this.action("old")},action:function(a){var b=this.msgGrid.getSelectionModel(),c=this.msgForm,d=c.query('combo[itemId="patientCombo"]')[0],e=c.query('textfield[itemId="patientField"]')[0],f=c.getComponent("bodyMsg"),g=(c.getComponent("currMsg"),this.query('button[itemId="deleteMsg"]')[0]),h=this.query('button[itemId="deleteMsg"]')[1],i=this.query('button[itemId="replyMsg"]')[0],j=this.query('button[itemId="sendMsg"]')[0];if("new"==a)f.setReadOnly(!1),d.show(),e.hide(),g.disable(),h.disable(),i.disable(),j.enable(),b.deselectAll();else if("old"==a)f.setReadOnly(!0),d.hide(),e.show(),g.enable(),h.enable(),i.enable(),j.disable();else if("reply"==a){var k=f.getValue();f.setValue('<br><br><br><qoute style="margin-left: 10px; padding-left: 10px; border-left: solid 3px #cccccc; display: block;">'+k+"</quote>"),f.setReadOnly(!1),j.enable(),d.hide(),e.show()}},onActive:function(a){this.storeMsgs.load(),a(!0)}}),Ext.define("App.view.patient.charts.BPPulseTemp",{extend:"Ext.container.Container",layout:{type:"vbox",align:"stretch"},style:"background-color:#fff",defaults:{xtype:"panel",layout:"fit",flex:1},initComponent:function(){var a=this;a.items=[{title:_("blood_pressure"),margin:5,items:[{xtype:"chart",style:"background:#fff",store:a.store,animate:!1,shadow:!0,legend:{position:"right"},axes:[{title:_("blood_pressure"),type:"Numeric",position:"left",fields:["bp_systolic","bp_diastolic","bp_systolic_normal","bp_diastolic_normal"],grid:{odd:{opacity:1,stroke:"#bbb","stroke-width":.5}}},{title:_("date"),type:"Time",dateFormat:"Y-m-d h:i:s a",position:"bottom",fields:["date"]}],series:[{title:_("systolic"),type:"line",axis:"left",xField:"date",yField:"bp_systolic",smooth:!0,highlight:{size:10,radius:10},markerConfig:{type:"circle",size:5,radius:5,"stroke-width":0},tips:{trackMouse:!0,renderer:function(a){this.update("Date: "+Ext.Date.format(a.get("date"),"Y-m-d h:i:s a")+"<br>Systolic: "+a.get("bp_systolic"))}}},{title:_("diastolic"),type:"line",axis:"left",xField:"date",yField:"bp_diastolic",smooth:!0,highlight:{size:5,radius:5},markerConfig:{type:"cross",size:5,radius:5,"stroke-width":0},tips:{trackMouse:!0,renderer:function(a){this.update(_("date")+": "+Ext.Date.format(a.get("date"),"Y-m-d h:i:s a")+"<br>"+_("diastolic")+": "+a.get("bp_diastolic"))}}},{type:"line",showMarkers:!1,axis:"left",xField:"date",yField:"bp_diastolic_normal",style:{stroke:"#000000","stroke-width":1}},{type:"line",showMarkers:!1,axis:"left",xField:"date",yField:"bp_systolic_normal",style:{stroke:"#000000","stroke-width":1}}]}]},{title:"Pulse",margin:"0 5 5 5",items:[{xtype:"chart",style:"background:#fff",store:a.store,animate:!1,shadow:!0,legend:{position:"right"},axes:[{title:_("pulse_per_min"),type:"Numeric",position:"left",fields:["pulse"],grid:{odd:{opacity:1,stroke:"#bbb","stroke-width":.5}}},{title:_("date"),type:"Time",dateFormat:"Y-m-d h:i:s a",position:"bottom",fields:["date"]}],series:[{title:_("pulse"),type:"line",axis:"left",xField:"date",yField:"pulse",smooth:!0,highlight:{size:10,radius:10},markerConfig:{type:"circle",size:5,radius:5,"stroke-width":0},tips:{trackMouse:!0,renderer:function(a){this.update(_("date")+": "+Ext.Date.format(a.get("date"),"Y-m-d h:i:s a")+"<br>"+_("pulse_per_min")+": "+a.get("pulse"))}}}]}]},{title:_("temperature"),margin:"0 5 5 5",items:[{xtype:"chart",store:a.store,animate:!1,shadow:!0,legend:{position:"right"},axes:[{title:_("temp_fahrenheits"),type:"Numeric",position:"left",fields:["temp_f"],grid:{odd:{opacity:1,stroke:"#bbb","stroke-width":.5}}},{title:_("date"),type:"Time",dateFormat:"Y-m-d h:i:s a",position:"bottom",fields:["date"]}],series:[{title:_("temp_fahrenheits"),type:"line",axis:"left",xField:"date",yField:"temp_f",smooth:!0,highlight:{size:10,radius:10},markerConfig:{type:"circle",size:5,radius:5,"stroke-width":0},tips:{trackMouse:!0,renderer:function(a){this.update(_("date")+": "+Ext.Date.format(a.get("date"),"Y-m-d h:i:s a")+"<br>"+_("temp_fahrenheits")+": "+a.get("temp_f"))}}}]}]}],a.callParent(arguments)}}),Ext.define("App.view.patient.charts.HeadCircumference",{extend:"Ext.panel.Panel",layout:"fit",margin:5,initComponent:function(){var a=this;a.items=[{xtype:"chart",store:a.store,animate:!1,shadow:!1,legend:{position:"right"},axes:[{title:a.xTitle,type:"Numeric",position:"left",fields:["PP","P3","P5","P10","P25","P50","P75","P90","P95","P97"],grid:{odd:{opacity:1,stroke:"#bbb","stroke-width":.5}},minimum:a.xMinimum,maximum:a.xMaximum},{title:a.yTitle,type:"Numeric",position:"bottom",fields:["age"],minimum:a.yMinimum,maximum:a.yMaximum}],series:[{title:_("circumference_cm"),type:"scatter",axis:"left",xField:"age",yField:"PP",smooth:!0,highlight:{size:10,radius:10},markerConfig:{type:"circle",size:5,radius:5,"stroke-width":0},tips:{trackMouse:!0,renderer:function(b){this.update(a.yTitle+" : "+b.get("age")+"<br>"+a.xTitle+": "+b.get("PP"))}}},{title:"97%",type:"line",axis:"left",xField:"age",yField:"P97",smooth:!0,showMarkers:!1,style:{stroke:"#000000","stroke-width":1,opacity:.3},highlight:{stroke:"#FF9900",size:2}},{title:"95%",type:"line",axis:"left",xField:"age",yField:"P95",smooth:!0,showMarkers:!1,style:{stroke:"#000000","stroke-width":1,opacity:.3},highlight:{stroke:"#FF9900",size:2}},{title:"75%",type:"line",axis:"left",xField:"age",yField:"P75",smooth:!0,showMarkers:!1,style:{stroke:"#000000","stroke-width":1,opacity:.3},highlight:{stroke:"#FF9900",size:2}},{title:"50%",type:"line",axis:"left",xField:"age",yField:"P50",smooth:!0,showMarkers:!1,style:{stroke:"#000000","stroke-width":3,opacity:.5},highlight:{stroke:"#FF9900",size:4}},{title:"25%",type:"line",axis:"left",xField:"age",yField:"P25",smooth:!0,showMarkers:!1,style:{stroke:"#000000","stroke-width":1,opacity:.3},highlight:{stroke:"#FF9900",size:2}},{title:"10%",type:"line",axis:"left",xField:"age",yField:"P10",smooth:!0,showMarkers:!1,style:{stroke:"#000000","stroke-width":1,opacity:.3},highlight:{stroke:"#FF9900",size:2}},{title:"5%",type:"line",axis:"left",xField:"age",yField:"P5",smooth:!0,showMarkers:!1,style:{stroke:"#000000","stroke-width":1,opacity:.3},highlight:{stroke:"#FF9900",size:2}},{title:"3%",type:"line",axis:"left",xField:"age",yField:"P3",smooth:!0,showMarkers:!1,style:{stroke:"#000000","stroke-width":1,opacity:.3},highlight:{stroke:"#FF9900",size:2}}]}],a.callParent(arguments)}}),Ext.define("App.view.patient.charts.HeightForStature",{extend:"Ext.panel.Panel",layout:"fit",margin:5,title:_("weight_for_age"),initComponent:function(){var a=this;a.items=[{xtype:"chart",store:a.store,animate:!1,shadow:!1,legend:{position:"right"},axes:[{title:_("weight_kg"),type:"Numeric",position:"left",fields:["PP","P3","P5","P10","P25","P50","P75","P85","P90","P95","P97"],grid:{odd:{opacity:1,stroke:"#bbb","stroke-width":.5}},minimum:7,maximum:31},{title:_("length_cm"),type:"Numeric",position:"bottom",fields:["height"],minimum:77,maximum:121.5}],series:[{title:_("weight_kg"),type:"scatter",axis:"left",xField:"height",yField:"PP",smooth:!0,highlight:{size:10,radius:10},markerConfig:{type:"circle",size:5,radius:5,"stroke-width":0},tips:{trackMouse:!0,renderer:function(a){this.update(_("length_cm")+": "+a.get("height")+"<br>"+_("weightArray")+": "+a.get("PP"))}}},{title:"97%",type:"line",axis:"left",xField:"height",yField:"P97",smooth:!0,showMarkers:!1,style:{stroke:"#000000","stroke-width":1,opacity:.3},highlight:{stroke:"#FF9900",size:2}},{title:"95%",type:"line",axis:"left",xField:"height",yField:"P95",smooth:!0,showMarkers:!1,style:{stroke:"#000000","stroke-width":1,opacity:.3},highlight:{stroke:"#FF9900",size:2}},{title:"85%",type:"line",axis:"left",xField:"height",yField:"P85",smooth:!0,showMarkers:!1,style:{stroke:"#000000","stroke-width":1,opacity:.3},highlight:{stroke:"#FF9900",size:2}},{title:"75%",type:"line",axis:"left",xField:"height",yField:"P75",smooth:!0,showMarkers:!1,style:{stroke:"#000000","stroke-width":1,opacity:.3},highlight:{stroke:"#FF9900",size:2}},{title:"50%",type:"line",axis:"left",xField:"height",yField:"P50",smooth:!0,showMarkers:!1,style:{stroke:"#000000","stroke-width":3,opacity:.5},highlight:{stroke:"#FF9900",size:4}},{title:"25%",type:"line",axis:"left",xField:"height",yField:"P25",smooth:!0,showMarkers:!1,style:{stroke:"#000000","stroke-width":1,opacity:.3},highlight:{stroke:"#FF9900",size:2}},{title:"10%",type:"line",axis:"left",xField:"height",yField:"P10",smooth:!0,showMarkers:!1,style:{stroke:"#000000","stroke-width":1,opacity:.3},highlight:{stroke:"#FF9900",size:2}},{title:"5%",type:"line",axis:"left",xField:"height",yField:"P5",smooth:!0,showMarkers:!1,style:{stroke:"#000000","stroke-width":1,opacity:.3},highlight:{stroke:"#FF9900",size:2}},{title:"3%",type:"line",axis:"left",xField:"height",yField:"P3",smooth:!0,showMarkers:!1,style:{stroke:"#000000","stroke-width":1,opacity:.3},highlight:{stroke:"#FF9900",size:2}}]}],a.callParent(arguments)
}}),Ext.define("App.store.patient.AppointmentRequests",{extend:"Ext.data.Store",model:"App.model.patient.AppointmentRequest"}),Ext.define("App.view.patient.encounter.AppointmentRequestGrid",{extend:"Ext.grid.Panel",requires:["App.ux.grid.DeleteColumn"],xtype:"appointmentrequestgrid",itemId:"AppointmentRequestGrid",frame:!0,store:Ext.create("App.store.patient.AppointmentRequests"),initComponent:function(){var a=this;a.columns=[{xtype:"griddeletecolumn",width:25},{xtype:"datecolumn",text:_("requested_date"),dataIndex:"requested_date",width:120,format:g("date_display_format")},{xtype:"datecolumn",text:_("approved_date"),dataIndex:"approved_date",width:150,format:g("date_display_format")},{text:_("notes"),dataIndex:"notes",flex:1}],a.callParent()},tbar:[_("appointment_requests"),"->",{text:_("appointment_request"),itemId:"AppointmentRequestAddBtn",action:"encounterRecordAdd",iconCls:"icoAdd"}]}),Ext.define("App.view.patient.encounter.HealthCareFinancingAdministrationOptions",{extend:"Ext.form.Panel",xtype:"hcafaoptions",pid:null,eid:null,initComponent:function(){var a=this;a.callParent(),a.loadHCFAForm()},loadHCFAForm:function(){var a=this;a.getFormItems(this,10,function(){})}}),Ext.define("App.view.patient.encounter.CurrentProceduralTerminology",{extend:"Ext.panel.Panel",alias:"widget.currentproceduralterminology",autoScroll:!0,border:!1,bodyBorder:!1,bodyPadding:5,bodyStyle:"background-color:#fff",layout:"border",pid:null,eid:null,initComponent:function(){var a=this;a.referenceCptStore=Ext.create("App.store.patient.QRCptCodes"),a.encounterCptStore=Ext.create("App.store.patient.EncounterServices",{autoSync:!0,listeners:{scope:a,beforesync:a.beforesync}}),a.cptFormEdit=Ext.create("App.ux.grid.RowFormEditing",{autoCancel:!1,errorSummary:!1,clicksToEdit:1,enableRemove:!0,items:[{fieldLabel:_("full_description"),xtype:"displayfield",name:"code_text",anchor:"100%"},{xtype:"container",layout:"column",items:[{xtype:"fieldcontainer",layout:"anchor",columnWidth:.5,margin:"0 3 0 0",defaults:{xtype:"textfield"},items:[{fieldLabel:_("place_of_service"),name:"place_of_service",anchor:"100%"},{xtype:"checkbox",labelWidth:105,fieldLabel:_("emergency")+"?",name:"emergency"},{fieldLabel:_("charges"),name:"charge",anchor:"100%"}]},{xtype:"fieldcontainer",layout:"anchor",columnWidth:.5,margin:"0 0 0 3",defaults:{xtype:"textfield",anchor:"100%",labelWidth:110},items:[{fieldLabel:_("days_of_units"),name:"days_of_units"},{fieldLabel:_("essdt_fam_plan"),name:"essdt_plan"},{fieldLabel:_("modifiers"),xtype:"livecptsearch",hideLabel:!1,name:"modifiers"}]}]},{xtype:"liveicdxsearch",fieldLabel:_("diagnosis"),hideLabel:!1,name:"diagnosis"}],listeners:{scope:a,afterremove:a.onCompleteRemove}}),a.items=[{xtype:"panel",title:_("cpt_search"),itemId:"leftCol",region:"west",width:450,hidden:!0,titleCollapse:!0,margin:"0 5 0 0",bodyStyle:"background-color:#fff",layout:{type:"vbox",align:"stretch",padding:5},items:[{xtype:"fieldset",title:_("cpt_quick_reference_options"),padding:"10 15",margin:"0 0 3 0",layout:"anchor",items:{xtype:"combobox",anchor:"100%",editable:!1,queryMode:"local",valueField:"value",displayField:"name",store:Ext.create("Ext.data.Store",{fields:["name","value"],data:[{name:_("show_related_cpt_for_current_diagnostics"),value:0},{name:_("show_cpt_history_for_this_patient"),value:1},{name:_("show_cpt_commonly_used_by_clinic"),value:2}]}),listeners:{scope:a,change:a.onQuickReferenceOption}}},Ext.create("Ext.ux.LiveSearchGridPanel",{margins:0,flex:1,store:a.referenceCptStore,viewConfig:{copy:!0,stripRows:!0,loadMask:!0,plugins:[{ptype:"gridviewdragdrop",dragGroup:"CPTGridDDGroup"}]},columns:[{text:_("code"),width:70,sortable:!0,dataIndex:"code"},{text:_("description"),flex:1,sortable:!0,dataIndex:"code_text_medium"}]})],listeners:{scope:a,collapse:a.onQuickReferenceCollapsed}},{xtype:"panel",title:_("encounter_cpts"),region:"center",itemId:"rightCol",bodyStyle:"background-color:#fff",layout:{type:"vbox",align:"stretch",padding:5},items:[{xtype:"fieldset",title:_("cpt_live_sarch"),padding:"10 15",margin:"0 0 3 0",layout:"anchor",items:{xtype:"livecptsearch",listeners:{scope:a,select:a.onLiveCptSelect}}},{xtype:"grid",flex:1,margins:0,store:a.encounterCptStore,columns:[{text:_("code"),width:70,sortable:!0,dataIndex:"code"},{text:_("description"),flex:1,sortable:!0,dataIndex:"code_text"},{text:_("status"),width:50,sortable:!0,dataIndex:"status",renderer:a.status}],tbar:[{text:_("quick_reference"),action:"referenceCptBtn",enableToggle:!0,scope:a,toggleHandler:a.onQuickReferenceToggle},"->",{text:_("reload"),handler:function(){a.encounterCptStoreLoad(null)}}],viewConfig:{itemId:"view",plugins:{ptype:"gridviewdragdrop",dropGroup:"CPTGridDDGroup"},listeners:{scope:a,drop:a.onCptDropped}},plugins:a.cptFormEdit}]}],a.callParent(arguments)},status:function(a){return"0"==a?'<img style="padding-left: 10px" src="resources/images/icons/no.gif" />':"1"==a?'<img style="padding-left: 10px" src="resources/images/icons/yes.gif" />':"2"==a?'<img style="padding-left: 10px" src="resources/images/icons/icohelp.png" />':a},onQuickReferenceCollapsed:function(){var a=this.query('button[action="referenceCptBtn"]');a[0].pressed&&a[0].toggle(!1)},onQuickReferenceToggle:function(a,b){b?this.getComponent("leftCol").show():this.getComponent("leftCol").hide()},onQuickReferenceOption:function(a,b){this.loadCptQuickReferenceGrid(b)},onCompleteRemove:function(){app.msg("Sweet!",_("cpt_removed_from_this_encounter"))},onLiveCptSelect:function(a,b){var c=this;a.reset(),delete b[0].data.id,b[0].data.eid=c.eid,c.encounterCptStore.add(b[0].data)},loadCptQuickReferenceGrid:function(a){this.referenceCptStore.load({params:{pid:this.pid,eid:this.eid,filter:a}})},beforesync:function(a){a.create&&(a.create[0].data.eid=this.eid)},onCptDropped:function(a,b,c,d){app.msg("Sweet!",_("cpt_added_to_this_encounter")),this.cptFormEdit.cancelEdit();var e=c.store,f=e.indexOf(c),g="before"==d?f-1:f+1;this.cptFormEdit.startEdit(g,0)},setDefaultQRCptCodes:function(){var a=this.down("combobox");1!=a.getValue()?a.setValue(1):this.loadCptQuickReferenceGrid(1)},encounterCptStoreLoad:function(a,b,c){this.pid=a?a:this.pid,this.eid=b?b:this.eid,this.encounterCptStore.load({filters:[{property:"eid",value:this.eid}],callback:function(){c?c():null}})}}),Ext.define("App.view.patient.encounter.ICDs",{extend:"Ext.form.FieldSet",alias:"widget.icdsfieldset",title:_("dx_codes"),padding:"10 15",layout:{type:"vbox",align:"stretch"},requires:["App.ux.LiveICDXSearch"],autoFormSync:!0,dxGroup:{},initComponent:function(){var a=this;a.items=[{xtype:"container",layout:"hbox",items:[{xtype:"combobox",store:Ext.create("Ext.data.Store",{fields:["option",{name:"value",type:"int"}],data:[{option:"DX:1",value:1},{option:"DX:2",value:2},{option:"DX:3",value:3},{option:"DX:4",value:4},{option:"DX:5",value:5},{option:"DX:6",value:6},{option:"DX:7",value:7},{option:"DX:8",value:8},{option:"DX:9",value:9}]}),width:55,itemId:this.id+"-group-cmb",queryMode:"local",displayField:"option",valueField:"value",value:1,margin:"0 3 0 0",forceSelection:!0,editable:!1},{xtype:"liveicdxsearch",itemId:"liveicdxsearch",emptyText:a.emptyText,name:"dxCodes",flex:1,listeners:{scope:a,select:a.onLiveIcdSelect,blur:function(a){a.reset()}}}]}],a.callParent(arguments)},getGroupContainer:function(a){var b=this;return this.dxGroup[a]||(this.dxGroup[a]=Ext.widget("container",{layout:{type:"table",columns:6},itemId:this.id+"-group-"+a,margin:"5 0 0 0",items:[{xtype:"container",itemId:this.id+"-dx-order-1",action:"pointer"},{xtype:"container",itemId:this.id+"-dx-order-2",action:"pointer"},{xtype:"container",itemId:this.id+"-dx-order-3",action:"pointer"},{xtype:"container",itemId:this.id+"-dx-order-4",action:"pointer"},{xtype:"container",itemId:this.id+"-dx-order-5",action:"pointer"},{xtype:"container",itemId:this.id+"-dx-order-6",action:"pointer"},{xtype:"container",itemId:this.id+"-dx-order-7",action:"pointer"},{xtype:"container",itemId:this.id+"-dx-order-8",action:"pointer"},{xtype:"container",itemId:this.id+"-dx-order-9",action:"pointer"},{xtype:"container",itemId:this.id+"-dx-order-10",action:"pointer"},{xtype:"container",itemId:this.id+"-dx-order-11",action:"pointer"},{xtype:"container",itemId:this.id+"-dx-order-12",action:"pointer"}],listeners:{afterrender:function(c){for(var d=c.items.items,e=0;e<d.length;e++)new Ext.dd.DropTarget(d[e].el,{ddGroup:"group-"+a+"-dx",dropPos:!1,dxsContainer:c,dxContainer:d[e],notifyOver:function(a,b,d){{var e=d.panel,f=this.dxContainer;a.proxy}if(0==f.items.items.length)return!1;if(f.items.items[0]==e)return!1;var g=c.items.items.indexOf(e.ownerCt),h=c.items.items.indexOf(f);return this.dropBefore=g>h,this.dropPos=c.items.items.indexOf(f),!0},notifyDrop:function(a,d,e){if(a.panelProxy.hide(),a.proxy.hide(),Ext.suspendLayouts(),this.lastPos!==!1){var f=e.panel.ownerCt,g=this.dxsContainer.items.items[this.dropPos],h=this.dxsContainer.items.items[this.dropPos].items.items[0],i=e.panel;f.remove(i,!1),g.remove(h,!1),g.add(i),f.add(h)}return Ext.resumeLayouts(!0),delete this.dropPos,b.onReOrder(c),!0}})}}})),this.add(this.dxGroup[a]),this.dxGroup[a]},onLiveIcdSelect:function(a,b){var c,d=this,e=d.up("form").getForm().getRecord(),f=d.getDxGroupCombo().getValue(),g=d.getNextOrder(f);c=this.store.add({pid:e.data.pid,eid:e.data.eid,uid:app.user.id,code:b[0].data.code,dx_group:f,dx_order:g,code_type:b[0].data.code_type,code_text:b[0].data.code_text}),d.addIcd(c[0],f,g),a.reset()},removeIcds:function(){Ext.Object.each(this.dxGroup,function(a,b){Ext.destroy(b)}),this.dxGroup={}},loadIcds:function(a){var b=this,c=a.data.items;b.store=a,b.removeIcds(),b.loading=!0;for(var d=0;d<c.length;d++)b.addIcd(c[d],c[d].data.dx_group,c[d].data.dx_order);b.loading=!1,b.getIcdLiveSearch().reset()},addIcd:function(a,b,c){this.getDxCell(b,c).add({xtype:"panel",closable:!0,title:a.data.code,dxRecord:a,width:100,margin:"0 5 0 0",name:this.name,editable:!1,action:"Dx",draggable:{moveOnDrag:!1,ddGroup:"group-"+b+"-dx"}})},getDxCell:function(a,b){return this.getGroupContainer(a).getComponent(this.id+"-dx-order-"+b)},getIcdLiveSearch:function(){return this.query("liveicdxsearch")[0]},getDxGroupCombo:function(){return this.query("#"+this.id+"-group-cmb")[0]},getNextOrder:function(a){var b,c=this.getGroupContainer(a).query("container[action=pointer]"),d=c.length;for(b=0;d>b;b++)if(0==c[b].items.items.length)return b+1;return!1},onReOrder:function(a){var b,c=a.query("container[action=pointer]");b=c.length;for(var d=0;b>d;d++)c[d].items.items.length>0&&"Dx"==c[d].items.items[0].action&&c[d].items.items[0].dxRecord.set({dx_order:d+1})},sync:function(){this.store.sync()}}),Ext.define("App.view.patient.windows.PossibleDuplicates",{extend:"App.ux.window.Window",title:_("possible_duplicates"),itemId:"PossiblePatientDuplicatesWindow",closeAction:"hide",bodyStyle:"background-color:#fff",modal:!0,closable:!1,requires:["Ext.toolbar.Paging","Ext.ux.SlidingPager"],initComponent:function(){var a=this;a.items=[{xtype:"grid",store:a.store=Ext.create("App.store.patient.PatientPossibleDuplicates"),width:700,maxHeight:700,frame:!0,margin:5,hideHeaders:!0,columns:[{dataIndex:"image",width:65,renderer:function(a){var b=""!=a?a:app.patientImage;return'<img src="'+b+'" class="icon32Round" />'}},{dataIndex:"fullname",flex:1,renderer:function(a,b,c){var d=""!==c.data.phones?c.data.phones:"000-000-0000",e=""!==c.data.drivers_license?c.data.drivers_license:"0000000000";return'<table cellpadding="1" cellspacing="0" border="0" width="100%" style="font-size: 12px;"><tbody><tr><td width="20%"><b>'+_("record_number")+":</b></td><td>"+c.data.record_number+"</td></tr><tr><td><b>"+_("patient")+":</b></td><td>"+c.data.name+" ("+c.data.sex+") "+c.data.DOBFormatted+"</td></tr></tr><tr><td><b>"+_("address")+":</b></td><td>"+c.data.fulladdress+"</td></tr><tr><td><b>"+_("home_phone")+":</b></td><td>"+d+"</td></tr><tr><td><b>"+_("driver_lic")+":</b></td><td>"+e+"</td></tr><tr><td><b>"+_("employer_name")+":</b></td><td>"+c.data.employer_name+"</td></tr><tr><td><b>"+_("social_security")+":</b></td><td>"+c.data.SS+"</td></tr></tbody></table>"}}],bbar:{xtype:"pagingtoolbar",pageSize:10,store:a.store,displayInfo:!0,plugins:Ext.create("Ext.ux.SlidingPager")}}],a.buttons=[{text:_("cancel"),itemId:"PossiblePatientDuplicatesCancelBtn",handler:function(a){a.up("window").close()}},"-",{text:_("continue"),itemId:"PossiblePatientDuplicatesContinueBtn"}],a.callParent()}}),Ext.define("App.store.patient.DoctorsNotes",{extend:"Ext.data.Store",model:"App.model.patient.DoctorsNote",autoLoad:!1}),Ext.define("App.view.patient.DoctorsNotes",{extend:"Ext.grid.Panel",requires:["App.store.patient.DoctorsNotes","App.ux.grid.RowFormEditing","App.ux.form.fields.MultiText","App.ux.combo.Templates"],xtype:"patientdoctorsnotepanel",title:_("doctors_notes"),itemId:"DoctorsNotes",columnLines:!0,store:Ext.create("App.store.patient.DoctorsNotes",{storeId:"DoctorsNotesStore",groupField:"order_date",remoteFilter:!0,pageSize:200,sorters:[{property:"order_date",direction:"DESC"}]}),selModel:Ext.create("Ext.selection.CheckboxModel",{showHeaderCheckbox:!1}),features:[{ftype:"grouping"}],columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/cross.png",tooltip:_("remove")}]},{xtype:"datecolumn",text:_("date"),dataIndex:"order_date",format:g("date_display_format")},{text:_("type"),dataIndex:"template_id",renderer:function(a){return App.Current.getController("patient.DoctorsNotes").templatesRenderer(a)},allowBlank:!1},{xtype:"datecolumn",text:_("from"),dataIndex:"from_date",format:g("date_display_format")},{xtype:"datecolumn",text:_("to"),dataIndex:"to_date",format:g("date_display_format")},{text:_("comments"),dataIndex:"comments",flex:1},{text:_("restrictions"),dataIndex:"string_restrictions",flex:1}],plugins:[{ptype:"rowformediting",clicksToEdit:2,items:[{xtype:"container",layout:{type:"hbox"},items:[{xtype:"fieldset",layout:"anchor",title:_("general"),height:145,width:300,defaults:{margin:"0 0 5 0"},items:[{xtype:"datefield",fieldLabel:_("order_date"),format:g("date_display_format"),name:"order_date"},{xtype:"documentstemplatescombo",fieldLabel:_("document"),name:"template_id"},{xtype:"datefield",fieldLabel:_("from"),format:g("date_display_format"),name:"from_date"},{xtype:"datefield",fieldLabel:_("to"),format:g("date_display_format"),name:"to_date"}]},{xtype:"fieldset",layout:"fit",title:_("comments"),flex:1,height:145,margin:"0 5",items:[{xtype:"textareafield",anchor:"100%",margin:5,name:"comments"}]},{xtype:"fieldset",title:_("restrictions"),height:145,width:400,autoScroll:!0,items:[{xtype:"multitextfield",name:"restrictions"}]}]}]}],tbar:["->","-",{text:_("new_order"),iconCls:"icoAdd",action:"encounterRecordAdd",itemId:"newDoctorsNoteBtn"},"-",{text:_("print"),iconCls:"icoPrint",disabled:!0,margin:"0 5 0 0",itemId:"printDoctorsNoteBtn"}]}),Ext.define("App.store.patient.PatientImmunization",{extend:"Ext.data.Store",model:"App.model.patient.PatientImmunization"}),Ext.define("App.store.patient.Allergies",{extend:"Ext.data.Store",model:"App.model.patient.Allergies"}),Ext.define("App.store.patient.PatientActiveProblems",{extend:"Ext.data.Store",requires:["App.model.patient.PatientActiveProblem"],model:"App.model.patient.PatientActiveProblem"}),Ext.define("App.store.patient.Medications",{extend:"Ext.data.Store",model:"App.model.patient.Medications",groupField:"STR",startCollapsed:!0}),Ext.define("App.view.patient.ItemsToReview",{extend:"Ext.panel.Panel",alias:"widget.itemstoreview",layout:{type:"vbox",align:"stretch"},frame:!0,bodyPadding:5,bodyBorder:!0,bodyStyle:"background-color:white",showRating:!0,autoScroll:!0,itemId:"ItemsToReviewPanel",items:[{xtype:"container",layout:{type:"hbox",align:"stretch"},defaults:{xtype:"grid",margin:"0 0 5 0"},items:[{title:_("immunizations"),frame:!0,height:180,flex:1,store:Ext.create("App.store.patient.PatientImmunization"),itemId:"ItemsToReviewImmuGrid",margin:"0 5 5 0",columns:[{header:_("immunization"),width:250,dataIndex:"vaccine_name"},{header:_("date"),width:90,xtype:"datecolumn",format:"Y-m-d",dataIndex:"administered_date"},{header:_("notes"),flex:1,dataIndex:"note"}]},{title:_("allergies"),frame:!0,height:180,flex:1,store:Ext.create("App.store.patient.Allergies"),itemId:"ItemsToReviewAllergiesGrid",columns:[{header:_("type"),width:100,dataIndex:"allergy_type"},{header:_("name"),width:100,dataIndex:"allergy"},{header:_("severity"),flex:1,dataIndex:"severity"}]}]},{xtype:"container",layout:{type:"hbox",align:"stretch"},defaults:{xtype:"grid",margin:"0 0 5 0"},items:[{title:_("active_problems"),frame:!0,height:180,flex:1,margin:"0 5 5 0",store:Ext.create("App.store.patient.PatientActiveProblems"),itemId:"ItemsToReviewActiveProblemsGrid",columns:[{header:_("problem"),width:250,dataIndex:"code_text"},{xtype:"datecolumn",header:_("begin_date"),width:90,format:"Y-m-d",dataIndex:"begin_date"},{xtype:"datecolumn",header:_("end_date"),flex:1,format:"Y-m-d",dataIndex:"end_date"}]},{title:_("medications"),frame:!0,height:180,flex:1,store:Ext.create("App.store.patient.Medications"),itemId:"ItemsToReviewMedicationsGrid",columns:[{header:_("medication"),width:250,dataIndex:"STR"},{xtype:"datecolumn",header:_("begin_date"),width:90,format:"Y-m-d",dataIndex:"begin_date"},{xtype:"datecolumn",header:_("end_date"),flex:1,format:"Y-m-d",dataIndex:"end_date"}]}]},{xtype:"fieldset",title:_("social_history"),items:[{fieldLabel:_("smoking_status"),xtype:"mitos.smokingstatuscombo",itemId:"reviewsmokingstatuscombo",allowBlank:!1,labelWidth:100,width:325}]}],buttons:[{text:_("review_all"),name:"review",itemId:"encounterRecordAdd"}]}),Ext.define("App.view.patient.EncounterDocumentsGrid",{extend:"Ext.grid.Panel",requires:["Ext.grid.feature.Grouping"],xtype:"encounterdocumentsgrid",title:_("documents"),split:!0,features:[{ftype:"grouping",collapsible:!1,groupHeaderTpl:"{name}'s"}],selType:"checkboxmodel",store:Ext.create("Ext.data.Store",{fields:["id","record_id","description","document_type","controller","method"],proxy:{type:"memory"},groupField:"document_type"}),columns:[{header:_("description"),dataIndex:"description",flex:1}],tools:[{type:"print",itemId:"EncounterDocumentsPrintBtn"}],loadDocs:function(a){App.app.getController("patient.encounter.EncounterDocuments").loadDocumentsByEid(this,a)}}),Ext.define("App.view.patient.CheckoutAlertsView",{extend:"Ext.view.View",alias:"widget.checkoutalertsview",trackOver:!0,cls:"checkoutalert",itemSelector:"div.alert-div",loadMask:!0,singleSelect:!0,emptyText:'<span style="color: #616161; font-size: 12px;">Sweet! '+_("no_alerts_found")+".</span>",initComponent:function(){var a=this;a.tpl='<table><tpl for="."><tr class="alert-div><div class="alert-div"><img class="alert-img" src="{icon}" /><div class="alert-msg">{alert}</div></div></tr></tpl></table>',a.callParent(arguments)}}),Ext.define("App.view.patient.Vitals",{extend:"Ext.panel.Panel",requires:["Ext.grid.plugin.RowEditing","App.ux.form.fields.DateTime"],alias:"widget.vitalspanel",title:_("vitals"),layout:"border",bodyPadding:5,items:[{xtype:"container",height:100,region:"north",itemId:"vitalsBlocks",layout:{type:"hbox",align:"stretch"},defaults:{xtype:"container",cls:"latest-vitals-items",margin:"0 5 5 5",width:130},items:[{itemId:"bpBlock",margin:"0 5 5 0",html:'<p class="title">'+_("bp")+'</p><p class="value">--/--</p><p class="extra">'+_("systolic")+"/"+_("diastolic")+"</p>"},{itemId:"tempBlock",html:'<p class="title">'+_("temp")+'</p><p class="value">--</p><p class="extra">--</p>'},{itemId:"weighBlock",html:'<p class="title">'+_("weight")+'</p><p class="value">--</p>'},{itemId:"heightBlock",html:'<p class="title">'+_("height")+'</p><p class="value">--</p>'},{itemId:"bmiBlock",html:'<p class="title">'+_("bmi")+'</p><p class="value">--</p><p class="extra">--</p>'},{itemId:"notesBlock",margin:"0 5 5 5",html:'<p class="title">'+_("notes")+'</p><p class="value" style="text-align: left"> -- </p><p class="extra">--</p>',flex:1}]},{xtype:"grid",region:"center",flex:1,columnLines:!0,itemId:"historyGrid",multiSelect:!0,plugins:[{ptype:"rowediting"}],viewConfig:{getRowClass:function(a){return 0===a.data.auth_uid?"unsignedVital":""}},tbar:[{xtype:"button",icon:"resources/images/icons/blueInfo.png",focusCls:"",handler:function(){App.app.getController("InfoButton").doGetInfoByUrl("https://vsearch.nlm.nih.gov/vivisimo/cgi-bin/query-meta?v%3Aproject=medlineplus&query=vitals+signs&x=0&y=0")}},"->",{text:_("vitals"),iconCls:"icoAdd",itemId:"vitalAddBtn",action:"encounterRecordAdd"},"-",{text:_("sign"),icon:"resources/images/icons/pen.png",itemId:"vitalSignBtn",action:"encounterRecordAdd"}]}],initComponent:function(){var a=this,b=[{xtype:"datecolumn",text:_("date"),dataIndex:"date",format:"Y-m-d g:i a",width:180,editor:{xtype:"mitos.datetime",timeFormat:"g:i a"}},{text:_("bp"),columns:[{text:_("systolic"),dataIndex:"bp_systolic",width:65,editor:{xtype:"textfield",vtype:"numeric"}},{text:_("diastolic"),dataIndex:"bp_diastolic",width:65,editor:{xtype:"textfield",vtype:"numeric"}}]}];b.push("metric"!=g("units_of_measurement")?{text:_("temp"),dataIndex:"temp_f",width:70,editor:{xtype:"textfield",itemId:"vitalTempFField",vtype:"numericWithDecimal",enableKeyEvents:!0},renderer:function(a){return 0===a||null===a?"":a+"&deg;F"}}:{text:_("temp"),dataIndex:"temp_c",width:70,editor:{xtype:"textfield",itemId:"vitalTempCField",vtype:"numericWithDecimal",enableKeyEvents:!0},renderer:function(a){return 0===a||null===a?"":a+"&deg;C"}}),b.push({text:_("temp_location"),dataIndex:"temp_location",editor:{xtype:"gaiaehr.combo",list:62}}),"metric"!=g("units_of_measurement")?(b.push({text:_("weight_lbs"),dataIndex:"weight_lbs",width:80,editor:{xtype:"textfield",itemId:"vitalWeightLbsField",vtype:"numericWithSlash",enableKeyEvents:!0},renderer:function(a){return 0===a||null===a?"":a+" lbs/oz"}}),b.push({text:_("height_in"),dataIndex:"height_in",width:70,editor:{xtype:"textfield",itemId:"vitalHeightInField",vtype:"numericWithDecimal",enableKeyEvents:!0},renderer:function(a){return 0===a||null===a?"":a+" in"}})):(b.push({text:_("weight"),dataIndex:"weight_kg",width:80,editor:{xtype:"textfield",itemId:"vitalWeightKgField",vtype:"numericWithDecimal",enableKeyEvents:!0},renderer:function(a){return 0===a||null===a?"":a+" kg"}}),b.push({text:_("height_cm"),dataIndex:"height_cm",width:70,editor:{xtype:"textfield",itemId:"vitalHeightCmField",vtype:"numericWithDecimal",enableKeyEvents:!0},renderer:function(a){return 0===a||null===a?"":a+" cm"}})),b.push({text:_("pulse"),dataIndex:"pulse",width:60,editor:{xtype:"textfield",vtype:"numeric"},renderer:function(a){return 0===a||null===a?"":a}}),b.push({text:_("respiration"),dataIndex:"respiration",editor:{xtype:"textfield",vtype:"numeric"},renderer:function(a){return 0===a||null===a?"":a}}),b.push({text:_("bmi"),dataIndex:"bmi",width:50}),b.push({text:_("other_notes"),dataIndex:"other_notes",flex:1,editor:{xtype:"textfield"}}),b.push({text:_("administer_by"),dataIndex:"administer_by"}),b.push({text:_("authorized_by"),dataIndex:"authorized_by"}),a.items[1].columns=b,a.callParent()}}),Ext.define("App.view.patient.NewPatient",{extend:"App.ux.RenderPanel",pageTitle:_("patient_entry_form"),initComponent:function(){var a=this;a.pageBody=[a.newPatientPanel=Ext.create("App.view.patient.Patient")],a.callParent(arguments)},confirmationWin:function(a){Ext.Msg.show({title:_("please_confirm")+"...",msg:_("do_you_want_to_create_a_new_patient"),icon:Ext.MessageBox.QUESTION,buttons:Ext.Msg.YESNO,scope:this,fn:function(b){a(b)}})},onActive:function(a){var b=this;this.confirmationWin(function(c){"yes"==c?(b.newPatientPanel.loadNew(),app.unsetPatient(null,!0),a(!0)):(app.nav.goBack(),a(!1))})}}),Ext.define("App.view.patient.ProgressNote",{extend:"Ext.panel.Panel",alias:"widget.progressnote",bodyPadding:5,autoScroll:!0,loadMask:!1,initComponent:function(){var a=this;a.tpl=new Ext.XTemplate('<div class="progressNote">   <div class="secession general-data">       <div class="title"> '+_("general")+' </div>       <table width="100%">           <tr>               <td>                   <div class="header row">'+_("name")+': {patient_name} </div>                   <div class="header row">'+_("record")+': #{pid} </div>                   <div class="header row">'+_("provider_date")+': {open_by} </div>                   <div class="header row">'+_("onset_date")+': {[values.onset_date || "-"]} </div>                   <div class="header row">'+_("provider")+': {[values.signed_by || "-"]} </div>               </td>               <td>                   <div class="header row">'+_("service_date")+': {service_date} </div>                   <div class="header row">'+_("visit_category")+': {visit_category} </div>                   <div class="header row">'+_("facility")+': {facility} </div>                   <div class="header row">'+_("priority")+': {priority} </div>                   <div class="header row">'+_("signed_on")+': {[values.close_date || "-"]} </div>               </td>           </tr>           <tr>               <td colspan="2">                   <div class="header row" style="white-space: normal;">'+_("chief_complaint")+': {brief_description} </div>               </td>           </tr>       </table>   </div>   <tpl if="reviewofsystems">       <div class="secession">           <div class="title"> '+_("review_of_systems")+' </div>           <tpl for="reviewofsystems">               <tpl if="this.isNotNull(value)">                   <div class="pblock"> {name}: {value} </div>               </tpl>           </tpl>       </div>   </tpl>   <tpl if="reviewofsystemschecks">       <div class="secession">           <div class="title"> '+_("review_of_system_checks")+' </div>           <tpl for="reviewofsystemschecks">               <tpl if="this.isNotNull(value)">                   <div class="pblock"> {name}: {value} </div>               </tpl>           </tpl>       </div>   </tpl>   <tpl for="soap">       <div class="secession">           <div class="title"> '+_("soap")+" </div>           <p><span>"+_("subjective")+':</span> {[this.doHtmlDecode(values.subjective) || "-"]} </p>           <p><span>'+_("objective")+':</span> {[this.doHtmlDecode(values.objective) || "-"]}</p>           <p><span>'+_("assessment")+':</span> {[this.doHtmlDecode(values.assessment) || "-"]}</p>           <p><span>'+_("plan")+':</span> {[this.doHtmlDecode(values.plan) || "-"]}</p>       </div>   </tpl>   <tpl for="speechdictation">       <div class="secession">           <div class="title"> '+_("speech_dictation")+" </div>           <p><span>"+_("dictation")+":</span> {dictation}</p>           <p><span>"+_("additional_notes")+':</span> {additional_notes}</p>       </div>   </tpl>   <tpl if="vitals">       <div class="secession vitals-data">           <div class="title"> '+_("vitals")+' </div>           <div style="overflow-x: auto">               <table>                   <tr>                       <td>                          <table class="x-grid-table x-grid-table-vitals vitals-column">                              <tbody>                                  <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td x-grid-table-vitals-date">                                           <div class="x-grid-cell-inner ">'+_("date_&_time")+'</div>                                       </td>                                   </tr>                       <tpl if="!this.isMetric()">                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("weight_lbs")+"</div>                                       </td>                                   </tr>                       <tpl else>",'                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("weight_kg")+"</div>                                       </td>                                   </tr>                       </tpl>",'                       <tpl if="!this.isMetric()">                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("height_in")+"</div>                                       </td>                                   </tr>                       <tpl else>",'                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("height_cm")+"</div>                                       </td>                                   </tr>                       </tpl>",'                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("bp_systolic")+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("bp_diastolic")+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("pulse")+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("respiration")+'</div>                                       </td>                                   </tr>                       <tpl if="!this.isMetric()">                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("temp_f")+"</div>                                       </td>                                   </tr>                       <tpl else>",'                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("temp_c")+"</div>                                       </td>                                   </tr>                       </tpl>",'                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("temp_location")+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("oxygen_saturation")+'%</div>                                       </td>                                   </tr>                       <tpl if="!this.isMetric()">                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("head_circumference_in")+"</div>                                       </td>                                   </tr>                       <tpl else>",'                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("head_circumference_cm")+"</div>                                       </td>                                   </tr>                       </tpl>",'                       <tpl if="!this.isMetric()">                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("waist_circumference_in")+"</div>                                       </td>                                   </tr>                       <tpl else>",'                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("waist_circumference_cm")+"</div>                                       </td>                                   </tr>                       </tpl>",'                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("bmi")+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("bmi_status")+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("other_notes")+'</div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("administer")+'<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">'+_("signed_by")+'<div>                                       </td>                                   </tr>                               </tbody>                           </table>                       </td>                       <tpl for="vitals">                           <td>                           <table class="x-grid-table x-grid-table-vitals vitals-column">                               <tbody>                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td x-grid-table-vitals-date">                                           <div class="x-grid-cell-inner ">{date}</div>                                       </td>                                   </tr>                       <tpl if="!this.isMetric()">                                   <tr class="x-grid-row first">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.weight_lbs)]}</div>                                       </td>                                   </tr>                       <tpl else>','                                   <tr class="x-grid-row first">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.weight_kg)]}<div>                                       </td>                                   </tr>                       </tpl>','                       <tpl if="!this.isMetric()">                                   <tr class="x-grid-row x-grid-row-alt">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.height_in)]}<div>                                       </td>                                   </tr>                       <tpl else>','                                   <tr class="x-grid-row x-grid-row-alt">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.height_cm)]}<div>                                       </td>                                   </tr>                       </tpl>','                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.bp_systolic)]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-row-alt">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.bp_diastolic)]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.pulse)]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-row-alt">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.respiration)]}<div>                                       </td>                                   </tr>                       <tpl if="!this.isMetric()">                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.temp_f)]}<div>                                       </td>                                   </tr>                       <tpl else>','                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.temp_c)]}<div>                                       </td>                                   </tr>                       </tpl>','                                   <tr class="x-grid-row x-grid-row-alt">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.temp_location.toUpperCase())]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.oxygen_saturation)]}<div>                                       </td>                                   </tr>                       <tpl if="!this.isMetric()">                                   <tr class="x-grid-row x-grid-row-alt">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.head_circumference_in)]}<div>                                       </td>                                   </tr>                       <tpl else>','                                   <tr class="x-grid-row x-grid-row-alt">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.head_circumference_cm)]}<div>                                       </td>                                   </tr>                       </tpl>','                       <tpl if="!this.isMetric()">                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.waist_circumference_in)]}<div>                                       </td>                                   </tr>                       <tpl else>','                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.waist_circumference_cm)]}<div>                                       </td>                                   </tr>                       </tpl>','                                   <tr class="x-grid-row x-grid-row-alt">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.bmi)]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.bmi_status)]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-row-alt">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[this.getVitalsValue(values.other_notes)]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row x-grid-data-row">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[(values.administer_by == null || values.administer_by == " ") ? "-" : values.administer_by]}<div>                                       </td>                                   </tr>                                   <tr class="x-grid-row  x-grid-row-alt">                                       <td class="x-grid-cell x-grid-td">                                           <div class="x-grid-cell-inner ">{[(values.authorized_by == null || values.authorized_by == " ") ? "-" : values.authorized_by]}<div>                                       </td>                                   </tr>                               </tbody>                           </table>                           </td>                       </tpl>                   </tr>               </table>           </div>       </div>   </tpl></div>',{isNotNull:function(a){return"null"!=a&&null!=a
},isNotEmpty:function(){},getVitalsValue:function(a){return 0==a||null==a?"-":a},isMetric:function(){return"metric"==g("units_of_measurement")},doHtmlDecode:function(a){return Ext.String.htmlDecode(a)}}),a.callParent(arguments)}}),Ext.define("App.view.patient.RemindersAlert",{extend:"Ext.window.Window",requires:["Ext.grid.plugin.RowEditing"],title:_("reminders"),width:700,closeAction:"hide",initComponent:function(){var a=this;a.items=[{xtype:"grid",itemId:"RemindersAlertGrid",margin:5,frame:!0,store:Ext.create("App.store.patient.Reminders"),plugins:{ptype:"cellediting",autoCancel:!1,errorSummary:!1,clicksToEdit:2},columns:[{xtype:"datecolumn",text:_("date"),format:g("date_display_format"),dataIndex:"date"},{text:_("note"),dataIndex:"body",flex:1},{text:_("active"),width:50,dataIndex:"active",renderer:function(a,b,c){return app.boolRenderer(a,b,c)},editor:{xtype:"checkbox"}}]}],a.callParent()},buttons:["->",{text:_("ok"),itemId:"RemindersAlertOkBtn"},"-",{text:_("cancel"),itemId:"RemindersAlertCancelBtn"}]}),Ext.define("App.store.patient.Reminders",{extend:"Ext.data.Store",model:"App.model.patient.Reminders"}),Ext.define("App.view.patient.Reminders",{extend:"Ext.grid.Panel",requires:["Ext.grid.plugin.RowEditing"],xtype:"patientreminderspanel",title:_("reminders"),store:Ext.create("App.store.patient.Reminders"),plugins:{ptype:"rowediting",autoCancel:!1,errorSummary:!1,clicksToEdit:2},columns:[{xtype:"datecolumn",text:_("date"),format:"Y-m-d",dataIndex:"date"},{header:_("type"),dataIndex:"type",width:200,editor:{xtype:"gaiaehr.combo",list:130}},{text:_("note"),dataIndex:"body",flex:1,editor:{xtype:"textfield"}},{text:_("user"),width:225,dataIndex:"user_name"},{text:_("active"),width:50,dataIndex:"active",renderer:function(a,b,c){return app.boolRenderer(a,b,c)},editor:{xtype:"checkbox"}}],tbar:["->",{text:_("add_reminder"),iconCls:"icoAdd",itemId:"RemindersAddBtn"}]}),Ext.define("App.store.patient.PatientsOrders",{extend:"Ext.data.Store",model:"App.model.patient.PatientsOrders",remoteSort:!1,autoLoad:!1}),Ext.define("App.view.patient.Results",{extend:"Ext.panel.Panel",requires:["Ext.grid.plugin.CellEditing","Ext.grid.plugin.RowEditing","Ext.tab.Panel","App.store.patient.PatientsOrders","App.ux.LiveLabsSearch","App.ux.LiveRadsSearch"],title:_("results"),xtype:"patientresultspanel",layout:"border",border:!1,items:[{xtype:"grid",itemId:"orderResultsGrid",action:"orders",region:"center",split:!0,border:!1,columnLines:!0,allowDeselect:!0,store:Ext.create("App.store.patient.PatientsOrders",{remoteFilter:!0}),plugins:[{pluginId:"resultRowEditor",ptype:"rowediting",errorSummary:!1}],columns:[{xtype:"actioncolumn",width:25,items:[{icon:"resources/images/icons/blueInfo.png",tooltip:"Get Info",handler:function(a,b,c,d,e,f){App.app.getController("InfoButton").doGetInfo(f.data.code,f.data.code_type,f.data.description)}}]},{header:_("type"),width:100,dataIndex:"order_type",editor:{xtype:"combobox",itemId:"orderTypeCombo",store:Ext.create("Ext.data.Store",{fields:["type","order_type"],data:[{type:"Laboratory",order_type:"lab"},{type:"Radiology",order_type:"rad"}]}),allowBlank:!1,editable:!1,queryMode:"local",displayField:"type",valueField:"order_type"}},{xtype:"datecolumn",format:"Y-m-d",header:_("date_ordered"),dataIndex:"date_ordered",menuDisabled:!0,resizable:!1,width:100,editor:{xtype:"datefield",allowBlank:!1}},{header:_("order_description"),dataIndex:"description",menuDisabled:!0,resizable:!1,flex:1},{header:_("status"),dataIndex:"status",menuDisabled:!0,resizable:!1,width:60}],bbar:["->",{text:_("new_result"),itemId:"NewOrderResultBtn",iconCls:"icoAdd",disabled:!0}]},{xtype:"panel",border:!1,region:"south",split:!0,itemId:"documentTypeCard",height:350,hidden:!0,layout:"card",activeItem:0,items:[{xtype:"panel",frame:!1,itemId:"laboratoryResultPanel",layout:{type:"border"},tools:[{xtype:"button",text:_("view_document"),icon:"resources/images/icons/icoView.png",action:"orderDocumentViewBtn"}],items:[{xtype:"form",title:_("report_info"),itemId:"laboratoryResultForm",region:"west",collapsible:!0,autoScroll:!0,width:260,bodyPadding:5,split:!0,layout:{type:"vbox",align:"stretch"},items:[{xtype:"fieldset",title:_("report_info"),defaults:{xtype:"textfield",anchor:"100%"},layout:"anchor",items:[{xtype:"datefield",fieldLabel:_("report_date"),name:"result_date",format:"Y-m-d",allowBlank:!1},{fieldLabel:_("report_number"),name:"lab_order_id",allowBlank:!1},{fieldLabel:_("status"),name:"result_status"},{xtype:"datefield",fieldLabel:_("observation_date"),name:"observation_date",format:"Y-m-d",allowBlank:!1},{fieldLabel:_("specimen"),name:"specimen_text"},{xtype:"textareafield",fieldLabel:_("specimen_notes"),name:"specimen_notes",height:50},{xtype:"filefield",labelAlign:"top",fieldLabel:_("upload_document"),action:"orderresultuploadfield",submitValue:!1}]},{xtype:"fieldset",title:_("laboratory_info"),defaults:{xtype:"textfield",anchor:"100%"},layout:"anchor",margin:0,collapsible:!0,collapsed:!0,items:[{fieldLabel:_("name"),name:"lab_name"},{xtype:"textareafield",fieldLabel:_("address"),name:"lab_address",height:50}]}]},{xtype:"grid",itemId:"observationsGrid",action:"observations",flex:1,region:"center",split:!0,border:!1,columnLines:!0,plugins:[{ptype:"cellediting",clicksToEdit:1}],columns:[{xtype:"actioncolumn",width:25,items:[{icon:"resources/images/icons/blueInfo.png",tooltip:"Get Info",handler:function(a,b,c,d,e,f){App.app.getController("InfoButton").doGetInfo(f.data.code,f.data.code_type,f.data.code_text)}}]},{text:_("name"),menuDisabled:!0,dataIndex:"code_text",width:350},{text:_("value"),menuDisabled:!0,dataIndex:"value",width:180,editor:{xtype:"textfield"},renderer:function(a,b,c){var d=["LL","HH",">","<","AA","VS"],e=["L","H","A","W","MS"],f=["B","S","U","D","R","I"],g=["N"];return Ext.Array.contains(g,c.data.abnormal_flag)?'<span style="color:green;">'+a+"</span>":Ext.Array.contains(f,c.data.abnormal_flag)?'<span style="color:blue;">'+a+"</span>":Ext.Array.contains(e,c.data.abnormal_flag)?'<span style="color:orange;">'+a+"</span>":Ext.Array.contains(d,c.data.abnormal_flag)?'<span style="color:red;">'+a+"</span>":a}},{text:_("units"),menuDisabled:!0,dataIndex:"units",width:75,editor:{xtype:"textfield"}},{text:_("abnormal"),menuDisabled:!0,dataIndex:"abnormal_flag",width:75,editor:{xtype:"textfield"},renderer:function(a){var b=["LL","HH",">","<","AA","VS"],c=["L","H","A","W","MS"],d=["B","S","U","D","R","I"],e=["N"];return Ext.Array.contains(e,a)?'<span style="color:green;">'+a+"</span>":Ext.Array.contains(d,a)?'<span style="color:blue;">'+a+"</span>":Ext.Array.contains(c,a)?'<span style="color:orange;">'+a+"</span>":Ext.Array.contains(b,a)?'<span style="color:red;">'+a+"</span>":a}},{text:_("range"),menuDisabled:!0,dataIndex:"reference_rage",width:150,editor:{xtype:"textfield"}},{text:_("notes"),menuDisabled:!0,dataIndex:"notes",width:300,editor:{xtype:"textfield"}},{text:_("status"),menuDisabled:!0,dataIndex:"observation_result_status",width:60,editor:{xtype:"textfield"}}]}],dockedItems:[{xtype:"toolbar",dock:"bottom",ui:"footer",itemId:"OrderResultBottomToolbar",defaults:{minWidth:75},items:[{text:_("sign"),iconCls:"icoSing",disabled:!0,itemId:"OrderResultSignBtn"},"->",{text:_("reset"),action:"orderResultResetBtn"},{text:_("save"),action:"orderResultSaveBtn"}]}]},{xtype:"panel",itemId:"radiologyResultPanel",frame:!0,layout:{type:"border"},items:[{}],dockedItems:[{xtype:"toolbar",dock:"bottom",ui:"footer",itemId:"radiologyResultBottomToolbar",defaults:{minWidth:75},items:[{text:_("sign"),iconCls:"icoSing",disabled:!0,itemId:"radiologyResultSignBtn"},"->",{text:_("reset"),action:"radiologyResultResetBtn"},{text:_("save"),action:"radiologyResultSaveBtn"}]}]}]}]}),Ext.define("App.store.patient.PatientSocialHistory",{extend:"Ext.data.Store",requires:["App.model.patient.PatientSocialHistory"],model:"App.model.patient.PatientSocialHistory",groupField:"category_code_text"}),Ext.define("App.view.patient.SocialHistory",{extend:"Ext.grid.Panel",requires:["Ext.grid.plugin.RowEditing","Ext.grid.feature.Grouping","App.store.patient.PatientSocialHistory","App.ux.combo.Combo"],xtype:"patientsocialhistorypanel",itemId:"PatientSocialHistoryGrid",columnLines:!0,store:Ext.create("App.store.patient.PatientSocialHistory",{remoteFilter:!0}),plugins:[{ptype:"rowediting",errorSummary:!1}],features:[{ftype:"grouping",groupHeaderTpl:_("type")+": {name}"}],columns:[{text:_("type"),dataIndex:"category_code_text",width:250},{text:_("observation"),dataIndex:"observation",flex:1,itemId:"socialhistorypanelobservationcolumn",editor:{xtype:"textfield",allowBlank:!1}},{text:_("note"),dataIndex:"note",flex:1,editor:{xtype:"textfield"}},{xtype:"datecolumn",text:_("start"),dataIndex:"start_date",format:"Y-m-d",width:120,editor:{xtype:"datefield",format:"Y-m-d",allowBlank:!1}},{xtype:"datecolumn",text:_("end"),dataIndex:"end_date",format:"Y-m-d",width:120,editor:{xtype:"datefield",format:"Y-m-d"}}],tbar:[{xtype:"tbtext",text:_("social_history"),width:100},{xtype:"gaiaehr.combo",width:250,list:101,allowBlank:!1,action:"socialHistoryTypeCombo"},{iconCls:"icoAdd",disabled:!0,itemId:"encounterRecordAdd",action:"socialHistoryAddBtn"}]}),Ext.define("App.view.patient.Visits",{extend:"App.ux.RenderPanel",pageTitle:_("visits_history"),uses:["Ext.grid.Panel","Ext.ux.PreviewPlugin"],showRating:!0,initComponent:function(){var a=this;a.store=Ext.create("App.store.patient.Encounters",{remoteFilter:!0}),a.historyGrid=Ext.create("Ext.grid.Panel",{title:_("encounter_history"),store:a.store,columns:[{header:"eid",sortable:!1,dataIndex:"eid",hidden:!0},{width:150,header:_("date"),sortable:!0,dataIndex:"service_date",renderer:Ext.util.Format.dateRenderer("Y-m-d H:i:s")},{flex:1,header:_("reason"),sortable:!0,dataIndex:"brief_description"},{width:180,header:_("provider"),sortable:!1,dataIndex:"provider"},{width:120,header:_("facility"),sortable:!1,dataIndex:"facility"},{width:120,header:_("billing_facility"),sortable:!0,dataIndex:"billing_facility"},{width:45,header:_("close")+"?",sortable:!0,dataIndex:"close_date",renderer:a.openBool}],viewConfig:{itemId:"view",plugins:[{pluginId:"preview",ptype:"preview",bodyField:"brief_description",previewExpanded:!1}],listeners:{scope:a,itemclick:a.gridItemClick,itemdblclick:a.gridItemDblClick}},tbar:Ext.create("Ext.PagingToolbar",{store:a.store,displayInfo:!0,emptyMsg:"No Encounters Found",plugins:Ext.create("Ext.ux.SlidingPager",{}),items:[{iconCls:"",text:_("show_details"),enableToggle:!0,scope:a,toggleHandler:a.onDetailToggle},"-",{text:_("new_encounter"),scope:a,handler:a.createNewEncounter}]})}),a.pageBody=[a.historyGrid],a.callParent(arguments)},openBool:function(a){return null!==a?'<img src="resources/images/icons/yes.gif" />':'<img src="resources/images/icons/no.gif" />'},onDetailToggle:function(a,b){this.historyGrid.getComponent("view").getPlugin("preview").toggleExpanded(b)},gridItemClick:function(a){a.getPlugin("preview").toggleRowExpanded()},gridItemDblClick:function(a,b){app.openEncounter(b.data.eid)},createNewEncounter:function(){app.createNewEncounter()},onActive:function(a){this.checkIfCurrPatient()?(this.updateTitle(app.patient.name+" ("+_("encounters")+")"),this.store.clearFilter(!0),this.store.filter([{property:"pid",value:app.patient.pid}]),a(!0)):(a(!1),this.currPatientError())}}),Ext.define("App.view.patient.VisitCheckout",{extend:"App.ux.RenderPanel",id:"panelVisitCheckout",pageTitle:"Visit Checkout",showRating:!0,initComponent:function(){var a=this;a.VisitVoucherStore=Ext.create("App.store.account.Voucher",{remoteFilter:!0}),a.pageBody=Ext.create("Ext.panel.Panel",{itemId:"visitpayment",defaults:{bodyStyle:"padding:15px",bodyBorder:!0,labelWidth:110},layout:{type:"vbox",align:"stretch"},items:[{xtype:"container",flex:1,layout:{type:"hbox",align:"stretch"},items:[a.invoicePanel=Ext.widget("panel",{title:_("services_charges"),border:!0,frame:!0,bodyBorder:!0,bodyStyle:"background-color:#fff",margin:"5 5 0 5",flex:2,layout:{type:"vbox",align:"stretch"},items:[{xtype:"container",flex:1,autoScroll:!0,items:[a.invoiceGrid=Ext.widget("grid",{frame:!1,border:!1,enableColumnMove:!1,enableColumnHide:!1,sortableColumns:!1,columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/delete.png",tooltip:_("remove"),scope:a,handler:a.onRemoveCharge}]},{header:_("item"),dataIndex:"name",flex:1,editor:{xtype:"livecptsearch",allowBlank:!1}},{header:_("price"),width:80,dataIndex:"amountOriginal",align:"right",renderer:a.currencyRenderer},{header:_("charge"),width:80,dataIndex:"amount",align:"right",editor:{xtype:"textfield",allowBlank:!1},renderer:a.currencyRenderer}],plugins:[Ext.create("Ext.grid.plugin.CellEditing",{clicksToEdit:2})]}),{xtype:"container",border:!1,padding:1,height:200,items:[{xtype:"container",style:"float:right",layout:"anchor",width:150,items:[a.total=Ext.widget("mitos.currency",{fieldLabel:_("total"),labelWidth:70,anchor:"100%",labelAlign:"right",cls:"charges_total",margin:"2 0 1 0"}),a.paid=Ext.widget("mitos.currency",{fieldLabel:_("paid"),labelWidth:70,anchor:"100%",labelAlign:"right",margin:"1 0"}),a.balance=Ext.widget("mitos.currency",{fieldLabel:_("balance"),labelWidth:70,anchor:"100%",labelAlign:"right",cls:"charges_balance",margin:"2 0 1 0"})]}]}]},{xtype:"form",height:135,border:!1,items:[{xtype:"fieldset",layout:"column",margin:"5 10",title:_("payment"),items:[a.billingNotes=Ext.widget("textarea",{xtype:"textarea",anchor:"100%",name:"notes",columnWidth:.5,height:85,emptyText:_("additional_billing_notes")}),{xtype:"container",layout:"anchor",columnWidth:.5,margin:"0 0 0 15",items:[a.method=Ext.widget("mitos.paymentmethodcombo",{fieldLabel:_("payment_method"),labelWidth:100,name:"method",anchor:"100%"}),a.ref=Ext.widget("textfield",{fieldLabel:_("reference_#"),labelWidth:100,name:"reference",anchor:"100%"}),a.amount=Ext.widget("mitos.currency",{fieldLabel:_("amount"),xtype:"mitos.currency",labelWidth:100,name:"amount",anchor:"100%"})]}]}]}],buttons:["->",{text:_("save_and_print"),scope:a,action:"saveprint",handler:a.onInvoiceSave},{text:_("save"),scope:a,action:"save",handler:a.onInvoiceSave}],listeners:{scope:a,render:a.onInvoicePanelRender}}),a.docsGrid=Ext.widget("encounterdocumentsgrid",{title:_("documents"),frame:!0,margin:"5 5 0 0",flex:1})]},{xtype:"container",layout:"hbox",defaults:{height:170},items:[a.notesReminders=Ext.widget("form",{title:_("notes_and_reminders"),frame:!0,flex:2,action:"formnotes",bodyPadding:10,margin:"5 5 0 5",bodyBorder:!0,bodyStyle:"background-color:#fff",defaults:{anchor:"100%"},items:[{xtype:"displayfield",fieldLabel:_("message"),name:"message"},{xtype:"textfield",fieldLabel:_("note"),name:"new_note",action:"notes"},{xtype:"textfield",grow:!0,fieldLabel:_("reminders"),name:"new_reminder",action:"notes"}],buttons:[{text:_("reset"),scope:a,handler:a.resetNotes},"-",{text:_("save"),scope:a,handler:a.onCheckoutSaveNotes}]}),a.followUp=Ext.widget("form",{title:_("followup_information"),frame:!0,flex:1,margin:"5 5 5 0",bodyPadding:10,bodyBorder:!0,bodyStyle:"background-color:#fff",defaults:{labelWidth:110,anchor:"100%"},items:[{fieldLabel:_("time"),xtype:"textfield",name:"followup_time"},{fieldLabel:_("facility"),xtype:"activefacilitiescombo",name:"followup_facility"}],buttons:[{text:_("schedule_appointment"),scope:a,handler:a.scheduleAppointment}]})]}]}),a.callParent(arguments)},onInvoicePanelRender:function(a){var b=this;a.getHeader().add({xtype:"button",text:_("service"),iconCls:"icoAdd",margin:"0 5 0 0",scope:b,handler:b.onNewService},{xtype:"button",text:_("copay"),iconCls:"icoAdd",margin:"0 5 0 0",scope:b,handler:b.onAddCoPay})},onNewService:function(){this.invoiceGrid.getStore().add({code_text:" ",charge:"20.00",ins:!1})},onAddCoPay:function(){this.invoiceGrid.getStore().add({code_text:"Co-Pay",charge:"00.00",ins:!1})},onAddService:function(){this.query('[action="totalField"]')[0]},onRemoveCharge:function(a,b){var c=this,d=a.getStore(),e=d.getAt(b);d.remove(e),c.updateTotalBalance()},onInvoiceSave:function(a){for(var b=this,c={},d=("saveprint"==a.action,b.VisitVoucherStore.data.items),e=[],f=0;f<d.length;f++)e.push(d[f].data);c.pid=b.pid,c.eid=b.eid,c.lines=e,c.payment={amount:b.amount.getValue(),method:b.method.getValue(),notes:b.billingNotes.getValue(),ref:b.ref.getValue()},AccBilling.setVisitVoucher(c,function(){})},cancelPrint:function(a){var b=a.up("window");b.close()},resetReceiptForm:function(){for(var a=this.query('[action="receipt"]'),b=0;b<a.length;b++)a[b].reset()},resetNotes:function(){for(var a=this.query('[action="notes"]'),b=0;b<a.length;b++)a[b].reset()},onAddPaymentClick:function(){app.onPaymentEntryWindow()},currencyRenderer:function(a){return'<span style="float:right; padding-right:17px">'+app.currency+" "+a+"</span>"},onCheckoutSaveNotes:function(){var a,b,c=this,d=c.query('form[action="formnotes"]');a=d[0].getForm(),b=a.getFieldValues(),b.date=Ext.Date.format(new Date,"Y-m-d H:i:s"),b.pid=app.patient.pid,b.eid=c.eid,b.uid=app.user.id,b.type="administrative",a.isValid()&&Patient.addPatientNoteAndReminder(b,function(a,b){b.result.success?app.msg("Sweet!",_("note_and_reminder")):app.msg("Oops!",_("note_entry_error"))})},scheduleAppointment:function(a){var b,c=a.up("form").getForm(),d=c.findField("followup_time").getValue(),e=c.findField("followup_facility").getValue(),f=Ext.getCmp("app-calendar");switch(d){case"1 Day":b=Ext.Date.add(new Date,Ext.Date.DAY,1);break;case"2 Days":b=Ext.Date.add(new Date,Ext.Date.DAY,2);break;case"3 Days":b=Ext.Date.add(new Date,Ext.Date.DAY,3);break;case"1 Week":b=Ext.Date.add(new Date,Ext.Date.DAY,7);break;case"2 Weeks":b=Ext.Date.add(new Date,Ext.Date.DAY,14);break;case"3 Weeks":b=Ext.Date.add(new Date,Ext.Date.DAY,21);break;case"1 Month":b=Ext.Date.add(new Date,Ext.Date.MONTH,1);break;case"2 Months":b=Ext.Date.add(new Date,Ext.Date.MONTH,2);break;case"3 Months":b=Ext.Date.add(new Date,Ext.Date.MONTH,3);break;case"4 Months":b=Ext.Date.add(new Date,Ext.Date.MONTH,4);break;case"5 Months":b=Ext.Date.add(new Date,Ext.Date.MONTH,5);break;case"6 Months":b=Ext.Date.add(new Date,Ext.Date.MONTH,6);break;case"1 Year":b=Ext.Date.add(new Date,Ext.Date.YEAR,1);break;case"2 Year":b=Ext.Date.add(new Date,Ext.Date.YEAR,2);break;default:b=new Date}app.navigateTo("panelCalendar"),f.facility=e,f.setStartDate(b)},getVisitOtherInfo:function(){var a,b=this,c=[];a=b.query("form"),Encounter.getEncounterFollowUpInfoByEid(b.eid,function(b,c){a[1].getForm().setValues(c.result)}),Encounter.getEncounterMessageByEid(b.eid,function(b,c){a[0].getForm().setValues(c.result)});for(var d=0;d<a.length;d++)c.push(a[d].getForm().getFields().items)},calculatePercent:function(a,b){return 100*(a/b)},setVoucher:function(){var a=this;a.docsGrid.loadDocs(a.eid),a.getVisitOtherInfo(),a.VisitVoucherStore.load({filters:[{property:"encounterId",value:a.eid},{property:"type",value:"visit"}],callback:function(b){var c=b[0];c?c.voucherlines().load({callback:function(){}}):AccVoucher.getVisitCheckOutCharges({pid:a.pid,eid:a.eid},function(b,c){var d=c.result;if(d.length>0){var e=a.VisitVoucherStore.add({encounterId:a.eid,date:new Date,type:"visit"}),f=e[0].voucherlines();a.invoiceGrid.reconfigure(f);for(var g=0;g<d.length;g++)f.add(d[g]);a.paid.setValue(0),a.updateTotalBalance()}})}})},updateTotalBalance:function(){for(var me=this,amount=me.amount.getValue(),paid=me.paid.getValue(),records=me.invoiceGrid.getStore().data.items,form=me.invoicePanel.down("form"),total=0,balance,i=0;i<records.length;i++)total=eval(total)+eval(records[i].data.amount);me.total.setValue(total),balance=total-paid,me.balance.setValue(balance),me.setPaid(0==balance&&records.length>0)},setPaid:function(a){var b=this.invoicePanel.down("form");a?(b.addBodyCls("paid"),b.down("fieldset").setVisible(!1)):(b.removeBodyCls("paid"),b.down("fieldset").setVisible(!0))},setVisitPanel:function(){this.pid=app.patient.pid,this.eid=app.patient.eid,this.uid=app.user.id,this.updateTitle(app.patient.name+" - #"+app.patient.pid+" ("+_("visit_checkout")+")"),this.setVoucher()},onActive:function(a){var b=this;app.patient.pid&&app.patient.eid?(b.setVisitPanel(),a(!0)):(a(!1),b.currPatientError())}}),Ext.define("App.view.fees.Billing",{extend:"App.ux.RenderPanel",id:"panelBilling",pageTitle:_("billing"),uses:["Ext.grid.Panel"],pageLayout:"card",initComponent:function(){var a=this;a.paymentstatus=1,a.patient=null,a.pastDue=null,a.dateRange={start:null,limit:null},a.patientListStore=Ext.create("App.store.fees.Billing"),a.encountersGrid=Ext.create("Ext.grid.Panel",{store:a.patientListStore,selModel:Ext.create("Ext.selection.CheckboxModel",{listeners:{scope:a,selectionchange:a.onSelectionChanged}}),viewConfig:{stripeRows:!0},columns:[{header:_("service_date"),dataIndex:"service_date",width:200},{header:_("patient"),dataIndex:"patientName",width:200},{header:_("primary_provider"),dataIndex:"primaryProvider",width:200},{header:_("encounter_provider"),dataIndex:"encounterProvider",flex:1},{header:_("insurance"),dataIndex:"insurance",width:200},{header:_("billing_stage"),dataIndex:"billing_stage",renderer:a.stage,width:135}],tbar:[{xtype:"fieldcontainer",itemId:"fieldContainerPatientSearch",items:[{xtype:"displayfield",fieldLabel:_("patient_search")},{xtype:"patienlivetsearch",itemId:"patienlivetsearch",width:235,margin:"0 5 0 0"}]},{xtype:"fieldcontainer",itemId:"fieldContainerDateRange",items:[{xtype:"datefield",itemId:"datefrom",fieldLabel:_("from"),labelWidth:35,width:150,format:g("date_display_format")},{xtype:"datefield",itemId:"dateto",fieldLabel:_("to"),labelWidth:35,padding:"0 5 0 0",width:150,format:g("date_display_format")}]},{xtype:"fieldcontainer",itemId:"fieldContainerInsurance",items:[{xtype:"mitos.providerscombo",itemId:"provider",labelWidth:60,typeAhead:!0,padding:"0 5 0 5",fieldLabel:_("provider"),defaultValue:"All"},{xtype:"mitos.insurancepayertypecombo",itemId:"insurance",labelWidth:60,padding:"0 5 0 5",fieldLabel:_("insurance"),defaultValue:"All"}]},"-",{xtype:"fieldcontainer",itemId:"fieldContainerSearch",layout:"vbox",items:[{xtype:"button",width:80,margin:"0 0 3 0",text:_("search"),listeners:{scope:a,click:a.ReloadGrid}}]},"-",{xtype:"fieldcontainer",itemId:"fieldContainerGenerate1500",layout:"vbox",items:[{xtype:"button",width:170,margin:"0 0 3 0",text:_("generate_cms1500_pdf")},{xtype:"button",width:170,margin:"0 0 3 0",text:_("generate_cms1500_text")}]},"-",{xtype:"fieldcontainer",itemId:"fieldContainerGenerateANSI",layout:"vbox",items:[{xtype:"button",text:_("generate_x12")}]},"->",{xtype:"tbtext",text:_("past_due")+":"},{text:_("30+"),enableToggle:!0,action:30,toggleGroup:"pastduedates",enableKeyEvents:!0,scale:"large",listeners:{scope:a,click:a.onBtnClicked}},{text:_("60+"),enableToggle:!0,action:60,scale:"large",toggleGroup:"pastduedates",listeners:{scope:a,click:a.onBtnClicked}},{text:_("120+"),enableToggle:!0,action:120,scale:"large",toggleGroup:"pastduedates",listeners:{scope:a,click:a.onBtnClicked}},{text:_("180+"),enableToggle:!0,action:180,scale:"large",toggleGroup:"pastduedates",listeners:{scope:a,click:a.onBtnClicked}}],listeners:{scope:a,itemdblclick:a.rowDblClicked}}),a.encounterBillingDetails=Ext.create("Ext.panel.Panel",{defaultTitle:_("encounter_billing_details"),title:_("encounter_billing_details"),layout:"border",bodyStyle:"background-color:#fff",items:[Ext.create("Ext.container.Container",{region:"center",layout:"border",style:"background-color:#fff",items:[a.icdForm=Ext.create("Ext.form.Panel",{region:"north",border:!1,items:[{xtype:"fieldset",title:_("encounter_general_info"),margin:"5 5 0 5",items:[{xtype:"fieldcontainer",layout:{type:"hbox"},defaults:{margin:"0 10"},hideLabel:!0,items:[{xtype:"datefield",name:"service_date",fieldLabel:_("service_date"),labelAlign:"right",labelWidth:80,format:g("date_display_format")},{xtype:"activeinsurancescombo",name:"insurance",fieldLabel:_("insurance"),labelAlign:"right"},{xtype:"textfield",name:"facility",fieldLabel:_("facility"),labelAlign:"right",labelWidth:60,flex:1}]},{xtype:"fieldcontainer",layout:{type:"hbox"},defaults:{margin:"0 10"},hideLabel:!0,items:[{xtype:"datefield",name:"hosp_date",fieldLabel:_("hosp_date"),labelAlign:"right",labelWidth:80,format:g("date_display_format")},{xtype:"activeinsurancescombo",name:"sec_insurance",fieldLabel:_("sec_insurance"),labelAlign:"right"},{xtype:"mitos.providerscombo",name:"provider",fieldLabel:_("provider"),labelAlign:"right",labelWidth:60,flex:1}]},{xtype:"fieldcontainer",layout:{type:"hbox"},defaults:{margin:"0 10"},hideLabel:!0,items:[{xtype:"mitos.authorizationscombo",name:"authorization",fieldLabel:_("authorization"),labelAlign:"right",labelWidth:80},{xtype:"textfield",name:"sec_authorization",fieldLabel:_("sec_authorization"),labelAlign:"right"},{xtype:"textfield",name:"referal_by",fieldLabel:_("referal_by"),labelAlign:"right",labelWidth:60,flex:1}]}]},{xtype:"icdsfieldset",title:_("encounter_icd9"),margin:"5 5 0 5"}]}),a.cptPanel=Ext.create("App.view.patient.encounter.CurrentProceduralTerminology",{region:"center"})]}),a.progressNote=Ext.create("App.view.patient.ProgressNote",{title:_("encounter_progress_note"),region:"east",margin:5,bodyStyle:"padding:15px",width:500,autoScroll:!0,collapsible:!0,animCollapse:!0,collapsed:!1})],buttons:[{text:_("encounters"),scope:a,action:"encounters",tooltip:_("back_to_encounter_list"),handler:a.onBtnCancel},"->",{xtype:"tbtext",action:"page",text:"( 1 of 1 )"},{text:_("back"),scope:a,action:"back",iconCls:"icoArrowLeftSmall",tooltip:_("previous_encounter_details"),handler:a.onBtnBack},{text:_("save"),scope:a,action:"save",tooltip:_("save_billing_details"),handler:a.onBtnSave},{text:_("cancel"),scope:a,action:"cancel",tooltip:_("cancel_and_go_back_to_encounter_list"),handler:a.onBtnCancel},{text:_("next"),scope:a,action:"next",iconCls:"icoArrowRightSmall",iconAlign:"right",tooltip:_("next_encounter_details"),handler:a.onBtnNext}]}),a.pageBody=[a.encountersGrid,a.encounterBillingDetails],a.callParent(arguments)},stage:function(a){switch(say(a),a){case 0:return'<img src="resources/images/icons/stage0.png" />';case 1:return'<img src="resources/images/icons/stage1.png" />';case 2:return'<img src="resources/images/icons/stage2.png" />';case 3:return'<img src="resources/images/icons/stage3.png" />';case 4:return'<img src="resources/images/icons/stage4.png" />';default:return a}},onBtnClicked:function(a){var b=this.query('datefield[itemId="datefrom"]'),c=this.query('datefield[itemId="dateto"]');a.pressed?(b[0].reset(),c[0].reset(),this.pastDue=a.action):this.pastDue=0,this.ReloadGrid()},rowDblClicked:function(){this.goToEncounterBillingDetail()},goToEncounterBillingDetail:function(){this.getPageBody().getLayout().setActiveItem(1)},goToEncounterList:function(){this.getPageBody().getLayout().setActiveItem(0)},onSelectionChanged:function(a,b){if(b[0]){var c=this,d=c.encounterBillingDetails.defaultTitle,e=c.encounterBillingDetails.query('button[action="back"]'),f=c.encounterBillingDetails.query('button[action="next"]'),g=c.encounterBillingDetails.query('tbtext[action="page"]'),h=b[0].index;c.pid=b[0].data.pid,c.eid=b[0].data.eid,c.updateProgressNote(c.eid),c.encounterBillingDetails.setTitle(d+" ( "+b[0].data.patientName+" )"),c.getEncounterIcds(),c.cptPanel.encounterCptStoreLoad(c.pid,c.eid,function(){c.cptPanel.setDefaultQRCptCodes()}),g[0].setText("( "+_("page")+" "+(h+1)+" of "+a.store.data.length+" )"),f[0].setDisabled(h==a.store.data.length-1),e[0].setDisabled(0==h)}},onBtnCancel:function(){this.getPageBody().getLayout().setActiveItem(0)},onBtnBack:function(){var a=this.encountersGrid.getSelectionModel(),b=a.getLastSelected().index,c=b-1;a.select(c)},onBtnNext:function(){var a=this.encountersGrid.getSelectionModel(),b=a.getLastSelected().index,c=b+1;a.select(c)},onBtnSave:function(){var a=this,b=a.icdForm.getForm(),c=b.getValues();a.updateEncounterIcds(c),a.msg("Sweet!",_("encounter_billing_data_updated"))},getEncounterIcds:function(){},updateEncounterIcds:function(a){var b=this;a.eid=b.eid},updateProgressNote:function(a){var b=this;Encounter.getProgressNoteByEid(a,function(a,c){var d=c.result;b.progressNote.tpl.overwrite(b.progressNote.body,d)})},ReloadGrid:function(){var a=this.encountersGrid.getDockedItems('toolbar[dock="top"]')[0],b=a.getComponent("fieldContainerDateRange").getComponent("datefrom").getValue(),c=a.getComponent("fieldContainerDateRange").getComponent("dateto").getValue();(b||c)&&(this.pastDue=0),this.patientListStore.load({params:{datefrom:b,dateto:c,provider:a.getComponent("fieldContainerInsurance").getComponent("provider").getValue(),insurance:a.getComponent("fieldContainerInsurance").getComponent("insurance").getValue(),patient:a.getComponent("fieldContainerPatientSearch").getComponent("patienlivetsearch").getValue(),pastDue:this.pastDue}})},onActive:function(a){this.ReloadGrid(),a(!0)}}),Ext.define("App.view.fees.PaymentEntryWindow",{extend:"Ext.window.Window",title:_("add_new_payment"),closeAction:"hide",modal:!0,initComponent:function(){var a=this;a.items=[{xtype:"form",defaults:{margin:5},border:!1,height:163,width:747,items:[{xtype:"fieldcontainer",layout:"hbox",items:[{fieldLabel:_("paying_entity"),xtype:"mitos.payingentitycombo",name:"paying_entity",action:"new_payment",labelWidth:98,width:220},{xtype:"patienlivetsearch",fieldLabel:_("from"),hideLabel:!1,name:"payer_id",action:"new_payment",anchor:null,labelWidth:42,width:300,margin:"0 0 0 25"},{xtype:"textfield",fieldLabel:_("no"),action:"new_payment",name:"check_number",labelWidth:47,width:167,margin:"0 0 0 25"}]},{xtype:"fieldcontainer",layout:"hbox",items:[{fieldLabel:_("payment_method"),xtype:"mitos.paymentmethodcombo",action:"new_payment",labelWidth:98,name:"payment_method",width:220},{xtype:"mitos.billingfacilitiescombo",fieldLabel:_("pay_to"),action:"new_payment",labelWidth:42,name:"pay_to",width:300,margin:"0 0 0 25"},{xtype:"mitos.currency",fieldLabel:_("amount"),action:"new_payment",name:"amount",labelWidth:47,width:167,margin:"0 0 0 25",enableKeyEvents:!0}]},{fieldLabel:_("post_to_date"),xtype:"datefield",name:"post_to_date",action:"new_payment",format:g("date_display_format"),labelWidth:98,width:220},{fieldLabel:_("note"),xtype:"textareafield",grow:!0,action:"new_payment",name:"note",labelWidth:98,anchor:"100%"}]}],a.buttons=[{text:_("save"),scope:a,handler:a.onPaymentSave},"-",{text:_("reset"),scope:a,handler:a.resetNewPayment}],a.callParent(arguments)},onPaymentSave:function(){var a,b,c,d=this;a=d.down("form"),b=a.getForm(),c=b.getFieldValues(),c.date_created=Ext.Date.format(new Date,"Y-m-d H:i:s"),b.isValid()&&Fees.addPayment(c,function(a,c){c.result.success?(b.reset(),d.hide()):app.msg("Oops!",_("payment_entry_error"))})},resetNewPayment:function(){for(var a=this.query('[action="new_payment"]'),b=0;b<a.length;b++)a[b].reset()}}),Ext.define("App.view.fees.Payments",{extend:"App.ux.RenderPanel",id:"panelPayments",pageTitle:_("payments"),initComponent:function(){var a=this;a.encountersPaymentsStore=Ext.create("App.store.fees.EncountersPayments"),a.searchPanel=Ext.create("Ext.panel.Panel",{title:_("search"),layout:"border",items:[{xtype:"form",itemId:"searchPanelForm",height:145,region:"north",bodyPadding:10,bodyStyle:"background-color:transparent",margin:"0 0 5 0",items:[{xtype:"fieldcontainer",itemId:"fieldcontainerSearchItems",layout:"hbox",items:[{fieldLabel:_("paying_entity"),itemId:"fieldPayingEntityCombo",xtype:"mitos.payingentitycombo",labelWidth:95,width:230},{xtype:"patienlivetsearch",fieldLabel:_("from"),hideLabel:!1,itemId:"fieldPatient",name:"from",anchor:null,labelWidth:42,width:470,margin:"0 0 0 25"},{xtype:"textfield",fieldLabel:_("no"),itemId:"fieldPatientNo",name:"transaction_number",labelWidth:45,width:230,labelAlign:"right",margin:"0 0 0 25",fieldStyle:"text-align: right;"}]},{xtype:"fieldcontainer",layout:"hbox",itemId:"fieldcontainerFacility",items:[{xtype:"mitos.billingfacilitiescombo",itemId:"fieldFacility",fieldLabel:_("pay_to"),labelWidth:95,width:470}]},{xtype:"fieldcontainer",itemId:"fieldcontainerFromTo",layout:"hbox",items:[{fieldLabel:_("from"),itemId:"fieldFromDate",xtype:"datefield",format:g("date_display_format"),labelWidth:95,width:230},{fieldLabel:_("to"),xtype:"datefield",itemId:"fieldToDate",format:g("date_display_format"),margin:"0 0 0 25",labelWidth:42,width:230}]}],buttons:[{text:_("search"),handler:a.onSearchButton,scope:a},"-",{text:_("reset"),scope:a,handler:a.onFormResetButton}]},{xtype:"grid",region:"center",store:a.encountersPaymentsStore,columns:[{header:_("service_date")},{header:_("patient_name")},{header:_("insurance")},{header:_("billing_notes"),flex:1},{header:_("balance_due")}]}]}),a.detailPanel=Ext.create("Ext.panel.Panel",{title:_("detail"),layout:"border",items:[{xtype:"form",height:145,region:"north",bodyPadding:10,bodyStyle:"background-color:transparent",margin:"0 0 5 0",items:[{xtype:"fieldcontainer",layout:"hbox",items:[{fieldLabel:_("paying_entity"),xtype:"mitos.payingentitycombo",labelWidth:95,width:230},{xtype:"patienlivetsearch",fieldLabel:_("from"),hideLabel:!1,itemId:"patientFrom",name:"from",anchor:null,labelWidth:42,width:470,margin:"0 0 0 25"},{xtype:"textfield",fieldLabel:_("no"),name:"transaction_number",labelWidth:45,width:230,labelAlign:"right",margin:"0 0 0 25",fieldStyle:"text-align: right;"}]},{xtype:"fieldcontainer",layout:"hbox",items:[{fieldLabel:_("payment_method"),xtype:"mitos.paymentmethodcombo",labelWidth:95,width:230},{xtype:"mitos.billingfacilitiescombo",fieldLabel:_("pay_to"),labelWidth:42,width:470,margin:"0 0 0 25"},{xtype:"mitos.currency",fieldLabel:_("amount"),name:"amount",labelWidth:45,width:230,labelAlign:"right",margin:"0 0 0 25",enableKeyEvents:!0}]},{xtype:"fieldcontainer",layout:"hbox",items:[{fieldLabel:_("from"),xtype:"datefield",format:g("date_display_format"),labelWidth:95,width:230},{fieldLabel:_("to"),xtype:"datefield",format:g("date_display_format"),margin:"0 0 0 25",labelWidth:42,width:230}]}],buttons:[{text:_("save")},"-",{text:_("reset")},"->",{text:_("add_payment"),scope:a,handler:a.onAddPaymentClick}]},{xtype:"grid",region:"center",plugins:Ext.create("App.ux.grid.RowFormEditing",{autoCancel:!1,errorSummary:!1,clicksToEdit:1,enableRemove:!0,listeners:{scope:a,beforeedit:a.beforeCptEdit}}),columns:[{header:_("service_date")},{header:_("patient_name")},{header:_("insurance")},{header:_("billing_notes"),flex:1},{header:_("balance_due")}]}]}),a.tapPanel=Ext.create("Ext.tab.Panel",{layout:"fit",items:[a.searchPanel,a.detailPanel]}),a.pageBody=[a.tapPanel],a.callParent(arguments)
},onAddPaymentClick:function(){app.onPaymentEntryWindow()},beforeCptEdit:function(a,b){this.addCptFields(a.editor,b.record.data)},addCptFields:function(a){a.removeAll();for(var b=this.testData(),c=0;c<b.length;c++)a.add({xtype:"fieldcontainer",layout:"hbox",items:[{xtype:"textfield",width:100,name:"code",readOnly:!0,margin:"0 5 0 10"},{xtype:"textfield",name:"copay",readOnly:!0,width:400,margin:"0 5 0 5"},{xtype:"mitos.currency",name:"remaining",readOnly:!0,width:100,margin:"0 5 0 5"},{xtype:"mitos.currency",name:"allowed",readOnly:!0,width:100,margin:"0 5 0 5"},{xtype:"mitos.currency",name:"payment",readOnly:!0,width:100,margin:"0 5 0 5"},{xtype:"mitos.currency",name:"deductible",readOnly:!0,width:100,margin:"0 5 0 5"},{xtype:"mitos.currency",name:"takeback",readOnly:!0,width:100,margin:"0 5 0 5"},{xtype:"checkbox",name:"takeback",readOnly:!0,width:50,margin:"0 5 0 5"},{xtype:"textfield",name:"takeback",readOnly:!0,width:100,margin:"0 5 0 5"}]})},testData:function(){var a,b=[];for(floor=Math.floor(6*Math.random()+1),a=0;floor>a;a++)b.push({data1:Math.floor(Math.max(100*Math.random(),floor)),data2:Math.floor(Math.max(100*Math.random(),floor)),data3:Math.floor(Math.max(100*Math.random(),floor)),data4:Math.floor(Math.max(100*Math.random(),floor)),data5:Math.floor(Math.max(100*Math.random(),floor)),data6:Math.floor(Math.max(100*Math.random(),floor)),data7:Math.floor(Math.max(100*Math.random(),floor)),data8:Math.floor(Math.max(100*Math.random(),floor)),data9:Math.floor(Math.max(100*Math.random(),floor))});return b},onBtnClick:function(a){var b=this;"search"==a.action?b.forms.getLayout().setActiveItem(0):"details"==a.action?b.forms.getLayout().setActiveItem(1):"new"==a.action&&b.window.show()},onSearchButton:function(){var a=this.searchPanel.getComponent("searchPanelForm"),b=a.getComponent("fieldcontainerFromTo").getComponent("fieldFromDate").getValue(),c=a.getComponent("fieldcontainerFromTo").getComponent("fieldToDate").getValue();this.encountersPaymentsStore.load({params:{datefrom:b,dateto:c,payingEntityCombo:a.getComponent("fieldcontainerSearchItems").getComponent("fieldPayingEntityCombo").getValue(),patientSearch:a.getComponent("fieldcontainerSearchItems").getComponent("fieldPatient").getValue(),patientNo:a.getComponent("fieldcontainerSearchItems").getComponent("fieldPatientNo").getValue(),facility:a.getComponent("fieldcontainerFacility").getComponent("fieldFacility").getValue()}})},onFormResetButton:function(){alert("Hello there")},onActive:function(a){this.encountersPaymentsStore.load(),a(!0)}}),Ext.define("App.view.administration.practice.Facilities",{extend:"Ext.grid.Panel",xtype:"facilitiespanel",title:_("facilities"),initComponent:function(){var a=this;Ext.apply(a,{store:a.store=Ext.create("App.store.administration.Facility"),columns:[{text:_("name"),flex:1,sortable:!0,dataIndex:"name"},{text:_("phone"),width:100,sortable:!0,dataIndex:"phone"},{text:_("fax"),width:100,sortable:!0,dataIndex:"fax"},{text:_("city"),width:100,sortable:!0,dataIndex:"city"}],plugins:Ext.create("App.ux.grid.RowFormEditing",{autoCancel:!1,errorSummary:!1,clicksToEdit:1,items:[{xtype:"container",layout:"column",defaults:{xtype:"container",columnWidth:.5,padding:5,layout:"anchor",defaultType:"textfield"},items:[{defaults:{anchor:"100%"},items:[{fieldLabel:_("name"),name:"name",allowBlank:!1},{fieldLabel:_("phone"),name:"phone"},{fieldLabel:_("fax"),name:"fax"},{fieldLabel:_("street"),name:"address"},{fieldLabel:_("city"),name:"city"},{fieldLabel:_("state"),name:"state"},{fieldLabel:_("postal_code"),name:"postal_code"},{fieldLabel:_("country_code"),name:"country_code"},{xtype:"fieldcontainer",layout:"hbox",items:[{xtype:"textfield",fieldLabel:_("ssn"),name:"ssn",margin:"0 10 0 0"},{xtype:"textfield",fieldLabel:_("ein"),labelWidth:40,name:"ein"}]}]},{items:[{fieldLabel:_("billing_attn"),name:"attn",anchor:"100%"},{xtype:"mitos.poscodescombo",fieldLabel:_("pos_code"),name:"pos_code",anchor:"100%"},{fieldLabel:_("clia_number"),name:"clia",anchor:"100%"},{fieldLabel:_("npi"),name:"npi",anchor:"100%"},{fieldLabel:_("fda_number"),name:"fda",anchor:"100%"},{xtype:"checkbox",fieldLabel:_("active"),name:"active"},{xtype:"checkbox",fieldLabel:_("service_location"),name:"service_location"},{xtype:"checkbox",fieldLabel:_("billing_location"),name:"billing_location"},{xtype:"checkbox",fieldLabel:_("accepts_assignment"),name:"accepts_assignment"}]}]}]}),tbar:Ext.create("Ext.PagingToolbar",{pageSize:30,store:a.store,displayInfo:!0,plugins:Ext.create("Ext.ux.SlidingPager",{}),items:["-",{text:_("add_new_facility"),iconCls:"save",scope:a,handler:a.addFacility},"-",{text:_("show_active_facilities"),action:"active",scope:a,handler:a.filterFacilitiesby},"-",{text:_("show_inactive_facilities"),action:"inactive",scope:a,handler:a.filterFacilitiesby}]})}),a.callParent(arguments)},filterFacilitiesby:function(a){this.store.load({filters:[{property:"active",value:"active"==a.action?1:0}]})},addFacility:function(){var a=this,b=a,c=b.store;b.editingPlugin.cancelEdit(),c.insert(0,{active:1,service_location:1,billing_location:0,accepts_assignment:0}),b.editingPlugin.startEdit(0,0)}}),Ext.define("App.model.administration.Department",{extend:"Ext.data.Model",table:{name:"departments"},fields:[{name:"id",type:"int"},{name:"code",type:"string",len:5},{name:"title",type:"string",len:100},{name:"active",type:"bool"}],proxy:{type:"direct",api:{read:"Facilities.getDepartments",create:"Facilities.addDepartment",update:"Facilities.updateDepartment"},reader:{root:"data"}}}),Ext.define("App.store.administration.Departments",{extend:"Ext.data.Store",requires:["App.model.administration.Department"],model:"App.model.administration.Department"}),Ext.define("App.store.administration.Specialties",{model:"App.model.administration.Specialty",extend:"Ext.data.Store"}),Ext.define("App.store.administration.FacilityStructures",{extend:"Ext.data.TreeStore",requires:["App.model.administration.FacilityStructure"],model:"App.model.administration.FacilityStructure"}),Ext.define("App.view.administration.practice.FacilityConfig",{extend:"Ext.panel.Panel",requires:[],xtype:"facilityconfigpanel",title:_("facility_configuration"),itemId:"FacilityStructurePanel",layout:{type:"hbox",align:"stretch"},items:[{xtype:"container",margin:5,flex:1,layout:{type:"vbox",align:"stretch"},items:[{xtype:"grid",title:_("departments"),hideHeaders:!0,frame:!0,margin:"0 0 5 0",store:Ext.create("App.store.administration.Departments",{autoLoad:!0}),viewConfig:{plugins:{ptype:"gridviewdragdrop",dragGroup:"facilitygroup1",dropGroup:"facilitygroup2",onViewRender:function(a){var b,c=this;c.enableDrag&&(c.containerScroll&&(b=a.getEl()),c.dragZone=new Ext.view.DragZone({view:a,copy:!0,ddGroup:c.dragGroup||c.ddGroup,dragText:c.dragText,containerScroll:c.containerScroll,scrollEl:b})),c.enableDrop&&(c.dropZone=new Ext.grid.ViewDropZone({view:a,ddGroup:c.dropGroup||c.ddGroup}))}},listeners:{drop:function(a,b,c,d){say(a),say(b),say(c),say(d)}}},columns:[{text:"title",dataIndex:"title",flex:1}]},{xtype:"grid",title:_("specialties"),frame:!0,flex:1,store:this._sepecialtyStore=Ext.create("App.store.administration.Specialties",{autoLoad:!0}),viewConfig:{plugins:{ptype:"gridviewdragdrop",dragGroup:"facilitygroup1",dropGroup:"facilitygroup2"},listeners:{drop:function(a,b,c,d){say(a),say(b),say(c),say(d)}}},columns:[{width:200,text:_("title"),dataIndex:"title",sortable:!0,flex:1,editor:{xtype:"textfield"}},{text:_("taxonomy"),sortable:!0,dataIndex:"taxonomy",flex:1,editor:{xtype:"textfield"}},{text:_("modality"),sortable:!0,dataIndex:"modality",flex:1,editor:{xtype:"textfield"}},{text:_("active"),sortable:!0,dataIndex:"active",renderer:function(a){return app.boolRenderer(a)},editor:{xtype:"checkboxfield"}}],plugins:[{ptype:"rowediting",clicksToEdit:2}],tools:[{xtype:"button",text:_("specialty"),iconCls:"icoAdd",itemId:"specialitiesAddBtn"}],bbar:Ext.create("Ext.PagingToolbar",{pageSize:10,store:this._sepecialtyStore,displayInfo:!0,plugins:Ext.create("Ext.ux.SlidingPager",{})})}]},{xtype:"treepanel",title:_("facility_structure"),itemId:"FacilityStructureTreePanel",store:Ext.create("App.store.administration.FacilityStructures",{autoLoad:!0}),columnLines:!0,rootVisible:!1,hideHeaders:!0,frame:!0,margin:"5 5 5 0",flex:1,viewConfig:{plugins:{ptype:"treeviewdragdrop",dragGroup:"facilitygroup1",dropGroup:"facilitygroup1",expandDelay:0,allowParentInsert:!0,allowContainerDrops:!0,onViewRender:function(a){var b,c=this;c.enableDrag&&(c.containerScroll&&(b=a.getEl()),c.dragZone=new Ext.tree.ViewDragZone({view:a,ddGroup:c.dragGroup||c.ddGroup,dragText:c.dragText,displayField:c.displayField,repairHighlightColor:c.nodeHighlightColor,repairHighlight:c.nodeHighlightOnRepair,scrollEl:b})),c.enableDrop&&(c.dropZone=new Ext.tree.ViewDropZone({view:a,ddGroup:c.dropGroup||c.ddGroup,allowContainerDrops:c.allowContainerDrops,appendOnly:c.appendOnly,allowParentInserts:c.allowParentInserts,expandDelay:c.expandDelay,dropHighlightColor:c.nodeHighlightColor,dropHighlight:c.nodeHighlightOnDrop,sortOnDrop:c.sortOnDrop,containerScroll:c.containerScroll,handleNodeDrop:function(a,b,c){var d,e,f,g,h,i,j,k,l=this,m=l.view,n=b?b.parentNode:m.panel.getRootNode(),o=m.getStore().treeStore.model,p=a.records[0]instanceof App.model.administration.Department,q=a.records[0]instanceof App.model.administration.Specialty,r=[];if(p||q){for(e=0,f=a.records.length;f>e;e++)Ext.Array.push(r,new o({id:"",fid:1,foreign_id:a.records[e].data.id,foreign_type:p?"D":"S",text:a.records[e].data.title,active:!1}));a.records=r}if(a.copy)for(d=a.records,a.records=[],e=0,f=d.length;f>e;e++)g=d[e],a.records.push(g.isNode?g.copy(void 0,!0):new o(g.data,g.getId()));l.cancelExpand(),"before"==c?(h=n.insertBefore,i=[null,b],b=n):"after"==c?(b.nextSibling?(h=n.insertBefore,i=[null,b.nextSibling]):(h=n.appendChild,i=[null]),b=n):(b.isExpanded()||b.isLoading()||(j=!0),h=b.appendChild,i=[null]),k=function(){var c,d;for(Ext.suspendLayouts(),m.getSelectionModel().clearSelections(),e=0,f=a.records.length;f>e;e++)g=a.records[e],g.isNode||(g=g.isModel?new o(g.data,g.getId()):new o(g)),g.save({callback:function(a,b){a.set({id:b.response.result.id}),a.save()}}),a.records[e]=g,i[0]=g,h.apply(b,i);if(l.sortOnDrop&&b.sort(b.getOwnerTree().store.generateComparator()),Ext.resumeLayouts(!0),Ext.enableFx&&l.dropHighlight)for(c=l.dropHighlightColor,e=0;f>e;e++)d=m.getNode(a.records[e]),d&&Ext.fly(d).highlight(c)},j?b.expand(!1,k):b.isLoading()?b.on({expand:k,delay:1,single:!0}):k()}}))}}},columns:[{xtype:"treecolumn",text:"Config",flex:2,sortable:!0,dataIndex:"text"},{xtype:"actioncolumn",width:20,icon:"resources/images/icons/delete.png",tooltip:_("delete"),handler:function(a,b,c,d,e,f){return f.childNodes.length>0?void app.msg(_("oops"),_("please_remove_child_records_first"),!0):void Ext.Msg.show({title:_("wait"),msg:_("delete_this_record"),buttons:Ext.Msg.YESNO,icon:Ext.Msg.QUESTION,fn:function(a){"yes"==a&&f.destroy()}})},getClass:function(a,b,c){return"f"!=c.data.id[0]?"x-grid-center-icon":"x-hide-display"}}]}]}),Ext.define("App.store.administration.InsuranceCompanies",{extend:"Ext.data.Store",model:"App.model.administration.InsuranceCompany"}),Ext.define("App.view.administration.practice.Insurance",{extend:"Ext.grid.Panel",requires:["App.ux.combo.Titles","App.ux.grid.RowFormEditing","App.ux.combo.TransmitMethod"],xtype:"insurancecompaniespanel",title:_("insurance_companies"),store:this._adminInsuranceCmonpanySotrie=Ext.create("App.store.administration.InsuranceCompanies"),columnLines:!0,plugins:[{ptype:"rowformediting",autoCancel:!1,errorSummary:!1,items:[{xtype:"container",layout:"hbox",itemId:"InsuranceCompanyFormContainer",items:[{xtype:"fieldset",title:_("contact_info"),layout:"hbox",margin:"0 10 0 0",items:[{xtype:"container",margin:"0 10 0 0",layout:"anchor",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",fieldLabel:_("name"),name:"name",allowBlank:!1,width:385},{xtype:"textfield",fieldLabel:_("attn"),name:"attn",width:385},{xtype:"textfield",fieldLabel:_("address"),name:"address1",width:385},{xtype:"textfield",fieldLabel:_("address_cont"),name:"address2",width:385},{xtype:"fieldcontainer",margin:"0 0 10 105",layout:"hbox",items:[{xtype:"textfield",width:150,name:"city"},{xtype:"textfield",width:50,name:"state"},{xtype:"textfield",width:75,name:"zip_code"}]}]},{xtype:"container",width:300,layout:"anchor",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",fieldLabel:_("phone_number"),name:"phone_number"},{xtype:"textfield",fieldLabel:_("fax_number"),name:"fax_number"},{xtype:"checkbox",fieldLabel:_("active"),name:"active"}]}]}]}]}],columns:[{width:50,sortable:!0,dataIndex:"id"},{header:_("insurance_name"),width:200,sortable:!0,dataIndex:"name"},{header:_("attn"),width:200,sortable:!0,dataIndex:"attn"},{header:_("address"),flex:1,sortable:!0,dataIndex:"address_full"},{header:_("phone"),width:120,sortable:!0,dataIndex:"phone1"},{header:_("phone"),width:120,sortable:!0,dataIndex:"phone2"},{header:_("fax"),width:120,sortable:!0,dataIndex:"fax"},{header:_("active"),width:55,sortable:!0,dataIndex:"active",renderer:function(a){return app.boolRenderer(a)}}],tbar:Ext.create("Ext.PagingToolbar",{pageSize:30,store:this._adminInsuranceCmonpanySotrie,displayInfo:!0,plugins:Ext.create("Ext.ux.SlidingPager",{}),items:["-",{text:_("insurance_company"),iconCls:"icoAdd",action:"insurance",itemId:"addBtn"}]})}),Ext.define("App.store.administration.Laboratories",{model:"App.model.administration.Laboratories",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:Practice.getLaboratories,create:Practice.addLaboratory,update:Practice.updateLaboratory}}}),Ext.define("App.view.administration.practice.Laboratories",{extend:"Ext.grid.Panel",requires:["App.ux.combo.Titles","App.ux.grid.RowFormEditing","App.ux.combo.TransmitMethod"],xtype:"laboratoriespanel",title:_("laboratories"),store:Ext.create("App.store.administration.Laboratories"),border:!1,frame:!1,columnLines:!0,plugins:[{ptype:"rowformediting",autoCancel:!1,errorSummary:!1,clicksToEdit:1,items:[{xtype:"container",layout:"hbox",width:900,items:[{xtype:"container",width:450,layout:"anchor",items:[{xtype:"textfield",fieldLabel:_("name"),name:"name",allowBlank:!1,width:385},{xtype:"textfield",fieldLabel:_("address"),name:"line1",width:385},{xtype:"textfield",fieldLabel:_("address_cont"),name:"line2",width:385},{xtype:"fieldcontainer",layout:"hbox",defaults:{hideLabel:!0},items:[{xtype:"displayfield",width:105,value:_("city_state_zip")},{xtype:"textfield",width:150,name:"city"},{xtype:"displayfield",width:5,value:","},{xtype:"textfield",width:50,name:"state"},{xtype:"textfield",width:75,name:"zip"}]}]},{xtype:"container",width:300,layout:"anchor",items:[{xtype:"textfield",fieldLabel:_("email"),name:"email",width:275},{xtype:"fieldcontainer",layout:"hbox",defaults:{hideLabel:!0},items:[{xtype:"displayfield",width:100,value:_("phone")},{xtype:"textfield",width:40,name:"phone_area_code"},{xtype:"displayfield",width:10,value:"-"},{xtype:"textfield",width:50,name:"phone_prefix"},{xtype:"displayfield",width:10,value:"-"},{xtype:"textfield",width:70,name:"phone_number"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{hideLabel:!0},items:[{xtype:"displayfield",width:100,value:_("fax")},{xtype:"textfield",width:40,name:"fax_area_code"},{xtype:"displayfield",width:10,value:"-"},{xtype:"textfield",width:50,name:"fax_prefix"},{xtype:"displayfield",width:10,value:"-"},{xtype:"textfield",width:70,name:"fax_number"}]},{xtype:"transmitmethodcombo",fieldLabel:_("default_method"),labelWidth:100,width:275}]},{xtype:"checkbox",fieldLabel:_("active"),labelWidth:60,name:"active"}]}]}],columns:[{header:_("pharmacy_name"),width:150,sortable:!0,dataIndex:"name"},{header:_("address"),flex:1,sortable:!0,dataIndex:"address_full"},{header:_("phone"),width:120,sortable:!0,dataIndex:"phone_full"},{header:_("fax"),width:120,sortable:!0,dataIndex:"fax_full"},{header:_("default_method"),flex:1,sortable:!0,dataIndex:"transmit_method",renderer:function(a){return"1"==a?"Print":"2"==a?"Email":"3"==a?"Email":a}},{header:_("active"),width:55,sortable:!0,dataIndex:"active",renderer:function(a){return app.boolRenderer(a)}}],tbar:["->",{text:_("laboratory"),iconCls:"icoAdd",action:"laboratory",itemId:"addBtn"}]}),Ext.define("App.store.administration.Pharmacies",{model:"App.model.administration.Pharmacies",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:"Practice.getPharmacies",create:"Practice.addPharmacy",update:"Practice.updatePharmacy"}}}),Ext.define("App.view.administration.practice.Pharmacies",{extend:"Ext.grid.Panel",requires:["App.ux.combo.Titles","App.ux.grid.RowFormEditing","App.ux.combo.TransmitMethod"],xtype:"pharmaciespanel",title:_("pharmacies"),store:Ext.create("App.store.administration.Pharmacies"),border:!1,frame:!1,columnLines:!0,plugins:[{ptype:"rowformediting",autoCancel:!1,errorSummary:!1,clicksToEdit:1,items:[{xtype:"container",layout:"hbox",items:[{xtype:"container",width:400,layout:"anchor",items:[{xtype:"textfield",fieldLabel:_("name"),name:"name",allowBlank:!0,width:385},{xtype:"textfield",fieldLabel:_("address"),name:"address",width:385},{xtype:"textfield",fieldLabel:_("address_cont"),name:"address_cont",width:385},{xtype:"fieldcontainer",layout:"hbox",defaults:{hideLabel:!0},items:[{xtype:"displayfield",width:105,value:_("city_state_zip")},{xtype:"textfield",width:150,name:"city"},{xtype:"displayfield",width:5,value:","},{xtype:"textfield",width:50,name:"state"},{xtype:"textfield",width:75,name:"zip"}]}]},{xtype:"container",width:300,layout:"anchor",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{hideLabel:!0},items:[{xtype:"displayfield",width:100,value:_("phone")},{xtype:"textfield",width:40,name:"phone_area_code"},{xtype:"displayfield",width:10,value:"-"},{xtype:"textfield",width:50,name:"phone_prefix"},{xtype:"displayfield",width:10,value:"-"},{xtype:"textfield",width:70,name:"phone_number"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{hideLabel:!0},items:[{xtype:"displayfield",width:100,value:_("fax")},{xtype:"textfield",width:40,name:"fax_area_code"},{xtype:"displayfield",width:10,value:"-"},{xtype:"textfield",width:50,name:"fax_prefix"},{xtype:"displayfield",width:10,value:"-"},{xtype:"textfield",width:70,name:"fax_number"}]},{xtype:"textfield",fieldLabel:_("email"),name:"email",width:385},{xtype:"transmitmethodcombo",fieldLabel:_("default_method"),labelWidth:100,width:275}]},{xtype:"checkbox",fieldLabel:_("active"),labelWidth:60,margin:"0 0 0 10",name:"active"}]}]}],columns:[{header:_("pharmacy_name"),width:150,sortable:!0,dataIndex:"name"},{header:_("address"),flex:1,sortable:!0,dataIndex:"address_full"},{header:_("phone"),width:120,sortable:!0,dataIndex:"phone_full"},{header:_("fax"),width:120,sortable:!0,dataIndex:"fax_full"},{header:_("default_method"),flex:1,sortable:!0,dataIndex:"transmit_method",renderer:function(a){return"1"==a?"Print":"2"==a?"Email":"3"==a?"Email":a}},{header:_("active"),width:55,sortable:!0,dataIndex:"active",renderer:function(a){return app.boolRenderer(a)}}],tbar:["->",{text:_("pharmacy"),iconCls:"icoAdd",action:"pharmacy",itemId:"addBtn"}]}),Ext.define("App.model.administration.InsuranceNumber",{extend:"Ext.data.Model",table:{name:"insurance_numbers",comment:"Insurance Numbers"},fields:[{name:"id",type:"int"},{name:"provider_id",type:"int"},{name:"insurance_company_id",type:"int"},{name:"provider_id_text",type:"string",store:!1},{name:"insurance_company_id_text",type:"string",store:!1},{name:"provider_number",type:"string",len:20},{name:"rendering_provider_number",type:"string",len:20},{name:"group_number",type:"string",len:20},{name:"provider_number_type",type:"string",len:4},{name:"rendering_provider_number_type",type:"string",len:4}],proxy:{type:"direct",api:{read:"Insurance.getInsuranceNumbers",create:"Insurance.addInsuranceNumber",update:"Insurance.updateInsuranceNumber"}}}),Ext.define("App.store.administration.InsuranceNumbers",{extend:"Ext.data.Store",model:"App.model.administration.InsuranceNumber"}),Ext.define("App.view.administration.practice.ProviderNumbers",{extend:"Ext.grid.Panel",requires:["App.ux.combo.Titles","App.ux.grid.RowFormEditing","App.ux.combo.TransmitMethod"],xtype:"providersnumberspanel",title:_("provider_numbers"),store:Ext.create("App.store.administration.InsuranceNumbers"),border:!1,frame:!1,columnLines:!0,features:[{ftype:"grouping",groupHeaderTpl:"{name}"}],plugins:[{ptype:"rowformediting",autoCancel:!1,errorSummary:!1,clicksToEdit:1,items:[{xtype:"container",layout:"column",items:[{xtype:"container",defaults:{labelWidth:140},margin:"0 10 0 0",items:[{xtype:"textfield",fieldLabel:_("provider"),name:"provider_id"},{xtype:"textfield",fieldLabel:_("provider_number"),name:"provider_number"},{xtype:"textfield",fieldLabel:_("provider_number_type"),name:"provider_number_type"}]},{xtype:"container",defaults:{labelWidth:140},margin:"0 10 0 0",items:[{xtype:"textfield",fieldLabel:_("insurance_company"),name:"insurance_company_id"},{xtype:"textfield",fieldLabel:_("rendering_number"),name:"rendering_provider_number"},{xtype:"textfield",fieldLabel:_("rendering_number_type"),name:"rendering_provider_number_type"}]},{xtype:"container",defaults:{labelWidth:140},items:[{xtype:"textfield",fieldLabel:_("group_number"),name:"group_number"}]}]}]}],columns:[{text:_("provider"),flex:1,sortable:!0,dataIndex:"provider_id_text"},{text:_("insurance"),flex:1,sortable:!0,dataIndex:"insurance_company_id_text"},{text:_("provider_number"),flex:1,sortable:!0,dataIndex:"provider_number"},{text:_("rendering_number"),flex:1,sortable:!0,dataIndex:"rendering_number"},{text:_("group_number"),flex:1,sortable:!0,dataIndex:"phone"}],tbar:[_("group_by"),{text:_("provider"),enableToggle:!0,toggleGroup:"insurance_number_group",action:"provider_id_text"},{text:_("insurance"),enableToggle:!0,toggleGroup:"insurance_number_group",action:"insurance_company_id_text"},"-","->",{text:_("insurance_number"),iconCls:"icoAdd",action:"insurance",itemId:"addBtn"}]}),Ext.define("App.view.administration.practice.Specialties",{extend:"Ext.grid.Panel",xtype:"specialtiespanel",requires:["Ext.grid.plugin.RowEditing","Ext.ux.SlidingPager"],title:_("specialties"),initComponent:function(){var a=this;Ext.apply(a,{store:a.store=Ext.create("App.store.administration.Specialties",{autoSync:!1}),columns:[{width:200,text:_("title"),dataIndex:"title",sortable:!0,flex:1,editor:{xtype:"textfield"}},{text:_("taxonomy"),sortable:!0,dataIndex:"taxonomy",flex:1,editor:{xtype:"textfield"}},{text:_("modality"),sortable:!0,dataIndex:"modality",flex:1,editor:{xtype:"textfield"}},{text:_("active"),sortable:!0,dataIndex:"active",renderer:a.boolRenderer,editor:{xtype:"checkboxfield"}}],plugins:[{ptype:"rowediting",clicksToEdit:1}],tbar:["->",{xtype:"button",text:_("specialty"),iconCls:"icoAdd",itemId:"specialitiesAddBtn"}],bbar:Ext.create("Ext.PagingToolbar",{pageSize:10,store:a.store,displayInfo:!0,plugins:Ext.create("Ext.ux.SlidingPager",{})})}),a.callParent(arguments)}}),Ext.define("App.view.administration.practice.ReferringProviders",{extend:"Ext.grid.Panel",xtype:"referringproviderspanel",requires:[],title:_("referring_providers"),initComponent:function(){var a=this;Ext.apply(a,{store:Ext.create("App.store.administration.ReferringProviders",{autoSync:!1}),columns:[{width:200,text:_("name"),sortable:!0,renderer:function(a,b,c){return c.data.title+" "+c.data.fname+" "+c.data.mname+" "+c.data.lname}},{flex:1,text:_("email"),sortable:!0,dataIndex:"email"},{flex:1,text:_("phone_number"),sortable:!0,dataIndex:"phone_number"},{flex:1,text:_("cell_number"),sortable:!0,dataIndex:"cel_number"},{flex:1,text:_("aditional_info"),sortable:!0,dataIndex:"notes"},{text:_("active"),sortable:!0,dataIndex:"active",renderer:a.boolRenderer}],plugins:[a.formEditing=Ext.create("App.ux.grid.RowFormEditing",{clicksToEdit:1,items:[{xtype:"fieldcontainer",fieldLabel:_("first_middle_last"),labelWidth:130,labelAlign:"right",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}},msgTarget:"under",items:[{width:50,xtype:"mitos.titlescombo",name:"title"},{width:150,xtype:"textfield",name:"fname",allowBlank:!1},{width:100,xtype:"textfield",name:"mname"},{width:150,xtype:"textfield",name:"lname",allowBlank:!1}]},{xtype:"fieldcontainer",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}},items:[{xtype:"textfield",name:"email",fieldLabel:_("email"),labelWidth:130,labelAlign:"right"},{xtype:"textfield",fieldLabel:_("taxonomy"),labelWidth:130,labelAlign:"right",name:"taxonomy"}]},{xtype:"fieldcontainer",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}},items:[{xtype:"textfield",fieldLabel:_("upin"),labelWidth:130,labelAlign:"right",name:"upin"},{xtype:"textfield",fieldLabel:_("npi"),labelWidth:130,labelAlign:"right",name:"npi"}]},{xtype:"fieldcontainer",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}},items:[{xtype:"textfield",fieldLabel:_("lic"),labelWidth:130,labelAlign:"right",name:"lic"},{xtype:"textfield",fieldLabel:_("ssn"),labelWidth:130,labelAlign:"right",name:"ssn"}]},{xtype:"fieldcontainer",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}},items:[{xtype:"textfield",fieldLabel:_("phone_number"),labelWidth:130,labelAlign:"right",name:"phone_number"},{xtype:"textfield",fieldLabel:_("fax_number"),labelWidth:130,labelAlign:"right",name:"fax_number"}]},{xtype:"fieldcontainer",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}},items:[{xtype:"textfield",fieldLabel:_("cell_number"),labelWidth:130,labelAlign:"right",name:"cel_number"},{xtype:"checkbox",fieldLabel:_("active"),labelWidth:130,labelAlign:"right",name:"active"}]},{height:50,xtype:"textareafield",name:"notes",width:600,fieldLabel:_("notes"),labelWidth:130,labelAlign:"right",emptyText:_("additional_info")}]})],dockedItems:[{xtype:"toolbar",dock:"top",items:["->",{xtype:"button",text:_("referring_provider"),iconCls:"icoAdd",itemId:"referringProviderAddBtn"}]}]}),a.callParent(arguments)}}),Ext.define("App.view.administration.Applications",{extend:"App.ux.RenderPanel",pageTitle:_("applications"),initComponent:function(){var a=this;a.store=Ext.create("App.store.administration.Applications"),a.grid=Ext.create("Ext.grid.Panel",{store:a.store,plugins:[a.edditing=Ext.create("Ext.grid.plugin.RowEditing",{clicksToEdit:2,errorSummary:!1})],columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/cross.png",tooltip:"Remove",scope:a,handler:a.removeApplication}]},{text:_("name"),flex:1,sortable:!0,dataIndex:"app_name",editor:{xtype:"textfield",allowBlank:!1}},{text:_("private_key"),flex:1,sortable:!0,dataIndex:"pvt_key"},{text:_("active?"),width:50,sortable:!0,renderer:a.boolRenderer,dataIndex:"active",editor:{xtype:"checkbox"}}],tbar:[{text:_("add"),iconCls:"icoAdd",scope:a,handler:a.addApplication}]}),a.pageBody=[a.grid],a.callParent(arguments)},removeApplication:function(a,b){var c=this,d=c.store.getAt(b);Ext.Msg.show({title:"Wait!",msg:'This action is final. Are you sure you want to remove <span style="font-weight: bold">"'+d.data.app_name+'"</span>?',buttons:Ext.Msg.YESNO,icon:Ext.Msg.WARNING,fn:function(a){"yes"==a&&(c.edditing.cancelEdit(),c.store.remove(d),c.store.sync({callback:function(){c.msg("Sweet!",_("record_removed"))}}))}})},addApplication:function(){var a=this;a.edditing.cancelEdit(),a.store.insert(0,{active:1}),a.edditing.startEdit(0,0)},onActive:function(a){this.store.load(),a(!0)}}),Ext.define("App.view.administration.Globals",{extend:"App.ux.RenderPanel",id:"panelGlobals",pageTitle:"GaiaEHR "+_("global_settings"),uses:["App.ux.form.fields.Checkbox"],initComponent:function(){var a=this;a.store=Ext.create("App.store.administration.Globals",{groupField:"gl_category",remoteSort:!1,autoSync:!0,pageSize:500,sorters:[{sorterFn:function(a,b){var c=function(a){var b=a.get("gl_category");return"General"===b?1:"Locale"===b?2:"Clinical"===b?3:"Email"===b?4:"Audit"===b?5:"Fax/Scanner"===b?6:7},d=c(a),e=c(b);return d===e?0:e>d?-1:1}}]}),a.default_top_pane_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:_("dashboard"),option_id:"app/dashboard/dashboard.ejs.php"},{title:_("calendar"),option_id:"app/calendar/calendar.ejs.php"},{title:_("messages"),option_id:"app/messages/messages.ejs.php"}]}),a.fullname_store=Ext.create("Ext.data.Store",{fields:["format","option_id"],data:[{format:_("last_first_middle"),option_id:"0"},{format:_("first_middle_last"),option_id:"1"}]}),a.main_navigation_menu_left_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:_("main_navigation_menu_left"),option_id:"west"},{title:_("main_navigation_menu_right"),option_id:"east"}]}),a.css_header_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:_("grey_default"),option_id:"ext-all-gray.css"},{title:_("blue"),option_id:"ext-all.css"},{title:_("access"),option_id:"ext-all-access.css"}]}),a.full_new_patient_form_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:_("oldstyle_static_form_without_search_or_duplication_check"),option_id:"0"},{title:_("all_demographics_fields_with_search_and_duplication_check"),option_id:"1"},{title:_("mandatory_or_specified_fields_only_search_and_dup_check"),option_id:"2"},{title:_("mandatory_or_specified_fields_only_dup_check_no_search"),option_id:"3"}]}),a.patient_search_results_style_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:_("encounter_statistics"),option_id:"0"},{title:_("mandatory_and_specified_fields"),option_id:"1"}]}),a.units_of_measurement_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:_("show_both_us_and_metric_main_unit_is_us"),option_id:"1"},{title:_("show_both_us_and_metric_main_unit_is_metric"),option_id:"2"},{title:_("show_us_only"),option_id:"3"},{title:_("show_metric_only"),option_id:"4"}]}),a.date_display_format_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:_("yyyy_mm_dd"),option_id:"Y-m-d"},{title:_("mm_dd_yyyy"),option_id:"m/d/Y"},{title:_("dd_mm_yyyy"),option_id:"d/m/Y"}]}),a.time_display_format_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:_("24_hr"),option_id:"H:i"},{title:i18n["12 hr"],option_id:"g:i a"}]}),a.currency_decimals_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:_("0"),option_id:"0"},{title:_("1"),option_id:"1"},{title:_("2"),option_id:"2"}]}),a.currency_dec_point_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:_("comma"),option_id:","},{title:_("period"),option_id:"."}]}),a.currency_thousands_sep_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:_("comma"),option_id:","},{title:_("period"),option_id:"."},{title:_("space"),option_id:" "},{title:_("none"),option_id:""}]}),a.EMAIL_METHOD_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:"PHPMAIL",option_id:"PHPMAIL"},{title:"SENDMAIL",option_id:"SENDMAIL"},{title:"SMTP",option_id:"SMTP"}]}),a.state_country_data_type_store=Ext.create("Ext.data.Store",{fields:["title","option_id"],data:[{title:_("text_field"),option_id:"2"},{title:_("single_selection_list"),option_id:"1"},{title:_("single_selection_list_with_ability_to_add_to_the_list"),option_id:"26"}]}),a.dummyStore=new Ext.data.ArrayStore({fields:["title","option_id"],data:[[_("option_1"),"Option 1"],[_("option_2"),"Option 2"],[_("option_3"),"Option 3"],[_("option_5"),"Option 5"],[_("option_6"),"Option 6"],[_("option_7"),"Option 7"]]}),a.grid=Ext.create("Ext.grid.Panel",{store:a.store,features:[{ftype:"grouping",groupHeaderTpl:_("category")+": {name}"}],plugins:[{ptype:"cellediting"}],columns:[{text:_("title"),dataIndex:"gl_name",flex:1},{text:_("value"),dataIndex:"gl_value",flex:1,editor:{xtype:"textfield"}},{text:_("category"),dataIndex:"gl_category"}]}),a.pageBody=[a.grid],a.callParent(arguments)},onGloblasSave:function(a,b){var c=(a.getRecord(),a.getValues());Globals.updateGlobals(c,function(){b.load()}),this.msg(_("new_global_configuration_saved"),_("refresh_the_application"))
},onActive:function(a){this.store.load(),a(!0)}}),Ext.define("App.view.administration.Lists",{extend:"App.ux.RenderPanel",id:"panelLists",pageTitle:_("select_list_options"),pageLayout:"border",uses:["App.ux.form.Panel","Ext.grid.plugin.RowEditing"],initComponent:function(){var a=this;a.listsStore=Ext.create("App.store.administration.Lists"),a.optionsStore=Ext.create("App.store.administration.ListOptions",{remoteFilter:!0}),a.optionsRowEditing=Ext.create("Ext.grid.plugin.RowEditing",{}),a.listsRowEditing=Ext.create("Ext.grid.plugin.RowEditing",{}),a.listsGrid=Ext.create("Ext.grid.Panel",{store:a.listsStore,itemId:"listsGrid",plugins:[a.listsRowEditing],width:320,margin:"0 2 0 0",region:"west",columns:[{width:30,dataIndex:"id"},{text:_("select_lists"),flex:1,sortable:!1,dataIndex:"title",editor:{xtype:"textfield",allowBlank:!1}},{text:_("active"),width:55,sortable:!1,dataIndex:"active",renderer:a.boolRenderer,editor:{xtype:"checkbox",padding:"0 0 0 18"}},{text:_("in_use"),width:55,sortable:!1,dataIndex:"in_use",renderer:a.boolRenderer}],listeners:{scope:a,select:a.onListsGridClick},dockedItems:[{xtype:"toolbar",dock:"top",items:[{text:_("new_list"),iconCls:"icoAddRecord",scope:a,handler:a.onNewList},"->",{text:_("delete_list"),iconCls:"icoDeleteBlack",itemId:"listDeleteBtn",disabled:!0,scope:a,handler:a.onListDelete,tooltip:_("can_be_disable")}]}]}),a.optionsGrid=Ext.create("Ext.grid.Panel",{store:a.optionsStore,itemId:"optionsGrid",plugins:[a.optionsRowEditing],region:"center",viewConfig:{plugins:{ptype:"gridviewdragdrop",dragText:_("drag_and_drop_reorganize")},listeners:{scope:a,drop:a.onDragDrop}},columns:[{xtype:"rownumberer"},{text:_("option_title"),width:200,sortable:!0,dataIndex:"option_name",editor:{allowBlank:!1,enableKeyEvents:!0,listeners:{scope:a,keyup:a.onOptionTitleChange}}},{text:_("option_value"),width:200,sortable:!0,dataIndex:"option_value",editor:{allowBlank:!1,itemId:"optionValueTextField"}},{text:_("code"),sortable:!0,dataIndex:"code",width:120,editor:{allowBlank:!0}},{text:_("code_type"),sortable:!0,dataIndex:"code_type",width:100,editor:{allowBlank:!0}},{text:_("notes"),sortable:!0,dataIndex:"notes",flex:1,width:100,editor:{allowBlank:!0}},{text:_("active"),width:55,sortable:!1,dataIndex:"active",renderer:a.boolRenderer,editor:{xtype:"checkbox",margin:0}}],dockedItems:[{xtype:"toolbar",dock:"top",items:["->",{text:_("add_option"),iconCls:"icoAddRecord",scope:a,handler:a.onNewOption}]}]}),a.pageBody=[a.listsGrid,a.optionsGrid],a.callParent(arguments)},onNewList:function(){var a=this;a.listsRowEditing.cancelEdit(),a.listsStore.insert(0,Ext.create("App.model.administration.Lists")),a.listsRowEditing.startEdit(0,0)},onListsGridClick:function(a,b){var c=this,d=c.listsGrid.down("toolbar").getComponent("listDeleteBtn"),e="1"==!!b.data.in_use,f=b.data.id;c.optionsStore.clearFilter(!0),c.optionsStore.filter([{property:"list_id",value:f}]),e?d.disable():d.enable()},onNewOption:function(){var a,b=this,c=b.getCurrList();c!==!1&&(b.optionsRowEditing.cancelEdit(),a=Ext.create("App.model.administration.ListOptions",{list_id:c}),b.optionsStore.insert(0,a),b.optionsRowEditing.startEdit(0,0))},onOptionTitleChange:function(){},onDragDrop:function(a,b,c){for(var d=this,e=c.stores[0].data.items,f=d.getCurrList(),g=[],h=0;h<e.length;h++)Ext.Array.push(g,e[h].data.id);var i={list_id:b.records[0].data.list_id,fields:g};Lists.sortOptions(i,function(){d.optionsStore.clearFilter(!0),d.optionsStore.filter([{property:"list_id",value:f}])})},onListDelete:function(a){var b=this,c=a.up("grid"),d=c.getStore(),e=c.getSelectionModel(),f=e.getLastSelected();f.data.in_use?Ext.Msg.alert("Oops!",_("unable_to_delete")+' "'+f.data.title+'"<br>'+_("list_currently_used_forms")+"."):Ext.Msg.show({title:_("please_confirm")+"...",icon:Ext.MessageBox.QUESTION,msg:_("delete_this_record"),buttons:Ext.Msg.YESNO,scope:b,fn:function(a){"yes"==a&&(d.remove(f),d.sync({success:function(){b.msg("Sweet!",_("record_deleted")),b.optionsStore.removeAll()},failure:function(){b.msg("Oops!",_("unable_to_delete")+' "'+f.data.title,!0)}}))}})},getCurrList:function(){var a=this.listsGrid.getSelectionModel().getSelection();return a.length>0?a[0].data.id:!1},onActive:function(a){var b=this;b.listsStore.load(),a(!0)}}),Ext.define("App.view.administration.AuditLog",{extend:"App.ux.RenderPanel",pageTitle:_("audit_log"),itemId:"AuditLogPanel",initComponent:function(){var a=this;a.store=Ext.create("App.store.administration.TransactionLogs",{remoteFilter:!0,remoteSort:!0}),a.pageBody=[Ext.create("Ext.grid.Panel",{itemId:"AuditLogGrid",store:a.store,columns:[{width:130,text:_("date"),dataIndex:"date",renderer:Ext.util.Format.dateRenderer("Y-m-d g:i a")},{width:200,text:_("user"),dataIndex:"user_name"},{width:200,text:_("patient"),dataIndex:"patient_name"},{width:100,text:_("event"),dataIndex:"event"},{width:200,text:_("table"),dataIndex:"table_name"},{flex:1,text:_("sql"),dataIndex:"sql_string"},{flex:1,text:_("data"),dataIndex:"data"},{width:60,text:_("valid"),dataIndex:"is_valid",renderer:app.boolRenderer}],tbar:Ext.create("Ext.PagingToolbar",{store:a.store,displayInfo:!0,plugins:Ext.create("Ext.ux.SlidingPager"),items:["-",{xtype:"datefield",name:"from",itemId:"AuditLogGridFromDateField",labelWidth:35,width:150,fieldLabel:_("from"),labelAlign:"right",format:"Y-m-d",allowBlank:!1,value:new Date},{xtype:"datefield",name:"to",itemId:"AuditLogGridToDateField",labelWidth:30,width:150,fieldLabel:_("to"),format:"Y-m-d",labelAlign:"right",allowBlank:!1,value:new Date},{xtype:"patienlivetsearch",itemId:"AuditLogGridPatientLiveSearch",emptyText:_("patient_live_search")+"...",width:app.fullMode?300:250},{xtype:"button",text:_("filter"),itemId:"AuditLogGridFilterBtn"},{xtype:"button",text:_("reset"),itemId:"AuditLogGridResetBtn"}]})})],a.callParent(arguments)}}),Ext.define("App.view.administration.Medications",{extend:"App.ux.RenderPanel",id:"panelMedications",pageTitle:_("medications"),initComponent:function(){var a=this;a.query="",a.storeMedications=Ext.create("App.store.administration.Medications"),a.medicationsGrid=Ext.create("Ext.grid.Panel",{region:"center",store:a.storeMedications,columns:[{width:70,header:_("number"),dataIndex:"PRODUCTNDC",sortable:!0},{width:80,header:_("name"),dataIndex:"PROPRIETARYNAME",sortable:!0},{width:200,header:_("active_component"),dataIndex:"NONPROPRIETARYNAME",sortable:!0},{width:175,header:_("dosage"),dataIndex:"DOSAGEFORMNAME",sortable:!0},{width:45,header:_("number"),dataIndex:"ACTIVE_NUMERATOR_STRENGTH",sortable:!0},{flex:1,header:_("unit"),dataIndex:"ACTIVE_INGRED_UNIT",sortable:!0}],plugins:Ext.create("App.ux.grid.RowFormEditing",{autoCancel:!1,errorSummary:!1,clicksToEdit:1,enableRemove:!0,items:[{title:"general",xtype:"container",padding:10,layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",fieldLabel:_("name"),width:150,labelWidth:50,name:"PROPRIETARYNAME"},{xtype:"textfield",fieldLabel:_("active_component"),width:350,labelWidth:125,name:"NONPROPRIETARYNAME"},{xtype:"textfield",fieldLabel:_("dosage"),width:200,labelWidth:50,name:"DOSAGEFORMNAME"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0"},items:[{xtype:"textfield",fieldLabel:_("code"),labelWidth:50,width:150,name:"PRODUCTNDC"},{xtype:"textfield",fieldLabel:_("dose"),margin:"0 0 5 0",value:0,minValue:0,width:275,labelWidth:125,name:"ACTIVE_NUMERATOR_STRENGTH"},{xtype:"textfield",name:"ACTIVE_INGRED_UNIT",width:75}]}]}]}),tbar:Ext.create("Ext.PagingToolbar",{store:a.storeMedications,displayInfo:!0,emptyMsg:_("no_office_notes_to_display"),plugins:Ext.create("Ext.ux.SlidingPager"),items:["-",{text:"Add New",scope:a,handler:a.onAddMedication},"-",{xtype:"textfield",emptyText:_("search"),enableKeyEvents:!0,itemId:"query",listeners:{scope:a,keyup:a.onSearchMedications,buffer:500}},"-",{text:_("reset"),scope:a,handler:a.onFieldReset},{text:"Print",iconCls:"icon-print",handler:function(){App.ux.grid.Printer.printAutomatically=!1,App.ux.grid.Printer.print(this.up("grid"))}}]})}),a.pageBody=[a.medicationsGrid],a.callParent(arguments)},onFieldReset:function(){},onAddMedication:function(){this.medicationsGrid.editingPlugin.cancelEdit(),this.storeMedications.insert(0,{}),this.medicationsGrid.editingPlugin.startEdit(0,0)},onSearchMedications:function(a){var b=this,c=b.storeMedications;b.query=a.getValue(),c.proxy.extraParams={query:b.query},c.load()},onActive:function(){this.medicationsGrid.down("toolbar").getComponent("query").reset(),this.storeMedications.proxy.extraParams={},this.storeMedications.load()}}),Ext.define("App.view.administration.Modules",{extend:"App.ux.RenderPanel",id:"panelModules",pageTitle:_("modules"),initComponent:function(){var a=this;a.store=Ext.create("App.store.administration.Modules"),a.grid=Ext.create("Ext.grid.Panel",{store:a.store,plugins:[a.edditing=Ext.create("Ext.grid.plugin.RowEditing",{clicksToEdit:2,errorSummary:!1})],columns:[{text:_("title"),width:200,sortable:!0,dataIndex:"title"},{text:_("description"),flex:1,sortable:!0,dataIndex:"description"},{text:_("version"),width:100,sortable:!0,dataIndex:"installed_version"},{text:_("key_if_required"),flex:1,sortable:!0,dataIndex:"licensekey",editor:{xtype:"textfield"}},{text:_("enabled?"),width:60,sortable:!0,renderer:a.boolRenderer,dataIndex:"enable",editor:{xtype:"checkbox"}}]}),a.pageBody=[a.grid],a.callParent(arguments)},onActive:function(a){this.store.load(),a(!0)}}),Ext.define("App.view.administration.FloorPlans",{extend:"App.ux.RenderPanel",id:"panelFloorPlans",pageTitle:_("floor_plan_editor"),pageLayout:"border",floorPlanId:null,activeZone:null,initComponent:function(){var a=this;a.floorPlansStore=Ext.create("App.store.administration.FloorPlans"),a.floorZonesStore=Ext.create("App.store.administration.FloorPlanZones"),a.floorPlans=Ext.create("Ext.grid.Panel",{title:_("floor_plans"),region:"west",width:200,split:!0,hideHeaders:!0,store:a.floorPlansStore,plugins:[a.floorPlanEditing=Ext.create("Ext.grid.plugin.RowEditing",{clicksToEdit:2})],columns:[{dataIndex:"title",sortable:!1,hideable:!1,flex:1,editor:{xtype:"textfield",emptyText:_("new_floor")}}],tbar:[{text:_("add_floor"),action:"newFloorPlan",iconCls:"icoAdd",scope:a,handler:a.onNewFloorPlan},"-",{text:_("remove_floor"),action:"newFloorPlan",iconCls:"icoDelete",scope:a,handler:a.onRemoveFloorPlan}],listeners:{scope:a,select:a.onFloorPlanSelected}}),a.floorPlanZones=Ext.create("Ext.panel.Panel",{title:_("floor_plan"),region:"center",bodyCls:"floorPlan",layout:"absolute",tbar:[{text:_("add_zone"),action:"newZone",iconCls:"icoAdd",scope:a,handler:a.onNewZone}]}),a.floorPlanZoneEditor=Ext.create("Ext.window.Window",{title:_("zone_editor"),closeAction:"hide",closable:!1,resizable:!1,items:[{xtype:"form",border:!1,bodyPadding:"10",defaults:{labelWidth:130,anchor:"100%"},items:[{xtype:"textfield",fieldLabel:_("zone_name"),name:"title"},{xtype:"colorcombo",fieldLabel:_("bg_color"),name:"bg_color"},{xtype:"colorcombo",fieldLabel:_("border_color"),name:"border_color"},{xtype:"numberfield",fieldLabel:_("width"),minValue:30,maxValue:300,name:"width"},{xtype:"numberfield",fieldLabel:_("height"),minValue:30,maxValue:300,name:"height"},{xtype:"checkbox",fieldLabel:_("show_priority_color"),name:"show_priority_color"},{xtype:"checkbox",fieldLabel:_("show_patient_preview"),name:"show_patient_preview"},{xtype:"checkbox",fieldLabel:_("active"),name:"active"}]}],buttons:[{text:_("remove"),xtype:"button",scope:a,handler:a.onZoneRemove},"->",{text:_("cancel"),xtype:"button",scope:a,handler:a.onZoneCancel},"-",{text:_("save"),xtype:"button",scope:a,handler:a.onZoneSave}],listeners:{scope:a,afterrender:function(a){a.alignTo(this.floorPlanZones.getEl(),"tr-tr",[-130,70])}}}),a.listeners={show:function(){a.nav=Ext.create("Ext.util.KeyNav",Ext.getDoc(),{scope:a,left:function(){a.moveZone("left")},up:function(){a.moveZone("up")},right:function(){a.moveZone("right")},down:function(){a.moveZone("down")}})},hide:function(){a.nav&&Ext.destroy(a.nav),a.setEditMode(!1)}},a.pageBody=[a.floorPlans,a.floorPlanZones],a.callParent(arguments)},setEditMode:function(a,b){var c=this,d=c.activeZone?c.activeZone.getEl():null;d?c.setEditor(a,b):c.setEditor(a,b)},setEditor:function(a,b){var c=this;a?(c.activeZone=b,c.getEditor().zone=b,c.floorPlanZones.focus(),c.getEditor().getForm().loadRecord(b.record),c.floorPlanZoneEditor.hidden&&c.floorPlanZoneEditor.show(b.getEl())):(c.floorPlanZoneEditor.hide(),c.getEditor().getForm().reset(),c.activeZone=null)},getEditor:function(){return this.floorPlanZoneEditor.down("form")},onZoneCancel:function(){var a,b=this,c=b.activeZone,d=c.record;d.reject(),a={text:d.data.title,scale:d.data.scale,style:{"border-color":d.data.border_color,"background-color":d.data.bg_color},width:d.data.width,height:d.data.height},b.activeZone.setPosition(d.data.x,d.data.y),b.applyZoneConfig(c,a),b.setEditMode(!1)},onZoneSave:function(){var a,b=this,c=b.getEditor(),d=c.getForm(),e=d.getValues(),f=d.getRecord();f.set(e),a={text:f.data.title,scale:f.data.scale,style:{"border-color":f.data.border_color,"background-color":f.data.bg_color},width:f.data.width,height:f.data.height},f.store.sync(),b.applyZoneConfig(c.zone,a),b.setEditMode(!1)},onZoneHandler:function(a){var b=this;b.setEditMode(!0,a)},onZoneRemove:function(){var a=this,b=this.getEditor(),c=b.getForm(),d=c.getRecord(),e=b.zone;Ext.Msg.show({title:"Wait!",msg:_("remove_final_notice")+' <span style="font-weight: bold">"'+d.data.title+'"</span>?',buttons:Ext.Msg.YESNO,icon:Ext.Msg.WARNING,fn:function(c){"yes"==c&&(a.floorZonesStore.remove(d),a.floorZonesStore.sync({success:function(){a.floorPlanZones.remove(e,!0),b.up("window").hide()}}))}})},onRemoveFloorPlan:function(a){var b=this,c=a.up("grid"),d=c.store,e=c.getSelectionModel(),f=e.getLastSelected();Ext.Msg.show({title:"Wait!",msg:_("remove_final_notice")+' <span style="font-weight: bold">"'+f.data.title+'"</span>?',buttons:Ext.Msg.YESNO,icon:Ext.Msg.WARNING,fn:function(a){"yes"==a&&(d.remove(f),d.sync({callback:function(){e.deselectAll(),b.floorPlanZones.removeAll(),b.msg("Sweet!",_("record_removed"))}}))}})},onNewZone:function(){var a=this;a.floorZonesStore.add({floor_plan_id:a.floorPlanId,title:_("new_zone"),x:5,y:5,show_priority_color:1,show_patient_preview:1,active:0}),a.floorZonesStore.sync({callback:function(b){a.createZone(b.operations[0].records[0])}})},createZone:function(a){var b,c=this;b=c.floorPlanZones.add(Ext.create("Ext.button.Split",{text:a.data.title,draggable:{listeners:{scope:c,dragend:c.zoneDragged}},scale:a.data.scale,style:{"border-color":a.data.border_color,"background-color":a.data.bg_color},x:a?a.data.x:5,y:a?a.data.y:5,width:a.data.width,height:a.data.height,scope:c,handler:c.onZoneHandler})),b.record=a},applyZoneConfig:function(a,b){a.setText(b.text),a.getEl().applyStyles(b.style),a.setScale(b.scale),a.setSize(b.width,b.height)},moveZone:function(a){if(app.currCardCmp==this&&null!=this.activeZone){var b=this.activeZone.x,c=this.activeZone.y;"left"==a?b-=1:"right"==a?b+=1:"up"==a?c-=1:"down"==a&&(c+=1),this.activeZone.setPosition(b,c),this.activeZone.record.set({x:b,y:c})}},zoneDragged:function(a){var b=a.comp;b.record.set({x:b.x,y:b.y})},onNewFloorPlan:function(){this.floorPlansStore.add({})},onFloorPlanSelected:function(a,b){this.setEditMode(!1),this.floorPlanId=b.data.id,this.reloadFloorPlanZones()},reloadFloorPlanZones:function(){var a=this;a.floorPlanZones.removeAll(),a.floorZonesStore.load({params:{floor_plan_id:this.floorPlanId},scope:a,callback:function(b){a.setEditMode(!1);for(var c=0;c<b.length;c++)a.createZone(b[c])}})},onActive:function(a){var b=this;b.floorPlansStore.load({callback:function(){b.floorPlans.getSelectionModel().select(0)}}),a(!0)}}),Ext.define("App.view.administration.PreventiveCare",{extend:"App.ux.RenderPanel",id:"panelPreventiveCare",pageTitle:_("preventive_care"),uses:["Ext.grid.Panel","App.ux.combo.CodesTypes","App.ux.combo.Titles"],initComponent:function(){var a=this;a.active=1,a.dataQuery="",a.category_id="3",a.store=Ext.create("App.store.administration.PreventiveCare"),a.activeProblemsStore=Ext.create("App.store.administration.PreventiveCareActiveProblems"),a.medicationsStore=Ext.create("App.store.administration.PreventiveCareMedications"),a.labsStore=Ext.create("App.store.administration.PreventiveCareLabs"),a.guidelineGrid=Ext.create("Ext.grid.Panel",{region:"center",store:a.store,columns:[{xtype:"actioncolumn",width:30,items:[{icon:"resources/images/icons/delete.png",tooltip:_("remove"),handler:function(a,b){a.getStore().getAt(b)},getClass:function(){return"x-grid-icon-padding"}}]},{flex:1,header:_("description"),sortable:!0,dataIndex:"description"},{width:100,header:_("age_start"),sortable:!0,dataIndex:"age_start"},{width:100,header:_("age_end"),sortable:!0,dataIndex:"age_end"},{width:100,header:_("sex"),sortable:!0,dataIndex:"sex"},{width:100,header:_("frequency"),sortable:!0,dataIndex:"frequency"}],plugins:Ext.create("App.ux.grid.RowFormEditing",{autoCancel:!1,errorSummary:!1,clicksToEdit:1,listeners:{scope:a,beforeedit:a.beforeServiceEdit,edit:a.onServiceEdit,canceledit:a.onServiceCancelEdit},items:[{xtype:"tabpanel",action:_("immunizations"),layout:"fit",plain:!0,listeners:{scope:a,tabchange:a.onFormTapChange},items:[{title:_("general"),xtype:"container",padding:10,layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0",action:"field"},items:[{xtype:"textfield",fieldLabel:_("description"),name:"description",labelWidth:130,width:703},{xtype:"gaiaehr.sexcombo",fieldLabel:_("sex"),name:"sex",width:100,labelWidth:30},{fieldLabel:_("active"),xtype:"checkboxfield",labelWidth:75,name:"active"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0",action:"field"},items:[{xtype:"mitos.codestypescombo",fieldLabel:_("coding_system"),labelWidth:130,value:"CVX",name:"coding_system",readOnly:!0},{xtype:"numberfield",fieldLabel:_("frequency"),margin:"0 0 5 0",value:0,minValue:0,width:150,name:"frequency"},{xtype:"mitos.timecombo",name:"frequency_time",width:100},{xtype:"numberfield",fieldLabel:_("age_start"),name:"age_start",labelWidth:75,width:140,value:0,minValue:0},{fieldLabel:_("must_be_pregnant"),xtype:"checkboxfield",labelWidth:105,name:"pregnant"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0",action:"field"},items:[{xtype:"textfield",fieldLabel:_("code"),name:"code",labelWidth:130},{xtype:"numberfield",fieldLabel:_("times_to_perform"),name:"times_to_perform",width:250,value:0,minValue:0,tooltip:_("greater_than_1_or_just_check_perform_once")},{xtype:"numberfield",fieldLabel:_("age_end"),name:"age_end",labelWidth:75,width:140,value:0,minValue:0},{fieldLabel:_("perform_only_once"),xtype:"checkboxfield",labelWidth:105,name:"only_once"}]}]},{title:_("active_problems"),action:"problems",xtype:"grid",margin:5,store:a.activeProblemsStore,columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/delete.png",tooltip:_("remove"),scope:a,handler:a.onRemoveRelation}]},{header:_("code"),width:100,dataIndex:"code"},{header:_("description"),flex:1,dataIndex:"code_text"}],bbar:{xtype:"liveicdxsearch",margin:5,fieldLabel:_("add_problem"),hideLabel:!1,listeners:{scope:a,select:a.addActiveProblem}}},{title:_("medications"),action:"medications",xtype:"grid",width:300,store:a.medicationsStore,columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/delete.png",tooltip:_("remove"),scope:a,handler:a.onRemoveRelation}]},{header:_("code"),width:100,dataIndex:"code"},{header:_("description"),flex:1,dataIndex:"code_text"}],bbar:{xtype:"medicationlivetsearch",margin:5,fieldLabel:_("add_problem"),hideLabel:!1,listeners:{scope:a,select:a.addMedications}}},{title:_("labs"),action:"labs",xtype:"grid",store:a.labsStore,width:300,columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/delete.png",tooltip:_("remove"),scope:a,handler:a.onRemoveRelation}]},{header:_("value_name"),flex:1,dataIndex:"value_name"},{header:_("less_than"),flex:1,dataIndex:"less_than",editor:{xtype:"numberfield"}},{header:_("greater_than"),flex:1,dataIndex:"greater_than",editor:{xtype:"numberfield"}},{header:_("equal_to"),flex:1,dataIndex:"equal_to",editor:{xtype:"numberfield"}}],plugins:Ext.create("Ext.grid.plugin.CellEditing",{autoCancel:!0,errorSummary:!1,clicksToEdit:2,listeners:{scope:a,edit:a.afterLabTimeEdit}}),bbar:{xtype:"labslivetsearch",margin:5,fieldLabel:_("add_labs"),hideLabel:!1,listeners:{scope:a,select:a.addLabs}}}]}]}),tbar:a.PagingToolbar=Ext.create("Ext.PagingToolbar",{store:a.store,displayInfo:!0,emptyMsg:_("no_office_notes_to_display"),plugins:Ext.create("Ext.ux.SlidingPager",{}),items:["-",{xtype:"mitos.preventivecaretypescombo",width:150,listeners:{scope:a,select:a.onCodeTypeSelect}}]})}),a.pageBody=[a.guidelineGrid],a.callParent(arguments)},onServiceEdit:function(){},onServiceCancelEdit:function(){},afterLabTimeEdit:function(){},beforeServiceEdit:function(a,b){for(var c=a.editor,d=c.query("grid"),e=0;e<d.length;e++)d[e].store.load({params:{id:b.record.data.id}})},onFormTapChange:function(){},onCodeTypeSelect:function(a,b){var c=this;c.category_id=b[0].data.option_value,"dismiss"==c.category_id||(c.PagingToolbar.moveFirst(),c.store.proxy.extraParams={category_id:c.category_id},c.store.load())},addActiveProblem:function(a,b){this.activeProblemsStore.add({code:b[0].data.code,code_text:b[0].data.code_text,guideline_id:this.getSelectId()}),a.reset()},addMedications:function(a,b){this.medicationsStore.add({code:b[0].data.id,code_text:b[0].data.PROPRIETARYNAME,guideline_id:this.getSelectId()}),a.reset()},addLabs:function(a,b){this.labsStore.add({code:b[0].data.loinc_number,value_name:b[0].data.loinc_name,less_than:"0",greater_than:"0",equal_to:"0",preventive_care_id:this.getSelectId()}),a.reset()},onRemoveRelation:function(a,b){var c=a.getStore(),d=c.getAt(b);c.remove(d)},getSelectId:function(){var a=this.guidelineGrid.getSelectionModel().getLastSelected();return a.data.id},onActive:function(a){this.guidelineGrid.query("combobox")[0].setValue(this.category_id),this.store.proxy.extraParams={category_id:this.category_id},this.store.load(),a(!0)}}),Ext.define("App.model.administration.AclGroup",{extend:"Ext.data.Model",table:{name:"acl_groups"},fields:[{name:"id",type:"int"},{name:"title",type:"string"},{name:"active",type:"bool",index:!0}],proxy:{type:"direct",api:{read:"ACL.getAclGroups",create:"ACL.addAclGroup",update:"ACL.updateAclGroup"},reader:{root:"data"}}}),Ext.define("App.store.administration.AclGroups",{model:"App.model.administration.AclGroup",extend:"Ext.data.Store"}),Ext.define("App.view.administration.practice.Practice",{extend:"App.ux.RenderPanel",xtype:"practicepanel",pageTitle:_("practice_settings"),requires:["App.view.administration.practice.Facilities","App.view.administration.practice.FacilityConfig","App.view.administration.practice.Laboratories","App.view.administration.practice.Pharmacies","App.view.administration.practice.ProviderNumbers","App.view.administration.practice.ReferringProviders"],pageBody:[{xtype:"tabpanel",activeTab:0,items:[{xtype:"pharmaciespanel"},{xtype:"laboratoriespanel"},{xtype:"insurancecompaniespanel"},{xtype:"providersnumberspanel"},{xtype:"referringproviderspanel"},{xtype:"facilitiespanel"},{xtype:"facilityconfigpanel"}]}]}),Ext.define("App.view.administration.ExternalDataLoads",{extend:"App.ux.RenderPanel",id:"panelExternalDataLoads",pageTitle:_("external_data_loads"),pageLayout:{type:"accordion",animate:!0,activeOnTop:!0},initComponent:function(){var a=this;a.stores=[],a.stores.push(a.icd9Store=Ext.create("App.store.administration.ExternalDataLoads",{codeType:"ICD9"})),a.stores.push(a.icd10Store=Ext.create("App.store.administration.ExternalDataLoads",{codeType:"ICD10",groupField:"version"})),a.stores.push(a.rxnormStore=Ext.create("App.store.administration.ExternalDataLoads",{codeType:"RXNORM"})),a.stores.push(a.snomedStore=Ext.create("App.store.administration.ExternalDataLoads",{codeType:"SNOMED"})),a.stores.push(a.hcpcsStore=Ext.create("App.store.administration.ExternalDataLoads",{codeType:"HCPCS"})),a.icd9Grid=a.getCodeGrid("Available ICD9 Data",a.icd9Store,!1),a.icd10Grid=a.getCodeGrid("Available ICD10 Data",a.icd10Store,!0),a.rxnormGrid=a.getCodeGrid("Available RxNorm Data",a.rxnormStore,!1),a.snomedGrid=a.getCodeGrid("Available SNOMED Data",a.snomedStore,!1),a.hcpcsGrid=a.getCodeGrid("Available HCPCS Data",a.hcpcsStore,!1),a.icd9Form=a.getCodeForm("ICD9"),a.icd10Form=a.getCodeForm("ICD10"),a.rxnormForm=a.getCodeForm("RXNORM"),a.snomedForm=a.getCodeForm("SNOMED"),a.hcpcsForm=a.getCodeForm("HCPCS"),a.icd9=Ext.create("Ext.form.Panel",{title:_("update_icd9"),layout:"border",items:[a.icd9Grid,a.icd9Form]}),a.icd10=Ext.create("Ext.panel.Panel",{title:_("update_icd10"),layout:"border",items:[a.icd10Grid,a.icd10Form]}),a.rxnorm=Ext.create("Ext.panel.Panel",{title:_("update_rxnorm"),layout:"border",items:[a.rxnormGrid,a.rxnormForm]}),a.snomed=Ext.create("Ext.panel.Panel",{title:_("update_snomed"),layout:"border",items:[a.snomedGrid,a.snomedForm]}),a.hcpcs=Ext.create("Ext.panel.Panel",{title:_("update_hcpcs"),layout:"border",items:[a.hcpcsGrid,a.hcpcsForm]}),a.pageBody=[a.icd9,a.icd10,a.rxnorm,a.snomed,a.hcpcs],a.callParent(arguments)},getCodeForm:function(a){var b=this;return Ext.create("Ext.form.Panel",{bodyPadding:10,region:"center",action:a,frame:!0,bodyStyle:"background-color:white",bodyBorder:!0,margin:"5 0 5 0",items:[{xtype:"fieldset",styleHtmlContent:!0,action:a,title:_("current_version_installed"),html:_("no_data_installed"),tpl:_("revision_name")+":  {revision_name}<br>"+_("revision_number")+":  {revision_number}<br>"+_("revision_version")+": {revision_version}<br>"+_("revision_date")+":    {revision_date}<br>"+_("imported_on")+":      {imported_date}"},{xtype:"fieldset",title:_("installation"),action:"installation",styleHtmlContent:!0,html:b.getInstallationDetails(a)},{xtype:"fieldset",title:_("upload"),action:"upload",items:[{xtype:"filefield",name:"filePath",buttonText:_("upload"),emptyText:_("data_file"),width:350,labelWidth:50,allowBlank:!1}]}],api:{submit:"ExternalDataUpdate.updateCodesWithUploadFile"},buttons:[{text:_("update"),action:a,scope:b,handler:b.uploadFile}]})},getCodeGrid:function(a,b,c){var d=this;return Ext.create("Ext.grid.Panel",{title:a,store:b,region:"west",width:500,margin:"5 0 5 0",padding:0,split:!0,columns:d.getDefaultColumns(),listeners:{scope:d,itemdblclick:d.onCodeDblClick},features:c?[{ftype:"grouping"}]:[]})},getDefaultColumns:function(){return[{xtype:"datecolumn",header:_("date"),dataIndex:"date",format:g("date_display_format")},{header:_("version"),dataIndex:"version"},{header:_("file"),dataIndex:"basename",width:300}]},getInstallationDetails:function(a){return"ICD9"==a?'<p>Steps to install the ICD 9 data:</p><ol><li>The raw data feed release can be obtained from <a href="https://www.cms.gov/Medicare/Coding/ICD9ProviderDiagnosticCodes/codes.html">this location</a></li><li>Upload the downloaded .zip file, or place the downloaded ICD 9 database zip file into the following directory: contrib/icd9</li><li>Double Click the zip file from the "Available ICD9 Data" grid to install</li></ol><p style="color:red">NOTE: Importing external data can take more than an hour depending on your hardware configuration. For example, one of the RxNorm data tables contain in excess of 6 million rows.</p>':"ICD10"==a?'<p>Steps to install the ICD 10 data:</p><ol><li>The raw data feed release can be obtained from <a href="https://www.cms.gov/Medicare/Coding/ICD10">this location</a></li><li>Upload the downloaded .zip file, or place the downloaded ICD 10 database zip files into the following directory: contrib/icd10</li><li>Double Click the zip file from the "Available ICD10 Data" grid to install</li></ol><p>These are the ICD10 2012 links:</p><ol><li><a href="https://www.cms.gov/Medicare/Coding/ICD10/Downloads/DiagnosisGEMs_2012.zip">DiagnosisGEMs_2012</a></li><li><a href="https://www.cms.gov/Medicare/Coding/ICD10/Downloads/ProcedureGEMs_2012.zip">ProcedureGEMs_2012</a></li><li><a href="https://www.cms.gov/Medicare/Coding/ICD10/Downloads/ReimbursementMapping_2012.zip">ReimbursementMapping_2012</a></li><li><a href="https://www.cms.gov/Medicare/Coding/ICD10/Downloads/2012_PCS_long_and_abbreviated_titles.zip">2012_PCS_long_and_abbreviated_titles</a></li><li><a href="https://www.cms.gov/Medicare/Coding/ICD10/Downloads/ICD10OrderFiles_2012.zip">ICD10OrderFiles_2012</a></li></ol><p style="color:red">NOTE: Importing external data can take more than an hour depending on your hardware configuration. For example, one of the RxNorm data tables contain in excess of 6 million rows.</p>':"RXNORM"==a?'<p>Steps to install the RxNorm data:</p><ol><li>The first step is to open an account with the Unified Medical Language System web site <a href="https://utslogin.nlm.nih.gov/cas/login">here</a></li><li>Then the raw data feed release can be obtained from <a href="http://www.nlm.nih.gov/research/umls/rxnorm/docs/rxnormfiles.html">this location</a></li><li>Upload the downloaded .zip file, or place the downloaded RxNorm database zip file into the following directory: contrib/rxnorm.</li><li>Double Click the zip file from the "Available RxNorm Data" grid to install</li></ol><p style="color:red">NOTE: Only the full monthly RxNorm release is currently supported</p>':"SNOMED"==a?"Lorem ipsum dolor sit amet, porta nam suscipit sed id, vestibulum velit tortor velit viverra, non enim justo, purus nec, libero sociis lobortis, eu et leo mauris velit. Magnis tellus blandit fringilla, morbi mauris commodo, nec morbi ac non":"HCPCS"==a?'<p>Steps to install the HCPCS data:</p><ol><li>The raw data feed release can be obtained from <a href="http://www.cms.gov/Medicare/Coding/HCPCSReleaseCodeSets/Alpha-Numeric-HCPCS.html">this location</a></li><li>Upload the downloaded .zip file, or place the downloaded zip files into the following directory: contrib/hcpcs</li><li>Double Click the zip file from the "Available HCPCS Data" grid to install</li></ol><p>These is the HCPCS 2013 direct link:</p><ol><li><a href="http://www.cms.gov/Medicare/Coding/HCPCSReleaseCodeSets/Downloads/13anweb.zip">13anweb</a></li></ol><p style="color:red">NOTE: Importing external data can take more than an hour depending on your hardware configuration.</p>':void 0},uploadFile:function(a){var b=this,c=a.up("form").getForm();c.isValid()&&c.submit({waitMsg:_("uploading_and_updating_code_database")+"...",scope:b,params:{codeType:a.action},success:function(){},failure:function(){}})},onCodeDblClick:function(a,b){var c=this,d=app.log;d.ActivityMonitor(!1),a.el.mask(_("installing_database_please_wait")+"..."),ExternalDataUpdate.updateCodes(b.data,function(b,e){a.el.unmask(),e.result.success?(c.setCurrentCodesInfo(),c.alert(_("new_database_installed"),"info")):c.alert(e.result.error,"error"),d.ActivityMonitor(!0)})},setCurrentCodesInfo:function(){var a,b,c=this;ExternalDataUpdate.getCurrentCodesInfo(function(d,e){a=e.result;for(var f=0;f<a.length;f++)a[f].data!==!1&&(b=c.query('fieldset[action="'+a[f].data.codeType+'"]')[0],b.update(a[f].data))})},loadStores:function(){for(var a=this,b=0;b<a.stores.length;b++)a.stores[b].load({params:{pid:a.pid}})},onActive:function(a){this.loadStores(),this.setCurrentCodesInfo(),a(!0)}}),Ext.define("App.view.miscellaneous.Amendments",{extend:"App.ux.RenderPanel",requires:["Ext.ux.SlidingPager"],itemId:"AmendmentsPanel",pageTitle:_("amendments"),initComponent:function(){var a=this;a.controller=App.app.getController("miscellaneous.Amendments"),a.pageBody=[{xtype:"grid",itemId:"AmendmentsGrid",store:a.store=Ext.create("App.store.miscellaneous.Amendments",{remoteFilter:!0,remoteSort:!0,sorters:[{property:"cancel_date",direction:"DESC"}]}),columns:[{text:_("type"),width:70,dataIndex:"amendment_type",renderer:function(b,c,d){var e;return e="P"===b?_("patient"):"D"===b?_("doctor"):"O"===b?_("organization"):b,a.newRenderer(e,c,d)}},{text:_("dates"),columns:[{text:_("received"),width:130,dataIndex:"create_date",renderer:a.dateNewRenderer},{text:_("responded"),width:130,dataIndex:"response_date",renderer:a.dateNewRenderer},{text:_("appended"),width:130,dataIndex:"response_date",renderer:function(b,c,d){return"A"==d.data.amendment_status?a.dateNewRenderer(b,c,d):a.dateNewRenderer(null,c,d)
}}]},{text:_("message"),flex:1,dataIndex:"amendment_message",renderer:a.newRenderer},{text:_("response_message"),flex:1,dataIndex:"response_message",renderer:a.newRenderer},{text:_("status"),width:100,dataIndex:"amendment_status",renderer:function(b,c,d){var e;return e="W"===b?_("waiting_response"):"A"===b?_("approved"):"D"===b?_("denied"):"C"===b?_("canceled"):"E"===b?_("error"):b,a.controller.updateIsViewed(d),a.newRenderer(e,c,d)}},{text:_("approved_denied_by"),width:200,dataIndex:"responded_by",renderer:a.newRenderer}],bbar:{xtype:"pagingtoolbar",pageSize:25,store:a.store,displayInfo:!0,plugins:new Ext.ux.SlidingPager}}],a.callParent()},newRenderer:function(a,b,c){return c.data.is_read||(b.style="font-weight:bold"),a},dateNewRenderer:function(a,b,c){return c.data.is_read||(b.style="font-weight:bold"),Ext.Date.format(a,g("date_time_display_format"))}}),Ext.define("App.view.miscellaneous.MySettings",{extend:"App.ux.RenderPanel",id:"panelMySettings",pageTitle:_("my_settings"),uses:["Ext.grid.Panel"],initComponent:function(){var a=this;a.uSettingsForm=Ext.create("App.ux.form.Panel",{id:"uSettingsForm",bodyStyle:"padding: 10px;",cls:"form-white-bg",frame:!0,hideLabels:!0,items:[{xtype:"textfield",hidden:!0,id:"id",name:"id"},{xtype:"fieldset",title:_("appearance_settings"),collapsible:!0,defaultType:"textfield",layout:"anchor",defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{},{},{}]},{xtype:"fieldset",title:_("locale_settings"),collapsible:!0,defaultType:"textfield",layout:"anchor",defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{},{},{}]},{xtype:"fieldset",title:_("calendar_settings"),collapsible:!0,defaultType:"textfield",layout:"anchor",defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{},{},{}]}],dockedItems:[{xtype:"toolbar",dock:"top",items:[{text:_("save"),iconCls:"save",id:"cmdSave",disabled:!0,handler:function(){}}]}]}),a.pageBody=[a.uSettingsForm],a.callParent(arguments)},onActive:function(a){a(!0)}}),Ext.define("App.view.miscellaneous.OfficeNotes",{extend:"App.ux.RenderPanel",id:"panelOfficeNotes",pageTitle:_("office_notes"),pageLayout:"border",initComponent:function(){var a=this;a.store=Ext.create("App.store.miscellaneous.OfficeNotes"),a.form=Ext.create("Ext.form.FormPanel",{region:"north",frame:!0,height:97,margin:"0 0 3 0",items:[{xtype:"textareafield",allowBlank:!1,grow:!0,margin:0,itemId:"body",name:"body",anchor:"100%",emptyText:_("type_new_note_here")+"...",listeners:{scope:a,validitychange:a.onValidityChange}}],dockedItems:[{xtype:"toolbar",dock:"top",items:[{text:_("save"),iconCls:"save",itemId:"cmdSave",disabled:!0,scope:a,handler:a.onNoteSave},"-",{text:_("hide_this_note"),iconCls:"save",itemId:"cmdHide",tooltip:_("hide_selected_office_note"),disabled:!0,scope:a,handler:a.onNoteHide},"-",{text:_("reset"),iconCls:"save",itemId:"cmdReset",disabled:!0,scope:a,handler:a.onFormReset}]}]}),a.grid=Ext.create("Ext.grid.Panel",{region:"center",store:a.store,listeners:{scope:a,itemclick:a.onItemClick},columns:[{width:150,header:_("date"),sortable:!0,dataIndex:"date",renderer:Ext.util.Format.dateRenderer("Y-m-d H:i:s")},{width:150,header:_("user"),sortable:!0,dataIndex:"user"},{flex:1,header:_("note"),sortable:!0,dataIndex:"body"}],tbar:Ext.create("Ext.PagingToolbar",{store:a.store,displayInfo:!0,emptyMsg:_("no_office_notes_to_display"),plugins:Ext.create("Ext.ux.SlidingPager",{}),items:[{text:_("show_only_active_notes"),iconCls:"save",enableToggle:!0,pressed:!0,handler:function(){a.store.load({params:{show:"active"}})}},"-",{text:_("show_all_notes"),iconCls:"save",enableToggle:!0,handler:function(){a.store.load({params:{show:"all"}})}}]})}),a.pageBody=[a.form,a.grid],a.callParent(arguments)},onNoteSave:function(a){var b=a.up("form").getForm(),c=this.store,d=b.getRecord(),e=b.getValues(),f=c.indexOf(d);-1==f?c.add(e):d.set(e),c.sync()},onNoteHide:function(){},onFormReset:function(){var a=this.form,b=a.getForm(),c=a.down("toolbar"),d=c.getComponent("cmdSave"),e=c.getComponent("cmdHide"),f=c.getComponent("cmdReset");b.reset(),d.disable(),e.disable(),f.disable(),d.setText("Save")},onItemClick:function(a,b){var c=this.form,d=c.getForm(),e=c.down("toolbar"),f=e.getComponent("cmdSave"),g=e.getComponent("cmdHide"),h=e.getComponent("cmdReset");d.reset(),d.loadRecord(b),f.enable(),g.enable(),h.enable(),f.setText("Update")},onValidityChange:function(){var a=this.form,b=a.getComponent("body"),c=a.down("toolbar"),d=c.getComponent("cmdSave"),e=c.getComponent("cmdReset");b.isValid()?(d.enable(),e.enable()):d.disable()},onActive:function(a){this.store.load({params:{show:"active"}}),a(!0)}}),Ext.define("App.view.miscellaneous.Websearch",{extend:"App.ux.RenderPanel",id:"panelWebsearch",pageTitle:_("national_library"),pageLayout:"border",uses:["Ext.grid.Panel"],initComponent:function(){var a,b,c,d=this;Ext.ModelManager.isRegistered("webSearch")||(d.store=Ext.create("App.store.miscellaneous.webSearch"),d.codingStore=Ext.create("Ext.data.Store",{fields:["search","name"],data:[{search:"code",name:"Code"},{search:"term",name:"Term"}]})),d.searchPanel=Ext.create("Ext.panel.Panel",{region:"north",bodyPadding:"8 11 5 11",margin:"0 0 2 0",layout:"anchor",items:[{xtype:"radiogroup",fieldLabel:_("search_by"),items:[{boxLabel:_("heath_topics"),name:"type",inputValue:"health_topics"},{boxLabel:"SNOMED CT",name:"type",inputValue:"snomed"},{boxLabel:"RxCUI",name:"type",inputValue:"rxcui"},{boxLabel:"LOINC",name:"type",inputValue:"loinc"},{boxLabel:"NDC",name:"type",inputValue:"ndc"},{boxLabel:"ICD-9-CM",name:"type",inputValue:"icd9cm"}],listeners:{change:function(){var b=this.getValue();a=b.type,d.searchField.enable(),d.searchField.reset()}}},d.termField=Ext.create("Ext.form.ComboBox",{name:"term",fieldLabel:_("code_term")+":",store:d.codingStore,anchor:"100%",queryMode:"local",displayField:"name",valueField:"search",editable:!1,listeners:{change:function(){b=this.getValue()}}}),d.searchField=Ext.create("Ext.form.field.Text",{emptyText:_("web_search")+"...",enableKeyEvents:!0,hideLabel:!0,anchor:"100%",disabled:!0,listeners:{keyup:function(){var c=this.getValue();c.length>2&&d.store.load({params:{type:a,q:c,term:b}})},buffer:500,focus:function(){d.viewPanel.collapse()}}})]}),d.searchRow=function(a,b,c){return Ext.String.format('<div class="topic"><span class="search_title">{0}</span><br><span class="search_source">{1}</span><br><span class="search_snippet" style="white-space: normal;">{2}</span></div>',a,c.get("source")||"Unknown",c.get("snippet")||"Unknown")},d.onotesGrid=Ext.create("Ext.grid.Panel",{margin:"0 0 2 0",region:"center",store:d.store,viewConfig:{deferEmptyText:!1,emptyText:'<p class="search_nothing_found" style="padding: 10px 0 0 20px; font-size: 24px">'+_("nothing_found")+"!</p>",stripeRows:!0,loadingText:_("searching")+"... "+_("please_wait")},columns:[{flex:1,header:_("search_results"),sortable:!0,dataIndex:"title",renderer:d.searchRow},{hidden:!0,sortable:!0,dataIndex:"source"},{hidden:!0,sortable:!0,dataIndex:"snippet"}],tbar:Ext.create("Ext.PagingToolbar",{store:d.store,displayInfo:!0,emptyMsg:_("nothing_to_display"),plugins:Ext.create("Ext.ux.SlidingPager",{})}),listeners:{itemclick:function(a,b,e,f){c=d.store.getAt(f),d.viewPanel.update(c.data),d.viewPanel.expand()}}}),d.viewPanel=Ext.create("Ext.panel.Panel",{region:"south",height:300,collapsible:!0,collapsed:!0,layout:"fit",frame:!0,bodyBorder:!0,tpl:Ext.create("Ext.XTemplate",'<div class="search_container">','<div class="search_data">','<h3 class="search_title">'+_("title")+": {title}</h3>",'<h4 class="search_source">'+_("source")+": {source}</h4>","</div>",'<div class="search_body">{FullSummary}</div>',"</div>")}),d.pageBody=[d.searchPanel,d.onotesGrid,d.viewPanel],d.callParent(arguments),d.termField.select("code")},onActive:function(a){a(!0)}}),Ext.define("App.view.signature.SignatureWindow",{extend:"Ext.window.Window",title:_("please_sign"),closeAction:"hide",height:250,width:500,bodyStyle:"background-color:#fff",modal:!0,layout:"fit",initComponent:function(){var a=this;a.html=a.signature='<iframe id="svgSignature" src="app/view/signature/signature.svg" height="100%" width="100%" scrolling="no" frameborder="0"></iframe>',a.buttons=[{text:_("save"),scope:a,handler:a.signatureSave},{text:_("reset"),scope:a,handler:a.signatureCancel}],this.callParent(arguments)},signatureSave:function(){document.getElementById("svgSignature").contentWindow},signatureCancel:function(){var a=document.getElementById("svgSignature").contentWindow;a.clearSignature()}}),Ext.define("App.store.miscellaneous.AddressBook",{model:"App.model.miscellaneous.AddressBook",extend:"Ext.data.Store"}),Ext.define("App.store.patient.CarePlanGoals",{extend:"Ext.data.Store",requires:["App.model.patient.CarePlanGoal"],model:"App.model.patient.CarePlanGoal"}),Ext.define("App.store.patient.CognitiveAndFunctionalStatus",{extend:"Ext.data.Store",requires:["App.model.patient.CognitiveAndFunctionalStatus"],model:"App.model.patient.CognitiveAndFunctionalStatus"}),Ext.define("App.store.patient.SmokeStatus",{extend:"Ext.data.Store",requires:["App.model.patient.SmokeStatus"],model:"App.model.patient.SmokeStatus",remoteFilter:!0}),Ext.define("App.store.patient.PatientPossibleDuplicates",{extend:"Ext.data.Store",model:"App.model.patient.PatientPossibleDuplicate"}),Ext.define("App.store.administration.ActiveProblems",{model:"App.model.administration.ActiveProblems",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:Services.getActiveProblems,create:Services.addActiveProblems,destroy:Services.removeActiveProblems},reader:{totalProperty:"totals",root:"rows"}},autoLoad:!1}),Ext.define("App.store.administration.Applications",{model:"App.model.administration.Applications",extend:"Ext.data.Store",autoSync:!0,autoLoad:!1}),Ext.define("App.store.administration.DefaultDocuments",{model:"App.model.administration.DefaultDocuments",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:DocumentHandler.getDefaultDocumentsTemplates,create:DocumentHandler.addDocumentsTemplates,update:DocumentHandler.updateDocumentsTemplates}},autoSync:!0,autoLoad:!1}),Ext.define("App.store.administration.DocumentsTemplates",{model:"App.model.administration.DocumentsTemplates",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:"DocumentHandler.getDocumentsTemplates",create:"DocumentHandler.addDocumentsTemplates",update:"DocumentHandler.updateDocumentsTemplates"}},autoSync:!0,autoLoad:!1}),Ext.define("App.store.administration.DocumentToken",{model:"App.model.administration.DocumentToken",extend:"Ext.data.Store",data:[{title:_("patient_id"),token:"[PATIENT_ID]"},{title:_("patient_name"),token:"[PATIENT_NAME]"},{title:_("patient_full_name"),token:"[PATIENT_FULL_NAME]"},{title:_("patient_mothers_maiden_name"),token:"[PATIENT_MAIDEN_NAME]"},{title:_("patient_last_name"),token:"[PATIENT_LAST_NAME]"},{title:_("patient_birthdate"),token:"[PATIENT_BIRTHDATE]"},{title:_("patient_marital_status"),token:"[PATIENT_MARITAL_STATUS]"},{title:_("patient_home_phone"),token:"[PATIENT_HOME_PHONE]"},{title:_("patient_mobile_phone"),token:"[PATIENT_MOBILE_PHONE]"},{title:_("patient_work_phone"),token:"[PATIENT_WORK_PHONE]"},{title:_("patient_email"),token:"[PATIENT_EMAIL]"},{title:_("patient_social_security"),token:"[PATIENT_SOCIAL_SECURITY]"},{title:_("patient_sex"),token:"[PATIENT_SEX]"},{title:_("patient_age"),token:"[PATIENT_AGE]"},{title:_("patient_city"),token:"[PATIENT_CITY]"},{title:_("patient_state"),token:"[PATIENT_STATE]"},{title:_("patient_home_address_line_1"),token:"[PATIENT_HOME_ADDRESS_LINE_ONE]"},{title:_("patient_home_address_line_1"),token:"[PATIENT_HOME_ADDRESS_LINE_TWO]"},{title:_("patient_home_address_zip_code"),token:"[PATIENT_HOME_ADDRESS_ZIP_CODE]"},{title:_("patient_home_address_city"),token:"[PATIENT_HOME_ADDRESS_CITY]"},{title:_("patient_home_address_state"),token:"[PATIENT_HOME_ADDRESS_STATE]"},{title:_("patient_postal_address_line_1"),token:"[PATIENT_POSTAL_ADDRESS_LINE_ONE]"},{title:_("patient_postal_address_line_2"),token:"[PATIENT_POSTAL_ADDRESS_LINE_TWO]"},{title:_("patient_postal_address_zip_code"),token:"[PATIENT_POSTAL_ADDRESS_ZIP_CODE]"},{title:_("patient_postal_address_city"),token:"[PATIENT_POSTAL_ADDRESS_CITY]"},{title:_("patient_postal_address_state"),token:"[PATIENT_POSTAL_ADDRESS_STATE]"},{title:_("patient_tabacco"),token:"[PATIENT_TABACCO]"},{title:_("patient_alcohol"),token:"[PATIENT_ALCOHOL]"},{title:_("patient_drivers_license"),token:"[PATIENT_DRIVERS_LICENSE]"},{title:_("patient_employeer"),token:"[PATIENT_EMPLOYEER]"},{title:_("patient_first_emergency_contact"),token:"[PATIENT_FIRST_EMERGENCY_CONTACT]"},{title:_("patient_referral"),token:"[PATIENT_REFERRAL]"},{title:_("patient_date_referred"),token:"[PATIENT_REFERRAL_DATE]"},{title:_("patient_balance"),token:"[PATIENT_BALANCE]"},{title:_("patient_picture"),token:"[PATIENT_PICTURE]"},{title:_("patient_primary_plan"),token:"[PATIENT_PRIMARY_PLAN]"},{title:_("patient_primary_plan_insured_person"),token:"[PATIENT_PRIMARY_INSURED_PERSON]"},{title:_("patient_primary_plan_contract_number"),token:"[PATIENT_PRIMARY_CONTRACT_NUMBER]"},{title:_("patient_primary_plan_expiration_date"),token:"[PATIENT_PRIMARY_EXPIRATION_DATE]"},{title:_("patient_secondary_plan"),token:"[PATIENT_SECONDARY_PLAN]"},{title:_("patient_secondary_insured_person"),token:"[PATIENT_SECONDARY_INSURED_PERSON]"},{title:_("patient_secondary_plan_contract_number"),token:"[PATIENT_SECONDARY_CONTRACT_NUMBER]"},{title:_("patient_secondary_plan_expiration_date"),token:"[PATIENT_SECONDARY_EXPIRATION_DATE]"},{title:_("patient_referral_details"),token:"[PATIENT_REFERRAL_DETAILS]"},{title:_("patient_referral_reason"),token:"[PATIENT_REFERRAL_REASON]"},{title:_("patient_head_circumference"),token:"[PATIENT_HEAD_CIRCUMFERENCE]"},{title:_("patient_height"),token:"[PATIENT_HEIGHT]"},{title:_("patient_pulse"),token:"[PATIENT_PULSE]"},{title:_("patient_respiratory_rate"),token:"[PATIENT_RESPIRATORY_RATE]"},{title:_("patient_temperature"),token:"[PATIENT_TEMPERATURE]"},{title:_("patient_weight"),token:"[PATIENT_WEIGHT]"},{title:_("patient_pulse_oximeter"),token:"[PATIENT_PULSE_OXIMETER]"},{title:_("patient_blood_preasure"),token:"[PATIENT_BLOOD_PREASURE]"},{title:_("patient_body_mass_index"),token:"[PATIENT_BMI]"},{title:_("patient_active_allergies_list"),token:"[PATIENT_ACTIVE_ALLERGIES_LIST]"},{title:_("patient_inactive_allergies_list"),token:"[PATIENT_INACTIVE_ALLERGIES_LIST]"},{title:_("patient_active_medications_list"),token:"[PATIENT_ACTIVE_MEDICATIONS_LIST]"},{title:_("patient_inactive_medications_list"),token:"[PATIENT_INACTIVE_MEDICATIONS_LIST]"},{title:_("patient_active_problems_list"),token:"[PATIENT_ACTIVE_PROBLEMS_LIST]"},{title:_("patient_inactive_problems_list"),token:"[PATIENT_INACTIVE_PROBLEMS_LIST]"},{title:_("patient_active_immunizations_list"),token:"[PATIENT_ACTIVE_IMMUNIZATIONS_LIST]"},{title:_("patient_inactive_immunizations_list"),token:"[PATIENT_INACTIVE_IMMUNIZATIONS_LIST]"},{title:_("patient_active_dental_list"),token:"[PATIENT_ACTIVE_DENTAL_LIST]"},{title:_("patient_inactive_dental_list"),token:"[PATIENT_INACTIVE_DENTAL_LIST]"},{title:_("patient_active_surgery_list"),token:"[PATIENT_ACTIVE_SURGERY_LIST]"},{title:_("patient_inactive_surgery_list"),token:"[PATIENT_INACTIVE_SURGERY_LIST]"},{title:_("encounter_date"),token:"[ENCOUNTER_DATE]"},{title:_("encounter_subjective_part"),token:"[ENCOUNTER_SUBJECTIVE]"},{title:_("encounter_subjective_part"),token:"[ENCOUNTER_OBJECTIVE]"},{title:_("encounter_assessment"),token:"[ENCOUNTER_ASSESSMENT]"},{title:_("encounter_assessment_list"),token:"[ENCOUNTER_ASSESSMENT_LIST]"},{title:_("encounter_assessment_code_list"),token:"[ENCOUNTER_ASSESSMENT_CODE_LIST]"},{title:_("encounter_assessment_full_list"),token:"[ENCOUNTER_ASSESSMENT_FULL_LIST]"},{title:_("encounter_plan"),token:"[ENCOUNTER_PLAN]"},{title:_("encounter_medications"),token:"[ENCOUNTER_MEDICATIONS]"},{title:_("encounter_immunizations"),token:"[ENCOUNTER_IMMUNIZATIONS]"},{title:_("encounter_allergies"),token:"[ENCOUNTER_ALLERGIES]"},{title:_("encounter_active_problems"),token:"[ENCOUNTER_ACTIVE_PROBLEMS]"},{title:_("encounter_surgeries"),token:"[ENCOUNTER_SURGERIES]"},{title:_("encounter_dental"),token:"[ENCOUNTER_DENTAL]"},{title:_("encounter_laboratories"),token:"[ENCOUNTER_LABORATORIES]"},{title:_("encounter_procedures_terms"),token:"[ENCOUNTER_PROCEDURES_TERMS]"},{title:_("encounter_cpt_codes_list"),token:"[ENCOUNTER_CPT_CODES]"},{title:_("encounter_signature"),token:"[ENCOUNTER_SIGNATURE]"},{title:_("orders_laboratories"),token:"[ORDERS_LABORATORIES]"},{title:_("orders_x_rays"),token:"[ORDERS_XRAYS]"},{title:_("orders_referral"),token:"[ORDERS_REFERRAL]"},{title:_("orders_other"),token:"[ORDERS_OTHER]"},{title:_("current_date"),token:"[CURRENT_DATE]"},{title:_("current_time"),token:"[CURRENT_TIME]"},{title:_("current_user_name"),token:"[CURRENT_USER_NAME]"},{title:_("current_user_full_name"),token:"[CURRENT_USER_FULL_NAME]"},{title:_("current_user_license_number"),token:"[CURRENT_USER_LICENSE_NUMBER]"},{title:_("current_user_dea_license_number"),token:"[CURRENT_USER_DEA_LICENSE_NUMBER]"},{title:_("current_user_dm_license_number"),token:"[CURRENT_USER_DM_LICENSE_NUMBER]"},{title:_("current_user_npi_license_number"),token:"[CURRENT_USER_NPI_LICENSE_NUMBER]"},{title:_("referral_id"),token:"[REFERRAL_ID]"},{title:_("referral_date"),token:"[REFERRAL_DATE]"},{title:_("referral_reason"),token:"[REFERRAL_REASON]"},{title:_("referral_diagnosis"),token:"[REFERRAL_DIAGNOSIS]"},{title:_("referral_service_request"),token:"[REFERRAL_SERVICE]"},{title:_("referral_risk_level"),token:"[REFERRAL_RISK_LEVEL]"},{title:_("referral_by"),token:"[REFERRAL_BY_TEXT]"},{title:_("referral_to"),token:"[REFERRAL_TO_TEXT]"}]}),Ext.define("App.store.administration.ExternalDataLoads",{model:"App.model.administration.ExternalDataLoads",extend:"Ext.data.Store",constructor:function(a){var b=this;b.proxy={type:"direct",api:{read:"ExternalDataUpdate.getCodeFiles"},extraParams:{codeType:a.codeType}},b.callParent(arguments)},remoteSort:!1,autoLoad:!1}),Ext.define("App.store.administration.Facility",{model:"App.model.administration.Facility",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:"Facilities.getFacilities",create:"Facilities.addFacility",update:"Facilities.updateFacility",destroy:"Facilities.deleteFacility"}}}),Ext.define("App.store.administration.FloorPlans",{model:"App.model.administration.FloorPlans",extend:"Ext.data.Store",autoSync:!1,autoLoad:!1}),Ext.define("App.store.administration.FormListOptions",{model:"App.model.administration.FormListOptions",extend:"Ext.data.Store",autoLoad:!1}),Ext.define("App.store.administration.FormsList",{model:"App.model.administration.FormsList",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:FormLayoutBuilder.getForms}},autoSync:!0,remoteSort:!0,autoLoad:!1}),Ext.define("App.store.administration.Globals",{requires:["App.model.administration.Globals"],model:"App.model.administration.Globals",extend:"Ext.data.Store"}),Ext.define("App.store.administration.HeadersAndFooters",{model:"App.model.administration.HeadersAndFooters",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:DocumentHandler.getHeadersAndFootersTemplates,create:DocumentHandler.addDocumentsTemplates,update:DocumentHandler.updateDocumentsTemplates}},autoSync:!0,autoLoad:!1}),Ext.define("App.store.administration.ImmunizationRelations",{model:"App.model.administration.ImmunizationRelations",extend:"Ext.data.Store",autoLoad:!1,autoSync:!0,remoteSort:!1}),Ext.define("App.store.administration.LabObservations",{model:"App.model.administration.LabObservations",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:"Laboratories.getLabObservations",create:"Laboratories.addLabObservation",update:"Laboratories.updateLabObservation",destroy:"Laboratories.removeLabObservation"},writer:{writeAllFields:!0}},autoSync:!0,autoLoad:!1}),Ext.define("App.store.administration.LayoutTree",{model:"App.model.administration.LayoutTree",extend:"Ext.data.TreeStore",folderSort:!1,autoLoad:!1}),Ext.define("App.store.administration.ListOptions",{model:"App.model.administration.ListOptions",extend:"Ext.data.Store",pageSize:300,remoteSort:!0,sorters:[{property:"seq",direction:"ASC"}]}),Ext.define("App.store.administration.Lists",{model:"App.model.administration.Lists",extend:"Ext.data.Store",pageSize:300,sorters:[{property:"title",direction:"ASC"}]}),Ext.define("App.store.administration.AuditLog",{model:"App.model.administration.AuditLog",extend:"Ext.data.Store",autoLoad:!1}),Ext.define("App.store.administration.Medications",{model:"App.model.administration.Medications",extend:"Ext.data.Store",buffered:!0,leadingBufferZone:100,pageSize:50,remoteFilter:!0}),Ext.define("App.store.administration.Modules",{model:"App.model.administration.Modules",extend:"Ext.data.Store"}),Ext.define("App.store.administration.ParentFields",{model:"App.model.administration.ParentFields",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:"FormLayoutBuilder.getParentFields"}},autoLoad:!1}),Ext.define("App.store.administration.PreventiveCare",{model:"App.model.administration.PreventiveCare",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:"PreventiveCare.getGuideLinesByCategory",create:"PreventiveCare.addGuideLine",update:"PreventiveCare.updateGuideLine"},reader:{totalProperty:"totals",root:"rows"},extraParams:{code_type:this.code_type,query:this.query,active:this.active}},autoSync:!0,remoteSort:!1,autoLoad:!1}),Ext.define("App.store.administration.PreventiveCareActiveProblems",{model:"App.model.administration.PreventiveCareActiveProblems",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:"PreventiveCare.getGuideLineActiveProblems",create:"PreventiveCare.addGuideLineActiveProblems",destroy:"PreventiveCare.removeGuideLineActiveProblems"}},remoteSort:!1,autoLoad:!1}),Ext.define("App.store.administration.PreventiveCareLabs",{model:"App.model.administration.PreventiveCareLabs",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:"PreventiveCare.getGuideLineLabs",create:"PreventiveCare.addGuideLineLabs",destroy:"PreventiveCare.removeGuideLineLabs",update:"PreventiveCare.updateGuideLineLabs"}},remoteSort:!1,autoLoad:!1}),Ext.define("App.store.administration.PreventiveCareMedications",{model:"App.model.administration.PreventiveCareMedications",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:"PreventiveCare.getGuideLineMedications",create:"PreventiveCare.addGuideLineMedications",destroy:"PreventiveCare.removeGuideLineMedications"}},remoteSort:!1,autoLoad:!1}),Ext.define("App.store.administration.ProviderCredentializations",{model:"App.model.administration.ProviderCredentialization",extend:"Ext.data.Store"}),Ext.define("App.store.administration.Services",{model:"App.model.administration.Services",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:"DataManager.getServices",create:"DataManager.addService",update:"DataManager.updateService"},reader:{totalProperty:"totals",root:"rows"},writer:{writeAllFields:!0},extraParams:{code_type:this.code_type,query:this.query,active:this.active}},autoSync:!0,remoteSort:!0,autoLoad:!1}),Ext.define("App.store.administration.TransactionLogs",{model:"App.model.administration.TransactionLog",extend:"Ext.data.Store"}),Ext.define("App.store.administration.User",{model:"App.model.administration.User",extend:"Ext.data.Store",autoLoad:!1}),Ext.define("App.view.administration.Layout",{extend:"App.ux.RenderPanel",id:"panelLayout",pageTitle:_("layout_form_editor"),pageLayout:"border",initComponent:function(){var a=this;a.currForm=null,a.currField=null,a.fieldsGridStore=Ext.create("App.store.administration.LayoutTree"),a.fieldXTypesStore=Ext.create("App.store.administration.XtypesComboModel"),a.formsGridStore=Ext.create("App.store.administration.FormsList"),a.parentFieldsStore=Ext.create("App.store.administration.ParentFields"),a.selectListoptionsStore=Ext.create("App.store.administration.FormListOptions"),a.selectListGrid=Ext.create("Ext.grid.Panel",{store:a.selectListoptionsStore,collapseMode:"mini",height:200,split:!0,border:!1,titleCollapse:!1,hideCollapseTool:!0,collapsible:!0,collapsed:!0,columns:[{text:_("name"),flex:1,sortable:!1,dataIndex:"option_name"},{text:_("value"),flex:1,sortable:!1,dataIndex:"option_value"}]}),a.fieldForm=Ext.create("Ext.form.Panel",{flex:2,border:!1,autoScroll:!0,fieldDefaults:{msgTarget:"side",labelWidth:100},defaults:{anchor:"100%"},items:[{fieldLabel:_("type"),xtype:"combo",name:"xtype",displayField:"name",valueField:"value",allowBlank:!1,editable:!1,store:a.fieldXTypesStore,queryMode:"local",margin:"5 5 5 10",itemId:"xtype",listeners:{scope:a,change:a.onXtypeChange}},{fieldLabel:_("child_of"),xtype:"combo",name:"parentId",displayField:"name",valueField:"value",editable:!1,hideTrigger:!0,allowBlank:!1,store:a.parentFieldsStore,queryMode:"local",margin:"5 5 5 10",emptyText:"None",itemId:"parentFields",listeners:{scope:a,expand:a.onParentFieldsExpand}},{xtype:"fieldset",itemId:"aditionalProperties",title:_("aditional_properties"),margin:"0 5 5 5",defaults:{anchor:"100%"},items:[{fieldLabel:_("title"),xtype:"textfield",name:"title",itemId:"title",allowBlank:!1,hidden:!0},{fieldLabel:_("field_label"),xtype:"textfield",name:"fieldLabel",itemId:"fieldLabel",hidden:!0},{fieldLabel:_("box_label"),xtype:"textfield",name:"boxLabel",itemId:"boxLabel",allowBlank:!1,hidden:!0},{fieldLabel:_("label_width"),xtype:"textfield",name:"labelWidth",itemId:"labelWidth",hidden:!0},{fieldLabel:_("hide_label"),xtype:"checkbox",name:"hideLabel",itemId:"hideLabel",hidden:!0},{fieldLabel:_("empty_text"),xtype:"textfield",name:"emptyText",itemId:"emptyText",hidden:!0},{fieldLabel:_("layout"),xtype:"textfield",name:"layout",itemId:"layout",hidden:!0},{fieldLabel:_("name"),xtype:"textfield",name:"name",itemId:"name",allowBlank:!1,hidden:!0,listeners:{scope:a,change:a.onNameValueChange}},{fieldLabel:_("input_value"),xtype:"textfield",name:"inputValue",itemId:"inputValue",hidden:!0},{fieldLabel:_("width"),xtype:"textfield",name:"width",itemId:"width",emptyText:"ei. 5 for 5px",hidden:!0},{fieldLabel:_("height"),xtype:"textfield",name:"height",itemId:"height",emptyText:"ei. 5 for 5px",hidden:!0},{fieldLabel:_("anchor"),xtype:"textfield",name:"anchor",itemId:"anchor",emptyText:"ei. 100%",hidden:!0},{fieldLabel:_("flex"),xtype:"checkbox",name:"flex",itemId:"flex",hidden:!0},{fieldLabel:_("collapsible"),xtype:"checkbox",name:"collapsible",itemId:"collapsible",hidden:!0},{fieldLabel:_("checkbox_toggle"),xtype:"checkbox",name:"checkboxToggle",itemId:"checkboxToggle",hidden:!0},{fieldLabel:_("collapsed"),xtype:"checkbox",name:"collapsed",itemId:"collapsed",hidden:!0},{fieldLabel:_("margin"),xtype:"textfield",name:"margin",itemId:"margin",emptyText:"ei. 5 5 5 5",hidden:!0},{fieldLabel:_("column_width"),xtype:"textfield",name:"columnWidth",itemId:"columnWidth",emptyText:"ei. .5",hidden:!0},{fieldLabel:_("is_required"),xtype:"checkbox",name:"allowBlank",itemId:"allowBlank",hidden:!0},{fieldLabel:_("min_length"),xtype:"numberfield",name:"minLength",itemId:"minLength",minValue:0,hidden:!0},{fieldLabel:_("max_length"),xtype:"numberfield",name:"maxLength",itemId:"maxLength",minValue:0,hidden:!0},{fieldLabel:_("value"),xtype:"textfield",name:"value",itemId:"value",hidden:!0},{fieldLabel:_("max_value"),xtype:"textfield",name:"maxValue",itemId:"maxValue",hidden:!0},{fieldLabel:_("min_value"),xtype:"textfield",name:"minValue",itemId:"minValue",hidden:!0},{fieldLabel:_("max_value"),xtype:"timefield",name:"maxValue",itemId:"timeMaxValue",hidden:!0},{fieldLabel:_("min_value"),xtype:"timefield",name:"minValue",itemId:"timeMinValue",hidden:!0},{fieldLabel:_("grow"),xtype:"checkbox",name:"grow",itemId:"grow",hidden:!0},{fieldLabel:_("grow_min"),xtype:"textfield",name:"growMin",itemId:"growMin",hidden:!0},{fieldLabel:_("grow_max"),xtype:"textfield",name:"growMax",itemId:"growMax",hidden:!0},{fieldLabel:_("increment"),xtype:"textfield",name:"increment",itemId:"increment",hidden:!0},{fieldLabel:_("list_options"),xtype:"mitos.listscombo",name:"list_id",itemId:"list_id",hidden:!0,allowBlank:!1,listeners:{scope:a,change:a.onSelectListSelect}},{fieldLabel:_("code"),xtype:"textfield",name:"code",itemId:"code",emptyText:"ei. SNOMED:254687942 or ICD10:H25.091",hidden:!0},{fieldLabel:_("item_id"),xtype:"textfield",name:"itemId",itemId:"itemId",emptyText:"sencha itemId",hidden:!0},{fieldLabel:_("action"),xtype:"textfield",name:"action",itemId:"action",emptyText:"sencha action",hidden:!0}]}]}),a.formContainer=Ext.create("Ext.panel.Panel",{title:_("field_configuration"),border:!0,split:!0,width:390,region:"east",layout:{type:"vbox",align:"stretch"},bodyStyle:"background-color:#fff!important",items:[a.fieldForm,a.selectListGrid],buttons:[{text:_("delete"),iconCls:"icoDeleteBlack",scope:a,handler:a.onFieldDelete},{text:_("reset"),iconCls:"icoReload",scope:a,handler:a.onFormReset},{text:_("save"),iconCls:"save",scope:a,handler:a.onFieldSave}],dockedItems:[{xtype:"toolbar",items:["->",{text:_("add_new"),iconCls:"icoAddRecord",scope:a,handler:a.onFormReset},"-",{text:_("add_child"),iconCls:"icoAddRecord",itemId:"addChild",disabled:!0,scope:a,handler:a.onAddChild},"-",{text:_("form_preview"),iconCls:"icoPreview",enableToggle:!0,listeners:{scope:a,toggle:a.onFormPreview}}]}]}),a.fieldsGrid=Ext.create("Ext.tree.Panel",{store:a.fieldsGridStore,region:"center",border:!0,sortable:!1,rootVisible:!1,title:_("field_editor_demographics"),viewConfig:{plugins:{ptype:"treeviewdragdrop",expandDelay:0,allowParentInsert:!1},listeners:{scope:a,drop:a.onDragDrop,itemkeydown:a.onFieldKeyDown}},columns:[{xtype:"treecolumn",text:_("field_type"),sortable:!1,dataIndex:"xtype",width:200,align:"left"},{text:_("title"),sortable:!1,dataIndex:"title",width:100,align:"left"},{text:_("label"),sortable:!1,dataIndex:"fieldLabel",flex:1,align:"left"}],listeners:{scope:a,selectionchange:a.onFieldsGridSelectionChange}}),a.formsGrid=Ext.create("Ext.grid.Panel",{title:_("form_list"),region:"west",store:a.formsGridStore,width:200,border:!0,split:!0,hideHeaders:!0,columns:[{dataIndex:"id",hidden:!0},{flex:1,sortable:!0,dataIndex:"name"}],listeners:{scope:a,itemclick:a.onFormGridItemClick}}),a.fromPreview=Ext.create("Ext.form.Panel",{region:"south",height:300,collapsible:!0,titleCollapse:!1,hideCollapseTool:!0,collapsed:!0,border:!0,split:!0,collapseMode:"header",bodyStyle:"padding: 5px",layout:"anchor",fieldDefaults:{msgTarget:"side"},tools:[{itemId:"refresh",type:"refresh",scope:a,handler:a.previewFormRender}]}),a.pageBody=[a.fieldsGrid,a.formsGrid,a.formContainer,a.fromPreview],a.callParent(arguments)},onFieldSave:function(){var a=this,b=a.fieldForm.getForm(),c=b.getRecord(),d=a.fieldsGridStore,e=d.getNodeById(c.data.parentId)||d.getRootNode(),f=b.getValues();b.isValid()&&(f.form_id=c.data.form_id,f.leaf="fieldcontainer"!=f.xtype&&"fieldset"!=f.xtype,c.set(f),""==c.data.id&&e.appendChild(c),a.fieldsGridStore.sync({success:function(b){a.previewFormRender(),a.loadCurrFormParentField(),""==c.data.id&&(c.set({id:b.proxy.reader.rawData.id}),c.commit()),a.fieldsGrid.getSelectionModel().select(c),a.msg("Sweet!",_("record_saved"))},failure:function(b){c.remove(),a.msg("Oops!",b.proxy.reader.rawData.message,!0),a.loadFieldsGrid()}}))},deleteField:function(a){var b=this;return a.childNodes.length>0?void b.msg(_("oops"),_("children_fields_must_be_remove_first"),!0):void Ext.Msg.show({title:_("please_confirm")+"...",icon:Ext.MessageBox.QUESTION,msg:_("delete_this_field"),buttons:Ext.Msg.YESNO,scope:this,fn:function(c){"yes"==c&&(a.remove(),b.fieldsGridStore.sync({success:function(){b.previewFormRender(),b.msg("Sweet!",_("record_removed"))},failure:function(a){b.msg("Oops!",a.proxy.reader.rawData.message,!0),b.loadFieldsGrid()}}))}})},onFieldKeyDown:function(a,b,c,d,e){e.getKey()==e.DELETE&&this.deleteField(b)},onFieldDelete:function(){var a=this,b=a.fieldForm.getForm(),c=b.getRecord();
a.deleteField(c)},onDragDrop:function(){var a=this;a.fieldsGridStore.sync({success:function(){a.previewFormRender(),a.msg(_("sweet"),_("field_updated"))},failure:function(b){Ext.Msg.alert(_("oops"),b.proxy.reader.rawData.error),a.loadFieldsGrid()}})},onFormReset:function(){var a=this,b=a.fieldForm,c=b.getForm(),d=a.fieldsGrid.getSelectionModel(),e=Ext.create("App.model.administration.LayoutTree",{form_id:a.currForm,parentId:"root"});d.deselectAll(),c.reset(),c.loadRecord(e)},onNameValueChange:function(a){a.setDisabled(0!=a.up("form").getForm().getRecord().data.id)},onAddChild:function(){var a=this,b=a.fieldForm,c=b.getForm(),d=a.fieldsGrid.getSelectionModel();d.deselectAll(),c.reset(),c.loadRecord(Ext.create("App.model.administration.LayoutTree",{form_id:a.currForm,parentId:a.currField}))},onFieldsGridSelectionChange:function(a,b){var c=this,d=c.fieldForm,e=d.getForm();b.length>0?(e.loadRecord(b[0]),c.currField=b[0].data.id,"fieldset"==b[0].data.xtype||"fieldcontainer"==b[0].data.xtype?c.formContainer.down("toolbar").getComponent("addChild").enable():c.formContainer.down("toolbar").getComponent("addChild").disable(),d.el.unmask()):c.onFormReset()},onFormGridItemClick:function(a,b){var c=this;c.currForm=b.get("id"),c.fieldsGrid.setTitle(_("field_editor")+" ("+b.get("name")+")"),c.loadFieldsGrid(),c.onFormReset()},onSelectListSelect:function(a,b){var c=this;c.selectListoptionsStore.load({params:{list_id:b}})},onParentFieldsExpand:function(a){a.picker.loadMask.destroy()},onXtypeChange:function(a,b){function c(a){for(var b=0;b<g.length;b++)a.find(g[b])?(f.getComponent(g[b]).show(),f.getComponent(g[b]).enable()):(f.getComponent(g[b]).hide(),f.getComponent(g[b]).disable())}var d=this;"combobox"==b?(d.selectListGrid.setTitle(_("select_list_options")),d.selectListGrid.expand(),d.selectListGrid.enable()):(d.selectListGrid.setTitle(""),d.selectListGrid.collapse(),d.selectListGrid.disable()),Array.prototype.find=function(a){for(var b=!1,c=0;c<this.length;c++)"function"==typeof a?a.test(this[c])&&(b||(b=[]),b.push(c)):this[c]===a&&(b||(b=[]),b.push(c));return b};var e,f=d.fieldForm.getComponent("aditionalProperties"),g=f.items.keys;e="fieldset"==b?["itemId","action","title","collapsible","collapsed","checkboxToggle","margin","columnWidth","layout"]:"fieldcontainer"==b?["itemId","action","fieldLabel","labelWidth","hideLabel","width","layout","margin","columnWidth"]:"combobox"==b?["itemId","action","name","width","emptyText","fieldLabel","hideLabel","labelWidth","margin","allowBlank","list_id"]:"checkbox"==b?["itemId","action","name","width","boxLabel","inputValue","fieldLabel","hideLabel","labelWidth","margin"]:"textfield"==b?["itemId","action","name","width","anchor","emptyText","fieldLabel","hideLabel","labelWidth","allowBlank","margin","minLength","maxLength"]:"textareafield"==b?["itemId","action","name","width","anchor","height","emptyText","fieldLabel","hideLabel","labelWidth","allowBlank","grow","growMin","growMax","margin","minLength","maxLength"]:"numberfield"==b?["itemId","action","name","width","value","emptyText","maxValue","minValue","increment","fieldLabel","labelWidth","hideLabel","margin"]:"timefield"==b?["itemId","action","name","width","value","emptyText","timeMaxValue","timeMinValue","increment","fieldLabel","labelWidth","hideLabel","margin"]:"radiofield"==b?["itemId","action","name","width","boxLabel","labelWidth","hideLabel","margin","inputValue"]:"datefield"==b||"mitos.datetime"==b?["itemId","action","name","width","value","layout","emptyText","fieldLabel","labelWidth","hideLabel","allowBlank","margin"]:"checkboxwithfamilyhistory"==b?["itemId","action","name","width","boxLabel","inputValue","fieldLabel","hideLabel","labelWidth","margin","code"]:["itemId","action","name","width","emptyText","fieldLabel","labelWidth","hideLabel","margin"],c(e)},onFormPreview:function(a,b){var c=this;b===!0?(c.fromPreview.expand(!1),c.previewFormRender()):c.fromPreview.collapse(!1)},previewFormRender:function(){var a=this,b=this.fromPreview;b.collapsed!==!0&&(b.el.mask(),a.getFormItems(b,a.currForm,function(){b.el.unmask()}))},loadFieldsGrid:function(){var a=this;a.fieldsGridStore.load({params:{currForm:a.currForm}}),a.loadCurrFormParentField(),a.previewFormRender(),a.fieldsGrid.doLayout()},loadCurrFormParentField:function(){var a=this;a.parentFieldsStore.load({params:{currForm:a.currForm}})},onActive:function(a){var b=this,c=b.formsGrid.getSelectionModel();null===b.currForm&&b.formsGridStore.load({filters:[{property:"active",value:1}],callback:function(a){c.select(a[0]),b.currForm=a[0].data.id,b.loadFieldsGrid(),b.onFormReset()}}),a(!0)}}),Ext.define("App.store.administration.XtypesComboModel",{model:"App.model.administration.XtypesComboModel",extend:"Ext.data.Store",proxy:{type:"direct",api:{read:"CombosData.getFiledXtypes"}},autoLoad:!0}),Ext.define("App.store.miscellaneous.OfficeNotes",{extend:"Ext.data.Store",model:"App.model.miscellaneous.OfficeNotes",autoLoad:!1}),Ext.define("App.store.miscellaneous.Amendments",{model:"App.model.miscellaneous.Amendment",extend:"Ext.data.Store"}),Ext.define("App.store.account.VoucherLine",{extend:"Ext.data.Store",model:"App.model.account.VoucherLine",remoteSort:!1,autoLoad:!1}),Ext.define("App.store.account.Voucher",{extend:"Ext.data.Store",model:"App.model.account.Voucher",remoteSort:!1,autoLoad:!1}),Ext.define("App.store.fees.Billing",{extend:"Ext.data.Store",model:"App.model.fees.Billing",autoLoad:!1}),Ext.define("App.store.fees.Checkout",{extend:"Ext.data.Store",model:"App.model.fees.Checkout",autoLoad:!1}),Ext.define("App.store.fees.EncountersPayments",{extend:"Ext.data.Store",model:"App.model.fees.EncountersPayments",autoLoad:!1}),Ext.define("App.store.fees.PaymentTransactions",{extend:"Ext.data.Store",model:"App.model.fees.PaymentTransactions",autoLoad:!1}),Ext.define("App.store.navigation.Navigation",{extend:"Ext.data.TreeStore",requires:["App.model.navigation.Navigation"],model:"App.model.navigation.Navigation"}),Ext.define("App.store.patient.encounter.snippetTree",{model:"App.model.patient.encounter.snippetTree",extend:"Ext.data.TreeStore"}),Ext.define("App.store.patient.encounter.Procedures",{model:"App.model.patient.encounter.Procedures",extend:"Ext.data.Store",autoLoad:!1}),Ext.define("App.store.patient.AdvanceDirectives",{extend:"Ext.data.Store",model:"App.model.patient.AdvanceDirective"}),Ext.define("App.store.patient.CptCodes",{extend:"Ext.data.Store",model:"App.model.patient.CptCodes",remoteSort:!1,autoLoad:!1}),Ext.define("App.store.patient.Dental",{extend:"Ext.data.Store",model:"App.model.patient.Dental",remoteSort:!1,autoLoad:!1}),Ext.define("App.store.patient.Disclosures",{extend:"Ext.data.Store",model:"App.model.patient.Disclosures",remoteSort:!1,autoLoad:!1}),Ext.define("App.store.patient.EncounterServices",{extend:"Ext.data.Store",model:"App.model.patient.EncounterService"}),Ext.define("App.store.patient.Encounters",{extend:"Ext.data.Store",requires:["App.model.patient.Encounter"],model:"App.model.patient.Encounter",remoteSort:!0}),Ext.define("App.store.patient.CVXCodes",{extend:"Ext.data.Store",requires:["App.model.patient.CVXCodes"],model:"App.model.patient.CVXCodes",remoteSort:!1,autoLoad:!1}),Ext.define("App.store.patient.ImmunizationCheck",{extend:"Ext.data.Store",model:"App.model.patient.ImmunizationCheck",remoteSort:!0,autoLoad:!1}),Ext.define("App.store.patient.LaboratoryTypes",{extend:"Ext.data.Store",model:"App.model.patient.LaboratoryTypes",remoteSort:!1}),Ext.define("App.store.patient.MeaningfulUseAlert",{extend:"Ext.data.Store",model:"App.model.patient.MeaningfulUseAlert",remoteSort:!0,autoLoad:!1}),Ext.define("App.store.patient.Notes",{extend:"Ext.data.Store",model:"App.model.patient.Notes",remoteSort:!1,autoLoad:!1}),Ext.define("App.store.patient.Patient",{extend:"Ext.data.Store",model:"App.model.patient.Patient",remoteSort:!0,autoLoad:!1}),Ext.define("App.store.patient.PatientArrivalLog",{extend:"Ext.data.Store",model:"App.model.patient.PatientArrivalLog",remoteSort:!0,autoLoad:!1}),Ext.define("App.store.patient.PatientCalendarEvents",{extend:"Ext.data.Store",model:"App.model.patient.PatientCalendarEvents",remoteSort:!1,autoLoad:!1}),Ext.define("App.store.patient.PatientDocuments",{extend:"Ext.data.Store",model:"App.model.patient.PatientDocuments",remoteSort:!1,autoLoad:!1,autoSync:!0}),Ext.define("App.store.patient.DismissedAlerts",{extend:"Ext.data.Store",model:"App.model.patient.DismissedAlerts",remoteSort:!1,autoLoad:!1,autoSync:!0}),Ext.define("App.store.patient.PatientLabsResults",{extend:"Ext.data.Store",model:"App.model.patient.PatientLabsResults",remoteSort:!1,autoLoad:!1}),Ext.define("App.store.patient.PatientsLabOrderItems",{extend:"Ext.data.Store",model:"App.model.patient.PatientsLabOrderItems",remoteSort:!1,autoLoad:!1}),Ext.define("App.store.patient.PatientsOrderObservations",{extend:"Ext.data.Store",model:"App.model.patient.PatientsOrderObservation",remoteSort:!1,autoLoad:!1}),Ext.define("App.store.patient.PatientsOrderResults",{extend:"Ext.data.Store",model:"App.model.patient.PatientsOrderResult",remoteSort:!1,autoLoad:!1}),Ext.define("App.store.patient.PatientsPrescriptionMedications",{extend:"Ext.data.Store",model:"App.model.patient.PatientsPrescriptionMedications",remoteSort:!1,autoLoad:!1}),Ext.define("App.store.patient.PatientsPrescriptions",{extend:"Ext.data.Store",model:"App.model.patient.PatientsPrescriptions",remoteSort:!1,autoLoad:!1}),Ext.define("App.store.patient.PatientsXrayCtOrders",{extend:"Ext.data.Store",model:"App.model.patient.PatientsXrayCtOrders",remoteSort:!1,autoLoad:!1}),Ext.define("App.store.patient.PreventiveCare",{extend:"Ext.data.Store",model:"App.model.patient.PreventiveCare",remoteSort:!1,autoLoad:!1}),Ext.define("App.store.patient.QRCptCodes",{extend:"Ext.data.Store",model:"App.model.patient.QRCptCodes",remoteSort:!1,autoLoad:!1}),Ext.define("App.store.patient.Referrals",{extend:"Ext.data.Store",model:"App.model.patient.Referral",autoLoad:!1}),Ext.define("App.store.patient.Surgery",{extend:"Ext.data.Store",model:"App.model.patient.Surgery",remoteSort:!1,autoLoad:!1}),Ext.define("App.store.patient.VectorGraph",{extend:"Ext.data.Store",requires:["App.model.patient.VectorGraph"],model:"App.model.patient.VectorGraph"}),Ext.define("App.store.patient.VisitPayment",{extend:"Ext.data.Store",requires:["App.model.patient.VisitPayment"],model:"App.model.patient.VisitPayment"}),Ext.define("App.store.patient.Vitals",{extend:"Ext.data.Store",requires:["App.model.patient.Vitals"],pageSize:10,model:"App.model.patient.Vitals"}),Ext.define("App.store.patient.charts.BMIForAge",{extend:"Ext.data.Store",requires:["App.model.patient.charts.BMIForAge"],model:"App.model.patient.charts.BMIForAge"}),Ext.define("App.store.patient.charts.HeadCircumferenceInf",{extend:"Ext.data.Store",requires:["App.model.patient.charts.HeadCircumferenceInf"],model:"App.model.patient.charts.HeadCircumferenceInf"}),Ext.define("App.store.patient.charts.LengthForAgeInf",{extend:"Ext.data.Store",requires:["App.model.patient.charts.LengthForAgeInf"],model:"App.model.patient.charts.LengthForAgeInf"}),Ext.define("App.store.patient.charts.StatureForAge",{extend:"Ext.data.Store",requires:["App.model.patient.charts.StatureForAge"],model:"App.model.patient.charts.StatureForAge"}),Ext.define("App.store.patient.charts.WeightForAge",{extend:"Ext.data.Store",requires:["App.model.patient.charts.WeightForAge"],model:"App.model.patient.charts.WeightForAge"}),Ext.define("App.store.patient.charts.WeightForAgeInf",{extend:"Ext.data.Store",requires:["App.model.patient.charts.WeightForAgeInf"],model:"App.model.patient.charts.WeightForAgeInf"}),Ext.define("App.store.patient.charts.WeightForRecumbentInf",{extend:"Ext.data.Store",requires:["App.model.patient.charts.WeightForRecumbentInf"],model:"App.model.patient.charts.WeightForRecumbentInf"}),Ext.define("App.store.patient.charts.WeightForStature",{extend:"Ext.data.Store",requires:["App.model.patient.charts.WeightForStature"],model:"App.model.patient.charts.WeightForStature"}),Ext.define("App.store.areas.PatientAreas",{extend:"Ext.data.Store",requires:["App.model.areas.PatientArea"],model:"App.model.areas.PatientArea",pageSize:10}),Ext.define("App.store.areas.PoolAreas",{extend:"Ext.data.Store",requires:["App.model.areas.PoolArea"],model:"App.model.areas.PoolArea"}),Ext.define("App.store.areas.PoolDropAreas",{extend:"Ext.data.Store",requires:["App.model.areas.PoolDropAreas"],pageSize:10,model:"App.model.areas.PoolDropAreas"}),Ext.define("App.controller.administration.AuditLog",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"AuditLogPanel",selector:"#AuditLogPanel"},{ref:"AuditLogGrid",selector:"#AuditLogGrid"},{ref:"AuditLogGridFromDateField",selector:"#AuditLogGridFromDateField"},{ref:"AuditLogGridToDateField",selector:"#AuditLogGridToDateField"},{ref:"AuditLogGridPatientLiveSearch",selector:"#AuditLogGridPatientLiveSearch"},{ref:"AuditLogGridFilterBtn",selector:"#AuditLogGridFilterBtn"},{ref:"AuditLogGridResetBtn",selector:"#AuditLogGridResetBtn"}],init:function(){var a=this;a.control({"#AuditLogPanel":{activate:a.onAuditLogPanelActivate},"#AuditLogGrid":{itemdblclick:a.onAuditLogGridItemDblClick},"#AuditLogGridPatientLiveSearch":{select:a.onAuditLogGridPatientLiveSearchSelect},"#AuditLogGridFilterBtn":{click:a.onAuditLogGridFilterBtnClick},"#AuditLogGridResetBtn":{click:a.onAuditLogGridResetBtnClick}})},onAuditLogGridItemDblClick:function(){},onAuditLogPanelActivate:function(a){this.doFilterAuditGrid(a.query("#AuditLogGridFilterBtn")[0])},onAuditLogGridPatientLiveSearchSelect:function(){},onAuditLogGridFilterBtnClick:function(a){this.doFilterAuditGrid(a)},onAuditLogGridResetBtnClick:function(a){a.up("toolbar").query("#AuditLogGridFromDateField")[0].setRawValue(""),a.up("toolbar").query("#AuditLogGridToDateField")[0].setValue(new Date),a.up("toolbar").query("#AuditLogGridPatientLiveSearch")[0].reset(),this.doFilterAuditGrid(a)},doFilterAuditGrid:function(a){var b=a.up("toolbar").query("#AuditLogGridFromDateField")[0],c=a.up("toolbar").query("#AuditLogGridToDateField")[0],d=a.up("toolbar").query("#AuditLogGridPatientLiveSearch")[0].getValue(),e=a.up("grid").getStore(),f=[{property:"date",operator:">=",value:b.getRawValue()+" 00:00:00"},{property:"date",operator:"<=",value:c.getRawValue()+" 23:59:59"}];d&&Ext.Array.push(f,{property:"pid",value:d}),b.isValid()&&c.isValid()&&(e.clearFilter(!0),e.filter(f))}}),Ext.define("App.controller.administration.CPT",{extend:"Ext.app.Controller",refs:[{ref:"CptAdminGrid",selector:"cptadmingrid"},{ref:"AdminCpt4CodeOnlyActiveBtn",selector:"#adminCpt4CodeOnlyActiveBtn"}],init:function(){var a=this;a.control({cptadmingrid:{activate:a.onCptAdminGridActive},"#adminCpt4CodeSearchField":{keyup:a.onAdminCpt4CodeSearchFieldKeyUp}})},onCptAdminGridActive:function(a){a.getStore().load()},onAdminCpt4CodeSearchFieldKeyUp:function(a){var b=this,c=b.getCptAdminGrid().getStore();b.dataQuery=a.getValue(),c.proxy.extraParams={onlyActive:b.getAdminCpt4CodeOnlyActiveBtn().pressed,query:b.dataQuery},c.loadPage(1)}}),Ext.define("App.controller.administration.DataPortability",{extend:"Ext.app.Controller",refs:[{ref:"DataPortabilityPanel",selector:"#DataPortabilityPanel"}],init:function(){var a=this;a.control({"#DataPortabilityExportBtn":{click:a.onDataPortabilityExportBtnClick}})},onDataPortabilityExportBtnClick:function(){var a=Ext.create("App.ux.ManagedIframe",{src:g("url")+"/dataProvider/DataPortability.php?token="+app.user.token+"&site="+g("site")});this.getDataPortabilityPanel().add(a),this.getDataPortabilityPanel().update(_("download_shortly"))}}),Ext.define("App.controller.administration.FacilityStructure",{extend:"Ext.app.Controller",refs:[{ref:"FacilityStructurePanel",selector:"#FacilityStructurePanel"},{ref:"FacilityStructureTreePanel",selector:"#FacilityStructureTreePanel"}],init:function(){var a=this;a.control({"#FacilityStructurePanel":{activate:a.onFacilityStructurePanelActivate}})},onFacilityStructurePanelActivate:function(){this.getFacilityStructureTreePanel().getStore().load()}}),Ext.define("App.controller.administration.HL7",{extend:"Ext.app.Controller",refs:[{ref:"HL7ServersPanel",selector:"hl7serverspanel"},{ref:"HL7ServersGrid",selector:"#hl7serversgrid"},{ref:"HL7ClientsGrid",selector:"#hl7clientsgrid"}],init:function(){var a=this;a.control({hl7serverspanel:{activate:a.onHL7ServersPanelActive},"#hl7serversgrid":{beforeedit:a.onHL7ServersGridBeforeEdit,validateedit:a.onHL7ServersGridValidateEdit},"#hl7serversgrid #addHL7ServerBtn":{click:a.onAddHL7ServerBtnClick},"#hl7serversgrid #removeHL7ServerBtn":{click:a.onRemoveHL7ServerBtnClick},"#hl7clientsgrid #addHL7ClientBtn":{click:a.onAddHL7ClientBtnClick},"#hl7clientsgrid #removeHL7ClientBtn":{click:a.onRemoveHL7ClientBtnClick}})},onAddHL7ServerBtnClick:function(){var a=this,b=a.getHL7ServersGrid(),c=b.getStore();b.editingPlugin.cancelEdit(),c.insert(0,{}),b.editingPlugin.startEdit(0,0)},onAddHL7ClientBtnClick:function(){var a=this,b=a.getHL7ClientsGrid(),c=b.getStore();b.editingPlugin.cancelEdit(),c.insert(0,{}),b.editingPlugin.startEdit(0,0)},onRemoveHL7ServerBtnClick:function(){},onRemoveHL7ClientBtnClick:function(){},serverStartHandler:function(a){HL7ServerHandler.start({id:a.data.id,ip:a.data.ip,port:a.data.port},function(b,c){a.set({online:c.result.online,token:c.result.token}),a.commit()})},serverStopHandler:function(a){HL7ServerHandler.stop({token:a.data.token,ip:a.data.ip,port:a.data.port},function(b,c){a.set({online:c.result.online}),a.commit()})},onHL7ServersPanelActive:function(){this.reloadStore()},reloadStore:function(){this.getHL7ServersGrid().getStore().load(),this.getHL7ClientsGrid().getStore().load()},onHL7ServersGridBeforeEdit:function(a,b){var c=a.editor.query("multitextfield")[0],d=b.record.data.allow_ips;Ext.Function.defer(function(){c.setValue(d)},10)},onHL7ServersGridValidateEdit:function(a,b){var c=a.editor.query("multitextfield")[0],d=c.getValue();b.record.set({allow_ips:d})}}),Ext.define("App.controller.administration.DecisionSupport",{extend:"Ext.app.Controller",refs:[{ref:"DecisionSupportAdminPanel",selector:"decisionSupportAdminPanel"},{ref:"DecisionSupportAdminGrid",selector:"#decisionSupportAdminGrid"},{ref:"DecisionSupportRuleAddBtn",selector:"#decisionSupportRuleAddBtn"},{ref:"DecisionSupportEditorTabPanel",selector:"#decisionSupportEditorTabPanel"},{ref:"DecisionSupportProcGrid",selector:"grid[action=PROC]"},{ref:"DecisionSupportProBGrid",selector:"grid[action=PROB]"},{ref:"DecisionSupportSociGrid",selector:"grid[action=SOCI]"},{ref:"DecisionSupportMediGrid",selector:"grid[action=MEDI]"},{ref:"DecisionSupportAlleGrid",selector:"grid[action=ALLE]"},{ref:"DecisionSupportLabGrid",selector:"grid[action=LAB]"},{ref:"DecisionSupportVitaGrid",selector:"grid[action=VITA]"},{ref:"DecisionSupportVitalCombo",selector:"#DecisionSupportVitalCombo"},{ref:"DecisionSupportSocialHistoryCombo",selector:"#DecisionSupportSocialHistoryCombo"}],init:function(){var a=this;a.control({"#decisionSupportAdminPanel":{activate:a.onDecisionSupportAdminPanelActive},"#decisionSupportRuleAddBtn":{click:a.onDecisionSupportRuleAddBtnClick},"#decisionSupportAdminGrid":{beforeedit:a.onDecisionSupportAdminGridBeforeEdit},"#DecisionSupportProcedureCombo":{select:a.onDecisionSupportProcedureComboSelect},"#DecisionSupportProblemCombo":{select:a.onDecisionSupportProblemComboSelect},"#DecisionSupportMedicationCombo":{select:a.onDecisionSupportMedicationComboSelect},"#DecisionSupportMedicationAllergyCombo":{select:a.onDecisionSupportMedicationAllergyComboSelect},"#DecisionSupportLabCombo":{select:a.onDecisionSupportLabComboSelect},"#DecisionSupportVitalAddBtn":{click:a.onDecisionSupportVitalAddBtnClick},"#DecisionSupportSocialHistoryAddBtn":{click:a.onDecisionSupportSocialHistoryAddBtnClick},"#DecisionSupportSocialHistoryCombo":{beforerender:a.onDecisionSupportSocialHistoryComboBeforeRender}})},onDecisionSupportAdminPanelActive:function(){this.getDecisionSupportAdminGrid().getStore().load()},onDecisionSupportRuleAddBtnClick:function(a){var b=a.up("grid");b.editingPlugin.cancelEdit(),b.getStore().insert(0,{create_date:new Date,update_date:new Date,create_uid:app.user.id,update_uid:app.user.id,active:1}),b.editingPlugin.startEdit(0,0)},onDecisionSupportAdminGridBeforeEdit:function(a,b){var c,d,e,f=a.editor,g=b.record,h=f.query("grid");for(this.getDecisionSupportEditorTabPanel().setActiveTab(0),e=0;e<h.length;e++)c=h[e],d=c.getStore(),d.grid=c,d.load({filters:[{property:"rule_id",value:g.data.id},{property:"concept_type",value:c.action}],callback:function(a){this.grid.setTitle(this.grid.initialConfig.title+" ("+a.length+")")}})},onDecisionSupportProcedureComboSelect:function(a,b){var c,d=a.up("grid"),e=d.getStore();d.editingPlugin.cancelEdit(),c=e.add({rule_id:this.getRuleId(),concept_type:d.action,concept_code:b[0].data.code,concept_text:b[0].data.code_text,concept_code_type:b[0].data.code_type}),d.editingPlugin.startEdit(c[0],2)},onDecisionSupportProblemComboSelect:function(a,b){var c,d=a.up("grid"),e=d.getStore();d.editingPlugin.cancelEdit(),c=e.add({rule_id:this.getRuleId(),concept_type:d.action,concept_code:b[0].data.ConceptId,concept_text:b[0].data.FullySpecifiedName,concept_code_type:b[0].data.CodeType}),d.editingPlugin.startEdit(c[0],2)},onDecisionSupportMedicationComboSelect:function(a,b){var c,d=a.up("grid"),e=d.getStore();d.editingPlugin.cancelEdit(),c=e.add({rule_id:this.getRuleId(),concept_type:d.action,concept_code:b[0].data.RXCUI,concept_text:b[0].data.STR,concept_code_type:b[0].data.CodeType}),d.editingPlugin.startEdit(c[0],2)},onDecisionSupportMedicationAllergyComboSelect:function(a,b){var c,d=a.up("grid"),e=d.getStore();d.editingPlugin.cancelEdit(),c=e.add({rule_id:this.getRuleId(),concept_type:d.action,concept_code:b[0].data.RXCUI,concept_text:b[0].data.STR,concept_code_type:b[0].data.CodeType}),d.editingPlugin.startEdit(c[0],2)},onDecisionSupportLabComboSelect:function(a,b){var c,d=a.up("grid"),e=d.getStore();d.editingPlugin.cancelEdit(),c=e.add({rule_id:this.getRuleId(),concept_type:d.action,concept_code:b[0].data.loinc_number,concept_text:b[0].data.loinc_name,concept_code_type:"LOINC"}),d.editingPlugin.startEdit(c[0],2)},onDecisionSupportVitalAddBtnClick:function(){var a,b=this.getDecisionSupportVitalCombo(),c=b.getStore(),d=c.findRecord("option_value",b.getValue()),e=b.up("grid"),f=e.getStore();e.editingPlugin.cancelEdit(),a=f.add({rule_id:this.getRuleId(),concept_type:e.action,concept_code:d.data.code,concept_text:d.data.option_name,concept_code_type:d.data.code_type}),e.editingPlugin.startEdit(a[0],2)},onDecisionSupportSocialHistoryAddBtnClick:function(){var a,b=this.getDecisionSupportSocialHistoryCombo(),c=b.getStore(),d=c.findRecord("option_value",b.getValue()),e=b.up("grid"),f=e.getStore();e.editingPlugin.cancelEdit(),a=f.add({rule_id:this.getRuleId(),concept_type:e.action,concept_code:d.data.code,concept_text:d.data.option_name,concept_code_type:d.data.code_type}),e.editingPlugin.startEdit(a[0],2)},onDecisionSupportSocialHistoryComboBeforeRender:function(a){a.getStore().on("load",function(a){a.insert(0,{code:"smoking_status",option_name:_("smoking_status"),option_value:"smoking_status",code_type:""})})},getRuleId:function(){return this.getDecisionSupportEditorTabPanel().up("form").getForm().getRecord().data.id},doRemoveRule:function(a){a.store.remove(a)},doRemoveRuleConcept:function(a){a.store.remove(a)}}),Ext.define("App.controller.administration.Practice",{extend:"Ext.app.Controller",refs:[{ref:"PracticePanel",selector:"practicepanel"}],init:function(){var a=this;a.control({"practicepanel grid":{activate:a.onPracticeGridPanelsActive},"practicepanel button[toggleGroup=insurance_number_group]":{toggle:a.onInsuranceNumberGroupToggle},"practicepanel toolbar > #addBtn":{click:a.onAddBtnClick}})},onPracticeGridPanelsActive:function(a){a.getStore().load()},onAddBtnClick:function(a){var b=a.up("grid"),c=b.getStore();b.editingPlugin.cancelEdit(),c.insert(0,{active:1}),b.editingPlugin.startEdit(0,0)},onInsuranceNumberGroupToggle:function(a,b){var c=a.up("grid");b?(c.view.features[0].enable(),c.getStore().group(a.action)):c.view.features[0].disable()}}),Ext.define("App.controller.administration.ReferringProviders",{extend:"Ext.app.Controller",refs:[{ref:"ReferringProvidersPanel",selector:"referringproviderspanel"},{ref:"ReferringProviderAddBtn",selector:"#referringProviderAddBtn"}],init:function(){var a=this;a.control({"#referringProviderAddBtn":{click:a.onReferringProviderAddBtnClick}})},onReferringProviderAddBtnClick:function(a){var b=a.up("grid");b.editingPlugin.cancelEdit(),b.getStore().insert(0,{create_date:new Date,update_date:new Date,create_uid:app.user.id,update_uid:app.user.id,active:1}),b.editingPlugin.startEdit(0,0)}}),Ext.define("App.controller.administration.Specialties",{extend:"Ext.app.Controller",refs:[{ref:"SpecialtiesPanel",selector:"specialtiespanel"},{ref:"SpecialtiesAddBtn",selector:"#specialtiesAddBtn"}],init:function(){var a=this;a.control({"#specialtiesAddBtn":{click:a.onSpecialtiesAddBtnClick}})},onSpecialtiesAddBtnClick:function(a){var b=a.up("grid");b.editingPlugin.cancelEdit(),b.getStore().insert(0,{create_date:new Date,update_date:new Date,create_uid:app.user.id,update_uid:app.user.id,active:1}),b.editingPlugin.startEdit(0,0)}}),Ext.define("App.controller.administration.TemplatePanels",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"TemplatePanelsWindow",selector:"#TemplatePanelsWindow"},{ref:"TemplatePanelsGrid",selector:"#TemplatePanelsGrid"},{ref:"TemplatePanelsCombo",selector:"#TemplatePanelsCombo"},{ref:"SoapTemplatesBtn",selector:"#SoapTemplatesBtn"},{ref:"encounterPanel",selector:"#encounterPanel"},{ref:"soapPanel",selector:"#soapPanel"},{ref:"soapForm",selector:"#soapForm"}],init:function(){var a=this;a.control({viewport:{encounterload:a.onEncounterLoad},"#soapPanel":{activate:a.onSoapPanelActivate,afterrender:a.onSoapPanelAfterRender},"#TemplatePanelsCombo":{select:a.onTemplatePanelsComboSelect},"#SoapTemplatesBtn":{click:a.onSoapTemplatesBtnClick},"#TemplatePanelsAddBtn":{click:a.onTemplatePanelsAddBtnClick},"#TemplatePanelsCancelBtn":{click:a.onTemplatePanelsCancelBtnClick}})},onEncounterLoad:function(a){this.getTemplatePanelsWindow()||Ext.create("App.view.patient.windows.TemplatePanels");var b=this,c=b.getTemplatePanelsCombo().getStore();c.load({filters:[{property:"specialty_id",value:a.get("specialty_id")},{property:"active",value:1}]})},onSoapPanelAfterRender:function(){this.getSoapForm().getDockedItems('toolbar[dock="bottom"]')[0].insert(0,{xtype:"button",text:_("templates"),itemId:"SoapTemplatesBtn"})},onSoapPanelActivate:function(){var a=this.getTemplatePanelsCombo().getStore().data.items.length>0,b=this.getSoapTemplatesBtn();a?(b.disabled=!1,b.setDisabled(!1),b.setTooltip(_("clinical_templates"))):(b.disabled=!0,b.setDisabled(!0),b.setTooltip(_("no_templates_found")))},onSoapTemplatesBtnClick:function(){this.doTemplatePanelsWindowShow()},onTemplatePanelsComboSelect:function(a,b){var c=this,d=c.getTemplatePanelsGrid(),e=d.getSelectionModel(),f=b[0].templates();d.reconfigure(f),f.load({callback:function(){e.selectAll()}})},doTemplatePanelsWindowShow:function(){return this.getTemplatePanelsGrid().getStore().removeAll(),this.getTemplatePanelsCombo().reset(),this.getTemplatePanelsWindow().show()},onTemplatePanelsAddBtnClick:function(){var a=this,b=a.getTemplatePanelsCombo(),c=a.getTemplatePanelsGrid().getSelectionModel().getSelection();if(b.isValid())return 0===c.length?void app.msg(_("oops"),_("no_templates_to_add"),!0):void Ext.Msg.show({title:_("wait"),msg:_("add_templates_message"),buttons:Ext.Msg.YESNO,icon:Ext.Msg.QUESTION,fn:function(b){"yes"==b&&(a.doAddTemplates(c),a.getTemplatePanelsWindow().close())}})},doAddTemplates:function(templates){for(var i=0;i<templates.length;i++){var type=templates[i].get("template_type"),data=eval("("+templates[i].data.template_data+")");if(data)switch(type){case"LAB":App.app.getController("patient.LabOrders").doAddOrderByTemplate(data);break;case"RAD":App.app.getController("patient.RadOrders").doAddOrderByTemplate(data);break;case"RX":App.app.getController("patient.RxOrders").doAddOrderByTemplate(data);break;default:say("Error: no template_type found -- "+type);continue}else say("Error: data eval issue -- "+templates[i].data.template_data)}},onTemplatePanelsCancelBtnClick:function(){this.getTemplatePanelsWindow().close()}}),Ext.define("App.controller.administration.Users",{extend:"Ext.app.Controller",refs:[{ref:"AdminUsersPanel",selector:"#AdminUsersPanel"},{ref:"AdminUserGridPanel",selector:"#AdminUserGridPanel"}],init:function(){var a=this;a.control({"#AdminUserGridPanel":{beforeedit:a.onAdminUserGridPanelBeforeEdit},"#UserGridEditFormProviderCredentializationActiveBtn":{click:a.onUserGridEditFormProviderCredentializationActiveBtnClick},"#UserGridEditFormProviderCredentializationInactiveBtn":{click:a.onUserGridEditFormProviderCredentializationInactiveBtnClick}})},onAdminUserGridPanelBeforeEdit:function(a,b){var c=a.editor.down("grid"),d=c.getStore(),e=[{property:"provider_id",value:b.record.data.id}],f={};d.clearFilter(!0),b.record.data.id>0&&""!=b.record.data.npi&&(f={providerId:b.record.data.id,fullList:!0},Ext.Array.push(e,{property:"provider_id",value:null})),d.load({filters:e,params:f})},onUserGridEditFormProviderCredentializationActiveBtnClick:function(a){for(var b=a.up("grid").getStore(),c=b.data.items,d=Ext.Date.format(new Date,"Y-m-d"),e=0;e<c.length;e++)c[e].set({start_date:d,end_date:"9999-12-31",active:!0})},onUserGridEditFormProviderCredentializationInactiveBtnClick:function(a){for(var b=a.up("grid").getStore(),c=b.data.items,d=new Date,e=Ext.Date.format(Ext.Date.subtract(d,Ext.Date.DAY,1),"Y-m-d"),f=0;f<c.length;f++)c[f].set({start_date:e,end_date:e,active:!1})}}),Ext.define("App.controller.areas.FloorPlan",{extend:"Ext.app.Controller",refs:[{ref:"FloorPlanPanel",selector:"#FloorPlanPanel"},{ref:"FloorPlanPatientZonePanel",selector:"#FloorPlanPatientZonePanel"},{ref:"FloorPlanAreasCombo",selector:"#FloorPlanAreasCombo"},{ref:"FloorPlanPatientZoneDetailWindow",selector:"#FloorPlanPatientZoneDetailWindow"},{ref:"FloorPlanPatientZoneDetailRemovePatientBtn",selector:"#FloorPlanPatientZoneDetailRemovePatientBtn"},{ref:"FloorPlanPatientZoneAssignmentWindow",selector:"#FloorPlanPatientZoneAssignmentWindow"},{ref:"FloorPlanPatientZoneAssignmentCombo",selector:"#FloorPlanPatientZoneAssignmentCombo"},{ref:"FloorPlanPatientProviderAssignmentCombo",selector:"#FloorPlanPatientProviderAssignmentCombo"}],init:function(){var a=this;a.control({"#FloorPlanPanel":{activate:a.onFloorPlanPanelActivate,deactivate:a.onFloorPlanPanelDeactivate},"#FloorPlanPatientZoneDetailRemovePatientBtn":{click:a.onFloorPlanPatientZoneDetailRemovePatientBtnClick},"#FloorPlanAreasCombo":{select:a.onFloorPlanAreasComboSelect},"#FloorPlanPatientZoneAssignmentCancelBtn":{click:a.onFloorPlanPatientZoneAssignmentCancelBtnClick},"#FloorPlanPatientZoneAssignmentSaveBtn":{click:a.onFloorPlanPatientZoneAssignmentSaveBtnClick},"#FloorPlanPatientZoneAssignmentCombo":{beforeselect:a.onFloorPlanPatientZoneAssignmentComboBeforeSelect}}),a.floorPlanZonesStore=Ext.create("App.store.administration.FloorPlanZones")},onFloorPlanPanelActivate:function(){null==this.getFloorPlanAreasCombo().getValue()?this.renderZones():this.setZones()},onFloorPlanPanelDeactivate:function(){this.getFloorPlanPatientZoneDetailWindow()&&this.getFloorPlanPatientZoneDetailWindow().close()},onFloorPlanPatientZoneDetailRemovePatientBtnClick:function(a){var b=this,c=a.up("window");b.unAssignPatient(c.zone,c.zone.data),c.close()},onFloorPlanAreasComboSelect:function(a,b){var c=this;c.loadZones(b[0],function(){c.setZones()})},renderZones:function(){var a=this,b=a.getFloorPlanAreasCombo();b.getStore().load({callback:function(c){c.length>0?(b.setValue(c[0].data.id),a.onFloorPlanAreasComboSelect(b,c)):(b.setValue(""),a.getFloorPlanPatientZonePanel().removeAll())}})},createZone:function(a){var b,c=this;b=c.getFloorPlanPatientZonePanel().add({xtype:"splitbutton",text:a.data.title,scale:a.data.scale,itemId:a.data.id,style:{"border-color":a.data.border_color,"background-color":a.data.bg_color},x:a.data.x,y:a.data.y,width:a.data.width,height:a.data.height,scope:c,handler:c.onZoneClicked,tooltip:_("patient_name")+": [empty]",listeners:{scope:c,render:c.initializeZone,arrowclick:c.onZoneArrowClicked},pid:null,zoneId:a.data.id,priority:null,patientZoneId:null}),b.record=a
},loadZones:function(a,b){var c=this;c.getFloorPlanPatientZonePanel().removeAll(),c.floorPlanZonesStore.load({params:{floor_plan_id:a.data.id},scope:c,callback:function(a){for(var d=0;d<a.length;d++)c.createZone(a[d]);b()}})},initializeZone:function(a){var b=this;a.dragZone=Ext.create("Ext.dd.DragZone",a.getEl(),{ddGroup:"patientPoolAreas",getDragData:function(){var b,c=a.btnEl.dom;return c?(b=c.cloneNode(!0),b.id=Ext.id(),a.dragData={sourceEl:c,repairXY:Ext.fly(c).getXY(),ddel:b,patientData:a.data,zone:a}):!1},getRepairXY:function(){return this.dragData.repairXY},b4MouseDown:function(a){this.autoOffset(a.getPageX(),a.getPageY())}}),a.dragZone.lock(),a.dropZone=Ext.create("Ext.dd.DropZone",a.getEl(),{ddGroup:"patientPoolAreas",notifyOver:function(){return null==a.pid?Ext.dd.DropZone.prototype.dropAllowed:Ext.dd.DropZone.prototype.dropNotAllowed},notifyDrop:function(c,d,e){a.data=e.patientData,e.zone&&b.unAssignPatient(e.zone,a.data),b.assignPatient(a,a.data)}})},onZoneClicked:function(a){app.setPatient(a.data.pid,a.data.name,null,function(){a.data.eid?app.openEncounter(a.data.eid):app.openPatientSummary()})},onZoneArrowClicked:function(a){var b=this;if(b.getFloorPlanPatientZoneDetailWindow()||Ext.create("Ext.Window",{width:300,closeAction:"hide",itemId:"FloorPlanPatientZoneDetailWindow",tpl:new Ext.XTemplate('<div class="zoneSummaryContainer">   <div class="zoneSummaryArea">       <tpl if="this.patientImg(image)">','           <img src="{image}" height="96" width="96">       <tpl else>','           <img src="'+app.patientImage+'" height="96" width="96">',"       </tpl>","       <p>Name: {name}</p>       <p>DOB: {DOB}</p>       <p>Age: {age.str}</p>       <p>Sex: {sex}</p>   </div></div>",{patientImg:function(a){return null!=a&&""!=a}}),buttons:[{text:_("remove_patient"),itemId:"FloorPlanPatientZoneDetailRemovePatientBtn"}]}),a.data){var c=b.getFloorPlanPatientZoneDetailWindow();c.zone=a,c.update(a.data.patient),c.show(),c.alignTo(a.getEl(),"tl-tr?"),c.focus()}},assignPatient:function(a,b){var c=this,d={zone_id:a.zoneId,pid:b.pid};PatientZone.addPatientToZone(d,function(d){b.patientZoneId=d.data.id,app.msg("Sweet!",b.name+" "+_("successfully_moved")+"."),c.setZone(a,b)})},unAssignPatient:function(a,b){var c=this;PatientZone.removePatientFromZone({id:b.patientZoneId},function(){c.unSetZone(a)})},setZone:function(a,b){a.pid=b.pid,a.priority=b.priority,a.patientZoneId=b.patientZoneId,a.dropZone&&a.dropZone.lock(),a.dragZone&&a.dragZone.unlock(),a.setTooltip(_("patient_name")+":"+b.name),a.addCls(b.priority),a.addCls("zone-in-use"),a.data=b},unSetZone:function(a){a.pid=null,a.data=null,a.dropZone&&a.dropZone.unlock(),a.dragZone&&a.dragZone.lock(),a.setTooltip(_("patient_name")+": [empty]"),a.removeCls(a.priority),a.removeCls("zone-in-use"),a.data=null},setZones:function(){var a,b,c=this,d=c.getFloorPlanPatientZonePanel(),e=c.getFloorPlanAreasCombo().getValue(),f=d.items.items;PatientZone.getPatientsZonesByFloorPlanId(e,function(e){f=d.items.items,b=e;for(var g=0;g<f.length;g++)c.unSetZone(f[g]);for(var h=0;h<b.length;h++)a=d.getComponent(b[h].zoneId),a.data=b[h],c.setZone(a,b[h])})},setFloorPlan:function(){},promptPatientZoneAssignment:function(a,b){var c=this;c.getFloorPlanPatientZoneAssignmentWindow()||Ext.create("Ext.window.Window",{title:_("patient_zone_assignment"),itemId:"FloorPlanPatientZoneAssignmentWindow",items:[{xtype:"combobox",width:300,margin:10,itemId:"FloorPlanPatientZoneAssignmentCombo",queryMode:"local",valueField:"id",displayField:"display",fieldLabel:_("zone"),labelAlign:"top",editable:!1,store:Ext.create("Ext.data.Store",{sorters:[{property:"title"}],fields:[{name:"id",type:"int"},{name:"title",type:"string"},{name:"display",type:"string",convert:function(a,b){return b.data.in_use?'<span style="text-decoration: line-through; color: #c1c1c1">'+b.data.title+"</span> ("+_("inuse")+")":b.data.title}},{name:"in_use",type:"bool"}]})},{xtype:"activeproviderscombo",margin:"0 10 10 10",width:300,fieldLabel:_("provider"),labelAlign:"top",itemId:"FloorPlanPatientProviderAssignmentCombo"}],buttons:[{text:_("cancel"),itemId:"FloorPlanPatientZoneAssignmentCancelBtn"},{text:_("save"),itemId:"FloorPlanPatientZoneAssignmentSaveBtn"}]}),FloorPlans.getFloorPlanZonesByFloorPlanId(b,function(a){var b=c.getFloorPlanPatientZoneAssignmentCombo();b.reset(),b.getStore().loadData(a)}),c.getFloorPlanPatientZoneAssignmentWindow().pid=a,c.getFloorPlanPatientZoneAssignmentWindow().show()},onFloorPlanPatientZoneAssignmentCancelBtnClick:function(){this.getFloorPlanPatientZoneAssignmentWindow().close()},onFloorPlanPatientZoneAssignmentSaveBtnClick:function(){var a=this.getFloorPlanPatientZoneAssignmentCombo().getValue(),b=this.getFloorPlanPatientProviderAssignmentCombo().getValue(),c=this.getFloorPlanPatientZoneAssignmentWindow();a&&null!=a&&PatientZone.addPatientToZone({zone_id:a,provider_id:b,pid:c.pid},function(){app.msg("Sweet!",_("patient_successfully_assigned_to_zone"))}),c.close()},onFloorPlanPatientZoneAssignmentComboBeforeSelect:function(a,b){return!b.data.in_use}}),Ext.define("App.controller.dashboard.Dashboard",{extend:"Ext.app.Controller",refs:[{ref:"DashboardRenderPanel",selector:"#DashboardPanel"},{ref:"DashboardPanel",selector:"portalpanel"},{ref:"DashboardLeftColumn",selector:"#DashboardColumn1"},{ref:"DashboardRightColumn",selector:"#DashboardColumn2"}],addLeftPanel:function(a,b,c){var d;return d=c?this.getDashboardLeftColumn().insert(c,{xtype:"portlet",title:a,items:[b]}):this.getDashboardLeftColumn().add({xtype:"portlet",title:a,items:[b]})},addRightPanel:function(a,b,c){var d;return d=c?this.getDashboardRightColumn().insert(c,{xtype:"portlet",title:a,items:[b]}):this.getDashboardRightColumn().add({xtype:"portlet",title:a,items:[b]})},getColumns:function(){return this.getDashboardPanel().items}}),Ext.define("App.controller.dashboard.panel.NewResults",{extend:"App.controller.dashboard.Dashboard",init:function(){if(a("view_dashboard_new_results")){var b=this;b.control({portalpanel:{render:b.onDashboardPanelBeforeRender},"#DashboardPanel":{activate:b.onDashboardPanelActivate},"#DashboardNewResultsGrid":{itemdblclick:b.onDashboardNewResultsGridItemDoubleClick}}),b.addRef([{ref:"DashboardRenderPanel",selector:"#DashboardPanel"},{ref:"DashboardNewResultsGrid",selector:"#DashboardNewResultsGrid"}])}},onDashboardNewResultsGridItemDoubleClick:function(a,b){a.el.mask(_("please_wait")),app.setPatient(b.data.pid,null,null,function(){app.openPatientSummary(),app.onMedicalWin("laboratories"),a.el.unmask()})},onDashboardPanelActivate:function(){this.getDashboardNewResultsGrid().getStore().load()},onDashboardPanelBeforeRender:function(){this.addRightPanel(_("new_results"),Ext.create("App.view.dashboard.panel.NewResults"))}}),Ext.define("App.controller.dashboard.panel.DailyVisits",{extend:"App.controller.dashboard.Dashboard",init:function(){if(a("view_dashboard_daily_visits")){var b=this;b.control({portalpanel:{render:b.onDashboardPanelBeforeRender},"#DashboardPanel":{activate:b.onDashboardPanelActivate}}),b.addRef([{ref:"DashboardRenderPanel",selector:"#DashboardPanel"},{ref:"DashboardDailyVisitsChart",selector:"#DashboardDailyVisitsChart"}])}},onDashboardPanelActivate:function(){this.loadChart()},onDashboardPanelBeforeRender:function(){this.addRightPanel(_("daily_visits"),Ext.create("App.view.dashboard.panel.DailyVisits"))},loadChart:function(){var a,b,c,d=this,e=d.getDashboardDailyVisitsChart().getStore(),f=[];Encounter.getTodayEncounters(function(d){var g=d;for(b=0;b<g.length;b++){a=Ext.Date.parse(g[b].service_date,"Y-m-d H:i:s").setMinutes(0,0,0);var h=!1;for(c=0;c<f.length;c++)f[c].time==a&&(f[c].total=f[c].total+1,h=!0);h||f.push({total:1,time:a})}e.loadData(f)})}}),Ext.define("App.controller.miscellaneous.Amendments",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"AmendmentsPanel",selector:"#AmendmentsPanel"},{ref:"AmendmentsGrid",selector:"#AmendmentsGrid"},{ref:"AmendmentDetailsWindow",selector:"#AmendmentDetailsWindow"},{ref:"AmendmentDetailsForm",selector:"#AmendmentDetailsForm"},{ref:"AmendmentDetailsDataGrid",selector:"#AmendmentDetailsDataGrid"},{ref:"AmendmentDetailsResponseMessageField",selector:"#AmendmentDetailsResponseMessageField"},{ref:"AmendmentDetailsApproveBtn",selector:"#AmendmentDetailsApproveBtn"},{ref:"AmendmentDetailsDenyBtn",selector:"#AmendmentDetailsDenyBtn"},{ref:"AmendmentDetailsResponseText",selector:"#AmendmentDetailsResponseText"},{ref:"AmendmentDetailsUserLiveSearch",selector:"#AmendmentDetailsUserLiveSearch"},{ref:"AmendmentDetailsAssignBtn",selector:"#AmendmentDetailsAssignBtn"}],init:function(){var b=this;if(b.control({"#AmendmentsPanel":{activate:b.onAmendmentsPanelActivate},"#AmendmentsGrid":{itemdblclick:b.onAmendmentsPanelItemDblClick},"#AmendmentDetailsDenyBtn":{click:b.onAmendmentDetailsDenyBtnClick},"#AmendmentDetailsApproveBtn":{click:b.onAmendmentDetailsApproveBtnClick},"#AmendmentDetailsAssignBtn":{click:b.onAmendmentDetailsAssignBtnClick}}),a("amendments_access")){b.cronSkip=2;var c=App.app.getController("Cron"),d=2;c.checkForUnreadAmendments=function(){d++,d&&d%b.cronSkip!==0||Amendments.getUnViewedAmendments(a("amendments_view_unassigned"),function(a){if(a.total>0){for(var b=[],c=0;c<a.data.length;c++)Ext.Array.push(b,a.data[c].id);app.notification.add("new_amendment_notification",_("pending_amendment")+" ("+a.total+")",b,"miscellaneous.Amendments","onNewAmendmentClick")}else app.notification.remove("new_amendment_notification")})},c.addCronFn("me.checkForUnreadAmendments()")}},onAmendmentsPanelActivate:function(){var b=this.getAmendmentsGrid().getStore(),c=[{property:"assigned_to_uid",value:app.user.id}];b.clearFilter(!0),a("amendments_view_unassigned")&&Ext.Array.push(c,{property:"assigned_to_uid",value:"0"}),b.filter(c)},updateIsViewed:function(a){a.data.is_viewed===!1&&Amendments.updateAmendment({id:a.data.id,is_viewed:!0})},updateIsRead:function(a){a.data.is_read===!1&&Amendments.updateAmendment({id:a.data.id,is_read:!0})},onNewAmendmentClick:function(){this.getController("Navigation").goTo("App.view.miscellaneous.Amendments")},onAmendmentsPanelItemDblClick:function(b,c){this.getAmendmentDetailsWindow()||Ext.create("App.view.miscellaneous.AmendmentDetails"),this.getAmendmentDetailsWindow().show();var d=this,e=d.getAmendmentDetailsForm().getForm(),f=d.getAmendmentDetailsDataGrid(),h=f.getStore(),i=[];if(Ext.Object.each(c.data.amendment_data,function(a,b){for(var c=0;c<b.length;c++)b[c].data_key=a,b[c].approved=!0,Ext.Array.push(i,b[c])}),h.removeAll(),i.length>0?(f.show(),h.loadData(i)):f.hide(),d.getAmendmentDetailsUserLiveSearch().reset(),e.reset(!0),e.loadRecord(c),"W"==c.data.amendment_status)d.getAmendmentDetailsUserLiveSearch().setVisible(a("amendments_assign")),d.getAmendmentDetailsAssignBtn().setVisible(a("amendments_assign")),d.getAmendmentDetailsApproveBtn().setDisabled(!0),d.getAmendmentDetailsDenyBtn().setDisabled(!a("amendments_response")),d.getAmendmentDetailsResponseText().hide(),d.getAmendmentDetailsResponseText().setText(""),app.setPatient(c.data.pid,null,null,function(b){return null===b.pid?(app.msg(_("oops"),_("patient_not_found"),!0),void d.getAmendmentDetailsApproveBtn().setDisabled(!a("amendments_response"))):(d.getAmendmentDetailsApproveBtn().setDisabled(!1),void app.openPatientSummary())});else{d.getAmendmentDetailsUserLiveSearch().setVisible(!1),d.getAmendmentDetailsAssignBtn().setVisible(!1),d.getAmendmentDetailsApproveBtn().setDisabled(!0),d.getAmendmentDetailsDenyBtn().setDisabled(!0),d.getAmendmentDetailsResponseText().show();var j="";"A"==c.data.amendment_status?j+=_("approved")+" - "+Ext.Date.format(c.data.response_date,g("date_time_display_format")):"D"==c.data.amendment_status?j+=_("denied")+" - "+Ext.Date.format(c.data.response_date,g("date_time_display_format")):"C"==c.data.amendment_status&&(j+=_("canceled")+" - "+Ext.Date.format(c.data.cancel_date,g("date_time_display_format"))),d.getAmendmentDetailsResponseText().setText(j)}},onAmendmentDetailsDenyBtnClick:function(){var a=this.getAmendmentDetailsForm().getForm(),b=a.getRecord(),c=this.getAmendmentDetailsResponseMessageField(),d=this.getAmendmentDetailsDataGrid().getStore(),e=d.data.items,f={};if(c.allowBlank=!1,c.isValid()){if(e.length>0)for(var g=0;g<e.length;g++){e[g].set({approved:!1});var h=e[g].data.data_key;f[h]||(f[h]=[]),delete e[g].data.data_key,Ext.Array.push(f[h],e[g].data)}b.set({amendment_data:f,is_synced:!1,response_uid:app.user.id,response_date:new Date,update_uid:app.user.id,update_date:new Date,amendment_status:"D",response_message:this.getAmendmentDetailsResponseMessageField().getValue()}),b.save({callback:function(){app.msg(_("sweet"),_("record_saved"))}}),this.getAmendmentDetailsWindow().close()}},onAmendmentDetailsApproveBtnClick:function(){var a=this,b=a.getAmendmentDetailsForm().getForm(),c=b.getRecord(),d=a.getAmendmentDetailsResponseMessageField(),e=a.getAmendmentDetailsDataGrid().getStore(),f=e.data.items,g={};d.allowBlank=!0,Ext.Msg.show({title:_("wait"),msg:_("amendment_approval_confirmation"),buttons:Ext.Msg.YESNO,icon:Ext.Msg.QUESTION,fn:function(b){if("yes"==b){if(f.length>0)for(var d=0;d<f.length;d++){var e=f[d].data.data_key;g[e]||(g[e]=[]),delete f[d].data.data_key,Ext.Array.push(g[e],f[d].data)}c.set({amendment_data:g,is_synced:!1,response_uid:app.user.id,response_date:new Date,update_uid:app.user.id,update_date:new Date,amendment_status:"A",response_message:a.getAmendmentDetailsResponseMessageField().getValue()}),a.doUpdatePatientData(g,c.data.pid,c.data.eid),c.save({callback:function(){app.msg(_("sweet"),_("record_saved")),app.setPatient(c.data.pid,null,null,function(){app.openPatientSummary()})}}),a.getAmendmentDetailsWindow().close()}}})},onAmendmentDetailsAssignBtnClick:function(){var a=this,b=a.getAmendmentDetailsForm().getForm().getRecord(),c=a.getAmendmentDetailsUserLiveSearch(),d=c.getValue();c.isValid()&&(a.getAmendmentDetailsWindow().mask(_("saving")),b.set({assigned_date:new Date,assigned_to_uid:d}),b.save({success:function(){app.msg(_("sweet"),_("amendment_assigned")),a.getAmendmentDetailsWindow().unmask(),a.getAmendmentDetailsWindow().close()},failure:function(){app.msg(_("opps"),_("record_error"),!0),a.getAmendmentDetailsWindow().unmask()}}))},doUpdatePatientData:function(a){if(a.demographics){var b=app.getActivePanel();if("PatientSummaryPanel"==b.itemId){for(var c={},d=0;d<a.demographics.length;d++)c[a.demographics[d].field_name]=a.demographics[d].new_value;app.patient.record.set(c),app.patient.record.save()}}}}),Ext.define("App.controller.AlwaysOnTop",{extend:"Ext.app.Controller",alwaysOnTopManager:null,init:function(){this.control({"component{isFloating()}":{render:function(a,b){this.onComponentRender(a,b)}}})},onComponentRender:function(a){a.alwaysOnTop&&(this.alwaysOnTopManager||(this.alwaysOnTopManager=Ext.create("Ext.ZIndexManager")),this.alwaysOnTopManager.register(a)),this.alwaysOnTopManager&&Ext.ZIndexManager.zBase>this.alwaysOnTopManager.zseed&&(this.alwaysOnTopManager.zseed=this.alwaysOnTopManager.getNextZSeed())}}),Ext.define("App.controller.Cron",{extend:"Ext.app.Controller",cronTaskInterval:10,fns:["app.getPatientsInPoolArea()","me.checkSession()"],init:function(){var me=this;me.cronTask={scope:me,run:function(){for(var i=0;i<me.fns.length;i++)eval(me.fns[i])},interval:1e3*me.cronTaskInterval}},start:function(){Ext.TaskManager.start(this.cronTask)},stop:function(){Ext.TaskManager.stop(this.cronTask)},addCronFn:function(a){this.fns.push(a)},removeCronFn:function(a){Ext.Array.remove(this.fns,a)},checkSession:function(){authProcedures.ckAuth(function(a,b){b.result.authorized||window.location.reload()})}}),Ext.define("App.controller.DualScreen",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"DualViewport",selector:"#dualViewport"},{ref:"Header",selector:"#RenderPanel-header"},{ref:"TabPanel",selector:"#dualViewport tabpanel"}],isDual:!1,appMask:null,init:function(){var a=this;a._loggedout=!1,a._enable=!0,a._screen=null,a.control({"#dualViewport":{render:a.onDualViewportRender,beforerender:a.onDualViewportBeforeRender}})},startDual:function(){var a=this;a.enable(),(null==a._screen||a._screen.closed)&&(a._screen=window.open("./?dual=true","_target","fullscreen=yes,menubar=no",!0))},stopDual:function(){this.disable(),this._screen.close(),this._screen=null},enable:function(){this._enable=!0},disable:function(){this._enable=!1},isEnabled:function(){return this._enable},onDualViewportBeforeRender:function(){this.isDual=!0,window.app=window.opener.app,app.on("patientset",this.onPatientSet,this),app.on("patientunset",this.onPatientUnset,this)},onDualViewportRender:function(){Ext.get("mainapp-loading").remove(),Ext.get("mainapp-loading-mask").fadeOut({remove:!0}),this.onPatientUnset(!1),this.initHandShakeTask()},onPatientSet:function(){var a,b;this.isDual&&!this._loggedout&&(a=app.patient.name+" - #"+app.patient.pid+" - "+app.patient.age.str,b=this.getActiveStore(),this.unmask(),this.getHeader().update(a),b.clearFilter(!0),b.filter([{property:"pid",value:app.patient.pid}]))},onPatientUnset:function(a){var b;this.isDual&&!this._loggedout&&(b=this.getActiveStore(),this.mask(_("no_patient_selected")),this.getHeader().update(""),a!==!1&&(b.clearFilter(!0),b.filter([{property:"pid",value:app.patient.pid}])))},getActiveStore:function(){var a=this.getTabPanel().getActiveTab();return a.getStore?a.getStore():"patientdocumentspanel"==a.xtype||"patientimmunizationspanel"==a.xtype||"patientmedicationspanel"==a.xtype||"patientimmunizationspanel"==a.xtype?a.down("grid").getStore():void 0},mask:function(a){var b=this;null==b.appMask?b.appMask=new Ext.LoadMask(b.getDualViewport(),{msg:'<img height="86" width="254" src="resources/images/gaiaehr-med-dark.png"><p>'+a+"</p>",maskCls:"dualAppMask",cls:"dualAppMaskMsg",autoShow:!0}):(b.appMask.show(),b.appMask.msgEl.query("p")[0].innerHTML=a)},unmask:function(){this.appMask&&this.appMask.hide()},initHandShakeTask:function(){var a=this,b={run:function(){null==window.opener&&window.close(),window.opener.app.logged||a._loggedout||(a.mask(_("logged_out")),a._loggedout=!0)},interval:1e3,scope:a};Ext.TaskManager.start(b)}}),Ext.define("App.controller.Header",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"AppHeaderRight",selector:"#AppHeaderRight"},{ref:"AppHeaderLeft",selector:"#AppHeaderLeft"}],init:function(){},addHeaderBtn:function(a,b,c){a=a||{},b=b||"left",c=c||0;var d="left"==b?this.getAppHeaderLeft():this.getAppHeaderRight(),e=Ext.apply(a,{xtype:"button",scale:"large",margin:"0 3 0 0",cls:"headerLargeBtn",padding:0});d.insert(c,e)}}),Ext.define("App.controller.InfoButton",{extend:"Ext.app.Controller",requires:[],init:function(){var a=this;a.medline="http://apps2.nlm.nih.gov/medlineplus/services/mpconnect.cfm?",a.language=_("lang_code").match(/^es/)?"es":"en",a.codeSytem={ICD10CM:"2.16.840.1.113883.6.90","ICD10-CM":"2.16.840.1.113883.6.90","ICD-10-CM":"2.16.840.1.113883.6.90",ICD9CM:"2.16.840.1.113883.6.103","ICD9-CM":"2.16.840.1.113883.6.103","ICD-9-CM":"2.16.840.1.113883.6.103",SNOMED:"2.16.840.1.113883.6.96",RXCUI:"2.16.840.1.113883.6.88",NDC:"2.16.840.1.113883.6.69",LN:"2.16.840.1.113883.6.1",LOINC:"2.16.840.1.113883.6.1"},a.control({})},doGetInfo:function(a,b){var c=this,d=c.medline;d+="mainSearchCriteria.v.c="+a,d+="&mainSearchCriteria.v.cs="+c.codeSytem[b],d+="&informationRecipient.languageCode.c="+c.language,window.open(d,"_blank","toolbar=no, scrollbars=yes, resizable=yes, top=10, left=10, width=1000, height=600")},doGetInfoByUrl:function(a){window.open(a,"_blank","toolbar=no, scrollbars=yes, resizable=yes, top=10, left=10, width=1000, height=600")},getInformationWindow:function(a){Ext.widget("window",{title:_("information"),autoShow:!0,width:800,height:600,data:a,autoScroll:!0,tpl:new Ext.XTemplate('<div class="externalinfo-container"><h1>{feed.title._value}</h1><h2>{feed.subtitle._value}</h2><p><span>Author:</span> {feed.author.name._value}</h1><p><span>Updated:</span> {feed.updated._value}</h1><div class="entries">   <tpl for="feed.entry"><div class="externalinfo-entry"><h3><a href="{link.href}">{title._value}</a></h3>{summary._value}</div>   </tpl></div></div>')})}}),Ext.define("App.controller.KeyCommands",{extend:"Ext.app.Controller",refs:[{ref:"viewport",selector:"viewport"}],enabled:!1,init:function(){this.enableKeyCommands()},enableKeyCommands:function(){this.enabled||(Ext.getBody().on("keyup",this.onKeyUp,this),this.enabled=!0)},disableKeyCommands:function(){Ext.getBody().un("keyup",this.onKeyUp,this),this.enabled=!1},onKeyUp:function(a,b){if(a.getKey()!=a.ALT&&a.getKey()!=a.CTRL&&a.getKey()!=a.SHIFT){if(a.altKey||a.ctrlKey||a.shiftKey){var c="KEY-";a.altKey&&(c+="ALT-"),a.ctrlKey&&(c+="CTRL-"),a.shiftKey&&(c+="SHIFT-"),c+=String.fromCharCode(a.getCharCode()),app.fireEvent(c,a,b)}if(a.altKey&&a.ctrlKey&&a.shiftKey){var d="";if(a.getKey()==a.A)d="allergies";else if(a.getKey()==a.I)d="immunization";else if(a.getKey()==a.M)d="medications";else if(a.getKey()==a.P)d="activeproblems";else if(a.getKey()==a.R)d="laboratories";else if(a.getKey()==a.C)d="social";else if(a.getKey()==a.W){var e=Ext.getCmp(a.getTarget(null,null,!0).id);if("window"==e.xtype)e.close();else{var f=e.up("window");f&&f.close()}return}""!=d&&app.onMedicalWin(d)}}}}),Ext.define("App.controller.LogOut",{extend:"Ext.app.Controller",requires:["App.ux.ActivityMonitor"],init:function(){var me=this;me.activityMonitorInterval=10,me.activityMonitorMaxInactive=eval(g("timeout")),me.cron=me.getController("Cron"),me.control({"treepanel[action=mainNav]":{beforerender:me.onNavigationBeforeRender},"menuitem[action=logout]":{click:me.appLogout}})},onNavigationBeforeRender:function(a){a.getStore().on("load",function(){this.ActivityMonitor(!0)},this)},ActivityMonitor:function(a){var b=this;a?(App.ux.ActivityMonitor.init({interval:1e3*b.activityMonitorInterval,maxInactive:6e4*b.activityMonitorMaxInactive,verbose:!1,controller:b,isInactive:function(){b.startAutoLogout()}}),b.cron.start(),App.ux.ActivityMonitor.start()):(b.cron.stop(),App.ux.ActivityMonitor.stop())},cancelAutoLogout:function(){var a=this;app.el.unmask(),a.LogoutTask.stop(a.LogoutTaskTimer),a.logoutWarinigWindow.destroy(),delete a.logoutWarinigWindow,App.ux.ActivityMonitor.start()},startAutoLogout:function(){var a=this;a.logoutWarinigWindow=Ext.create("Ext.Container",{floating:!0,cls:"logout-warning-window",html:"Logging Out in...",seconds:10}).show(),app.el.mask(),a.LogoutTask||(a.LogoutTask=new Ext.util.TaskRunner),a.LogoutTaskTimer?a.LogoutTask.start(a.LogoutTaskTimer):a.LogoutTaskTimer=a.LogoutTask.start({scope:a,run:a.logoutCounter,interval:1e3})},logoutCounter:function(){var a=this,b=a.logoutWarinigWindow.seconds-1;0>=b?(a.logoutWarinigWindow.update("Logging Out... Bye! Bye!"),a.appLogout(!0)):(a.logoutWarinigWindow.update("Logging Out in "+b+"sec"),a.logoutWarinigWindow.seconds=b)},appLogout:function(a){var b=this,c=b.getController("Navigation");a===!0?(b.ActivityMonitor(!1),app.patient.pid&&Patient.unsetPatient(app.patient.pid),authProcedures.unAuth(function(){c.navigateTo("App.view.login.Login",null,!0),window.onbeforeunload=null,window.location.reload()})):Ext.Msg.show({title:_("please_confirm")+"...",msg:_("are_you_sure_to_quit")+" GaiaEHR?",icon:Ext.MessageBox.QUESTION,buttons:Ext.Msg.YESNO,fn:function(a){"yes"==a&&(app.patient.pid&&Patient.unsetPatient(app.patient.pid),authProcedures.unAuth(function(){b.ActivityMonitor(!1),c.navigateTo("App.view.login.Login",null,!0),window.onbeforeunload=null,window.location.reload()}))}})}}),Ext.define("App.controller.Navigation",{extend:"Ext.app.Controller",requires:["Ext.util.History"],refs:[{ref:"viewport",selector:"viewport"},{ref:"mainNavPanel",selector:"panel[action=mainNavPanel]"},{ref:"mainNav",selector:"treepanel[action=mainNav]"},{ref:"patientPoolArea",selector:"panel[action=patientPoolArea]"},{ref:"appFooter",selector:"container[action=appFooter]"},{ref:"appFooterDataView",selector:"container[action=appFooter] > dataview"}],navKey:"ALT",navKeysEnabled:!1,init:function(){var a=this;a.navKey=this.setNavKey(this.navKey),a.activePanel=null,a.altIsDown=!1,Ext.util.History.init(),Ext.util.History.on("change",a.urlChange,a),a.navKeysEnabled&&a.enableNavKeys(),a.control({viewport:{patientset:a.onPatientSet,patientunset:a.onPatientUnset},"treepanel[action=mainNav]":{selectionchange:a.onNavigationNodeSelected,beforerender:a.onNavigationBeforeRender},"panel[action=mainNavPanel]":{render:a.onNavRender,beforecollapse:a.onNavCollapsed,beforeexpand:a.onNavExpanded}})},getTopNavigation:function(){return app},onNavigationBeforeRender:function(a){a.getStore().on("load",this.afterNavigationLoad,this)},navigateToDefault:function(){this.navigateTo("App.view.dashboard.Dashboard")},navigateTo:function(a,b,c){var d=c!==!0?this.getUrlParams():[];d[0]=a,this.setUrlParams(d),"function"==typeof b&&b(!0)},goTo:function(a,b,c){this.navigateTo(a,b,c)},onNavigationNodeSelected:function(a,b){0<b.length&&b[0].data.leaf&&this.navigateTo(b[0].data.id)},afterNavigationLoad:function(){var a=this;app.removeAppMask(),a.navigateToDefault(),Ext.Function.defer(function(){a.doSortCategory("administration")},500)},doSortCategory:function(a){var b=this.getMainNav().getStore().getNodeById(a);b&&b.sort(function(a,b){var c=a.get("text"),d=b.get("text");return c>d?1:d>c?-1:0})},setUrlParams:function(a){var b="#!/";a.length>0&&(b+=a.join("/")),window.location=b},getUrlParams:function(){return window.location.hash?window.location.hash.substring(1).replace(/!\//,"").split("/"):[]},urlChange:function(a){var b=this,c=b.getMainNav(),d=c.getStore(),e=b.getUrlParams()[0],f=b.getNavRefByClass(e),g=b.getViewport().MainPanel.getLayout(),h=c.getSelectionModel(),i=d.getNodeById(e);this.url=a,h.select(i),"App.view.login.Login"!=e&&("undefined"==typeof b[f]?(b.getViewport().MainPanel.el.mask(),b[f]=b.getViewport().MainPanel.add(Ext.create(e))):b[f].isDestroyed&&b[f].render(),b.getViewport().fireEvent("beforenavigation",b[f]),b[f].onActive(function(a){b.getViewport().MainPanel.el.unmask(),a&&(b.activePanel=g.setActiveItem(b[f]))}),b.getViewport().fireEvent("afternavigation",b[f]),app.doLayout())},goBack:function(){Ext.util.History.back()},getPanelByCls:function(a){var b=this,c=b.getNavRefByClass(a);return"undefined"==typeof b[c]?b[c]=b.getViewport().MainPanel.add(Ext.create(a)):b[c]},getNavRefByClass:function(a){return a.replace(/\./g,"_")},getClassByNavRef:function(a){return a.replace(/_/g,".")},onNavRender:function(a){a.collapsed?this.onNavCollapsed():this.onNavExpanded()},onNavCollapsed:function(){var a=this,b=a.getPatientPoolArea(),c=a.getAppFooter(),d=a.getAppFooterDataView();d&&(c.setHeight(60),d.show()),a.getMainNavPanel().isCollapsed=!0,b.hide()},onNavExpanded:function(){var a=this,b=a.getPatientPoolArea(),c=a.getAppFooter(),d=a.getAppFooterDataView();d&&(c.setHeight(30),d.hide()),a.getMainNavPanel().isCollapsed=!1,b.show()},onPatientSet:function(){},onPatientUnset:function(){},captureDownKey:function(a){return a.getKey()==a.ALT?void(this.altIsDown=!0):void(this.altIsDown&&this.getViewport().fireEvent("navkey",a,a.getKey()))},captureUpKey:function(a){a.getKey()==a.ALT&&(this.altIsDown=!1)},setNavKey:function(a){return this.navKey=Ext.EventObjectImpl[a]},getNavKey:function(){return this.navKey},getExtraParams:function(){for(var params=this.getUrlParams(),i=0;i<params.length;i++)if(params[i].match(/^{.*}$/))return eval("("+params[i]+")");return!1},enableNavKeys:function(){Ext.getBody().on("keydown",this.captureDownKey,this),Ext.getBody().on("keyup",this.captureUpKey,this)},disabledNavKeys:function(){Ext.getBody().un("keydown",this.captureDownKey,this),Ext.getBody().un("keyup",this.captureUpKey,this)}}),Ext.define("App.controller.ScriptCam",{extend:"Ext.app.Controller",refs:[{ref:"webCamWindow",selector:"scriptcamwindow"},{ref:"ScriptCamCameras",selector:"combobox[action=ScriptCamCameras]"}],init:function(){var a=this;a.userMedia=null,a.control({"button[action=onWebCam]":{click:a.onWebCamClick},"button[action=onCaptureImage]":{click:a.onCapture}})},onWebCamClick:function(a){var b=this;b.action=a.up("panel").action,b.imgPanel=a.up("panel"),navigator.getMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia,navigator.getMedia({video:!0,audio:!1},b.onConnect,b.onError)},onConnect:function(a){var b=app.getController("ScriptCam");b.win=Ext.create("Ext.window.Window",{title:"...",html:'<video id="WebCamVideo" width="640" height="480"></video>',autoShow:!0,buttons:["->",{text:_("capture_img"),action:"onCaptureImage"}],listeners:{close:function(){a.stop()}}}),b.video=document.getElementById("WebCamVideo"),b.video.src=window.URL?window.URL.createObjectURL(a):a,b.video.play()},onError:function(a){say(a)},onClose:function(){var a=document.getElementById("WebCamVideo");a.src=window.URL?window.URL.createObjectURL(stream):stream,a.play()},onCapture:function(){var a,b=this,c=document.createElement("canvas"),d=c.getContext("2d"),e=b.imgPanel.down("image"),f=b.imgPanel.down("textareafield");c.width=b.video.videoWidth/4,c.height=b.video.videoHeight/4,d.drawImage(b.video,0,0,c.width,c.height),a=c.toDataURL(),c.remove(),e.setSrc(a),f.setValue(a),b.win.close()}}),Ext.define("App.controller.Support",{extend:"Ext.app.Controller",requires:["App.ux.ManagedIframe"],refs:[{ref:"viewport",selector:"viewport"}],init:function(){var a=this;a.control({"button[action=supportBtn]":{click:a.supportBtnClick}})},supportBtnClick:function(a){var b=this;b.getSupportWindow(),b.winSupport.remove(b.miframe),b.winSupport.add(b.miframe=Ext.create("App.ux.ManagedIframe",{src:a.src}))},getSupportWindow:function(){var a=this;a.winSupport?a.winSupport.show():(a.winSupport=Ext.create("Ext.window.Window",{title:_("support"),closeAction:"hide",bodyStyle:"background-color: #ffffff; padding: 5px;",animateTarget:a.Footer,resizable:!1,draggable:!1,maximizable:!1,autoScroll:!0,maximized:!0,dockedItems:{xtype:"toolbar",dock:"top",items:["-",{text:"List issues",iconCls:"list",action:"supportBtn",url:"http://GaiaEHR.org/projects/GaiaEHR001/issues"},"-",{text:"Create an issue",iconCls:"icoAddRecord",action:"supportBtn",url:"http://GaiaEHR.org/projects/GaiaEHR001/issues/new"}]}}),a.winSupport.show())}}),Ext.define("App.controller.patient.ActiveProblems",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"ActiveProblemsGrid",selector:"patientactiveproblemspanel"},{ref:"ActiveProblemLiveSearch",selector:"#activeProblemLiveSearch"},{ref:"AddActiveProblemBtn",selector:"patientactiveproblemspanel #addActiveProblemBtn"}],init:function(){var a=this;a.control({patientactiveproblemspanel:{activate:a.onActiveProblemsGridActive},"#activeProblemLiveSearch":{select:a.onActiveProblemLiveSearchSelect},"#ActiveProblemStatusCombo":{select:a.onActiveProblemStatusComboSelect},"patientactiveproblemspanel #addActiveProblemBtn":{click:a.onAddActiveProblemBtnClick}})},onAddActiveProblemBtnClick:function(){var a=this,b=a.getActiveProblemsGrid(),c=b.getStore();b.editingPlugin.cancelEdit(),c.insert(0,{pid:app.patient.pid,eid:app.patient.eid,uid:app.user.id,created_uid:app.user.id,create_date:new Date,begin_date:new Date}),b.editingPlugin.startEdit(0,0)},onActiveProblemsGridActive:function(a){var b=a.getStore();b.clearFilter(!0),b.filter([{property:"pid",value:app.patient.pid}])},onActiveProblemLiveSearchSelect:function(a,b){var c=a.up("form").getForm(),d=c.getRecord();d.set({code:b[0].data.ConceptId,code_type:b[0].data.CodeType})},onActiveProblemStatusComboSelect:function(a,b){var c=a.up("form").getForm(),d=c.getRecord();d.set({status_code:b[0].data.code,status_code_type:b[0].data.code_type})}}),Ext.define("App.controller.patient.AdvanceDirectives",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"AdvanceDirectiveGridPanel",selector:"patientadvancedirectivepanel"},{ref:"AdvanceDirectiveAddBtn",selector:"#AdvanceDirectiveAddBtn"},{ref:"AdvanceDirectiveReviewBtn",selector:"#AdvanceDirectiveReviewBtn"}],init:function(){var a=this;a.control({patientadvancedirectivepanel:{activate:a.onAdvanceDirectiveGridPanelActivate},"#AdvanceDirectiveAddBtn":{click:a.onAdvanceDirectiveAddBtnClick},"#AdvanceDirectiveReviewBtn":{click:a.onAdvanceDirectiveReviewBtnClick}})
},onAdvanceDirectiveGridPanelActivate:function(a){var b=a.getStore();b.clearFilter(!0),b.filter([{property:"pid",value:app.patient.pid}])},onAdvanceDirectiveAddBtnClick:function(a){var b=a.up("grid"),c=b.getStore();b.editingPlugin.cancelEdit();var d=c.insert(0,{pid:app.patient.pid,eid:app.patient.eid,create_date:new Date,created_uid:app.user.id,start_date:new Date,verified_date:new Date,verified_uid:app.user.id});b.editingPlugin.startEdit(d[0],0)},onAdvanceDirectiveReviewBtnClick:function(){}}),Ext.define("App.controller.patient.Allergies",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"AllergiesGrid",selector:"patientallergiespanel"},{ref:"AddAllergyBtn",selector:"patientallergiespanel #addAllergyBtn"},{ref:"ReviewAllergiesBtn",selector:"patientallergiespanel #reviewAllergiesBtn"},{ref:"ActiveAllergyBtn",selector:"patientallergiespanel #activeAllergyBtn"},{ref:"AllergyCombo",selector:"#allergyCombo"},{ref:"AllergyTypesCombo",selector:"#allergyTypesCombo"},{ref:"AllergySearchCombo",selector:"#allergySearchCombo"},{ref:"AllergyMedicationCombo",selector:"#allergyMedicationCombo"},{ref:"AllergyReactionCombo",selector:"#allergyReactionCombo"},{ref:"AllergySeverityCombo",selector:"#allergySeverityCombo"},{ref:"AllergyLocationCombo",selector:"#allergyLocationCombo"}],init:function(){var a=this;a.control({patientallergiespanel:{activate:a.onAllergiesGridActivate},"patientallergiespanel #addAllergyBtn":{click:a.onAddAllergyBtnClick},"patientallergiespanel #activeAllergyBtn":{toggle:a.onActiveAllergyBtnToggle},"patientallergiespanel #reviewAllergiesBtn":{toggle:a.onReviewAllergiesBtnClick},"#allergyTypeCombo":{select:a.onAllergyTypeComboSelect},"#allergyMedicationCombo":{select:a.onAllergyLiveSearchSelect},"#allergyLocationCombo":{change:a.onAllergyLocationComboChange},"#allergySearchCombo":{select:a.onAllergySearchComboSelect},"#allergyReactionCombo":{select:a.onAllergyReactionComboSelect},"#allergySeverityCombo":{select:a.onAllergySeverityComboSelect},"#allergyStatusCombo":{select:a.onAllergyStatusComboSelect}})},onAllergySearchComboSelect:function(a,b){var c=a.up("form").getForm().getRecord();c.set({allergy_code:b[0].data.allergy_code,allergy_code_type:b[0].data.allergy_code_type})},onAllergyReactionComboSelect:function(a,b){var c=a.up("form").getForm().getRecord();c.set({reaction_code:b[0].data.code,reaction_code_type:b[0].data.code_type})},onAllergySeverityComboSelect:function(a,b){var c=a.up("form").getForm().getRecord();c.set({severity_code:b[0].data.code,severity_code_type:b[0].data.code_type})},onAllergyStatusComboSelect:function(a,b){var c=a.up("form").getForm().getRecord();c.set({status_code:b[0].data.code,status_code_type:b[0].data.code_type})},onAllergyLiveSearchSelect:function(a,b){var c=a.up("form").getForm();c.getRecord().set({allergy:b[0].data.STR,allergy_code:b[0].data.RXCUI,allergy_code_type:b[0].data.CodeType})},onAllergyTypeComboSelect:function(a,b){var c=this,d=b[0],e=d.data.code,f="419511003"==e||"416098002"==e||"59037007"==e;c.getAllergyMedicationCombo().setVisible(f),c.getAllergyMedicationCombo().setDisabled(!f),c.getAllergySearchCombo().setVisible(!f),c.getAllergySearchCombo().setDisabled(f),f?c.getAllergyMedicationCombo().reset():c.getAllergySearchCombo().store.load(),a.up("form").getForm().getRecord().set({allergy_type_code:d.data.code,allergy_type_code_type:d.data.code_type})},onAllergyLocationComboChange:function(a){var b,c=this,d=a.getValue();"Skin"==d?b=80:"Local"==d?b=81:"Abdominal"==d?b=82:"Systemic / Anaphylactic"==d&&(b=83),c.getAllergyReactionCombo().getStore().load({params:{list_id:b}})},onAllergiesGridActivate:function(){var a=this.getAllergiesGrid().getStore();a.clearFilter(!0),a.filter([{property:"pid",value:app.patient.pid}])},onAddAllergyBtnClick:function(){var a=this,b=a.getAllergiesGrid(),c=b.getStore();b.editingPlugin.cancelEdit(),c.insert(0,{created_uid:app.user.id,uid:app.user.id,pid:app.patient.pid,eid:app.patient.eid,create_date:new Date,begin_date:new Date}),b.editingPlugin.startEdit(0,0)},onActiveAllergyBtnToggle:function(a,b){var c=this,d=c.getAllergiesGrid().getStore();d.load(b?{filters:[{property:"pid",value:app.patient.pid},{property:"status",value:"Active"}]}:{filters:[{property:"pid",value:app.patient.pid}]})},beforeAllergyEdit:function(a,b){this.allergieMedication.setValue(b.record.data.allergy)},onReviewAllergiesBtnClick:function(){var a=this.getController("patient.encounter.Encounter").getEncounterRecord();a.set({review_allergies:!0}),a.save({success:function(){app.msg("Sweet!",_("items_to_review_save_and_review"))},failure:function(){app.msg("Oops!",_("items_to_review_entry_error"))}})}}),Ext.define("App.controller.patient.AppointmentRequests",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"AppointmentRequestWindow",selector:"#AppointmentRequestWindow"},{ref:"AppointmentRequestGrid",selector:"#AppointmentRequestGrid"},{ref:"AppointmentRequestForm",selector:"#AppointmentRequestForm"},{ref:"AppointmentRequestAddBtn",selector:"#AppointmentRequestAddBtn"},{ref:"AppointmentRequestRequestedField",selector:"#AppointmentRequestRequestedField"}],init:function(){var a=this;a.control({viewport:{beforeencounterload:a.onAppEncounterLoad},"#AppointmentRequestGrid":{itemdblclick:a.onAppointmentRequestGridItemDblClick},"#AppointmentRequestWindow":{close:a.onAppointmentRequestWindowClose},"#AppointmentRequestAddBtn":{click:a.onAppointmentRequestAddBtnClick},"#AppointmentRequestSaveBtn":{click:a.onAppointmentRequestSaveBtnClick},"#AppointmentRequestCancelBtn":{click:a.onAppointmentRequestCancelBtnClick},"#AppointmentRequestDateField > button":{click:a.onAppointmentRequestDateFieldButtonsClick},"#AppointmentRequestProcedureFieldSet > combobox":{select:a.onAppointmentRequestProcedureFieldSetCombosSelect}})},onAppointmentRequestGridItemDblClick:function(a,b){this.getEditWindow(b)},onAppEncounterLoad:function(a){this.getAppointmentRequestGrid().reconfigure(a.appointmentrequests()),a.appointmentrequests().load()},onAppointmentRequestDateFieldButtonsClick:function(a){var b,c=new Date;switch(a.action){case"1D":b=Ext.Date.add(c,Ext.Date.DAY,1);break;case"1W":b=Ext.Date.add(c,Ext.Date.DAY,7);break;case"2W":b=Ext.Date.add(c,Ext.Date.DAY,14);break;case"3W":b=Ext.Date.add(c,Ext.Date.DAY,21);break;case"1M":b=Ext.Date.add(c,Ext.Date.MONTH,1);break;case"3M":b=Ext.Date.add(c,Ext.Date.MONTH,3);break;case"6M":b=Ext.Date.add(c,Ext.Date.MONTH,6);break;case"1Y":b=Ext.Date.add(c,Ext.Date.YEAR,1);break;case"2Y":b=Ext.Date.add(c,Ext.Date.YEAR,2);break;case"3Y":b=Ext.Date.add(c,Ext.Date.YEAR,3);break;default:b=c}this.getAppointmentRequestRequestedField().setValue(b)},onAppointmentRequestAddBtnClick:function(){var a=Ext.create("App.model.patient.AppointmentRequest",{pid:app.patient.pid,eid:app.patient.eid,requested_uid:app.user.id,create_uid:app.user.id,create_date:new Date});this.getEditWindow(a)},onAppointmentRequestProcedureFieldSetCombosSelect:function(a,b){var c=this.getAppointmentRequestForm().getForm().getRecord(),d={};d[a.name]=b[0].data.FullySpecifiedName,d[a.name+"_code"]=b[0].data.ConceptId,d[a.name+"_code_type"]=b[0].data.CodeType,c.set(d)},onAppointmentRequestSaveBtnClick:function(a){var b=this.getAppointmentRequestForm().getForm(),c=b.getRecord(),d=b.getValues(),e=this.getAppointmentRequestGrid().getStore();b.isValid()&&(c.set(d),c.store||e.add(c),e.sync()),a.up("window").close()},getEditWindow:function(a){this.getAppointmentRequestWindow()||Ext.create("App.view.patient.encounter.AppointmentRequestWindow"),this.getAppointmentRequestWindow().show(),a&&this.getAppointmentRequestForm().getForm().loadRecord(a)},onAppointmentRequestCancelBtnClick:function(a){a.up("window").close()},onAppointmentRequestWindowClose:function(){this.getAppointmentRequestForm().getForm().reset(!0)}}),Ext.define("App.controller.patient.CarePlanGoals",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"CarePlanGoalsGrid",selector:"careplangoalsgrid"},{ref:"CarePlanGoalsNewWindow",selector:"careplangoalsnewwindow"},{ref:"CarePlanGoalsNewForm",selector:"#CarePlanGoalsNewForm"},{ref:"CarePlanGoalPlanDateField",selector:"#CarePlanGoalPlanDateField"},{ref:"NewCarePlanGoalBtn",selector:"#NewCarePlanGoalBtn"},{ref:"SoapPanelForm",selector:"#soapPanel form"}],init:function(){var a=this;a.control({viewport:{beforeencounterload:a.onBeforeOpenEncounter},careplangoalsgrid:{itemdblclick:a.onCarePlanGoalsGridItemDblClick},"#CarePlanGoalSearchField":{select:a.onCarePlanGoalSearchFieldSelect},"#NewCarePlanGoalBtn":{click:a.onNewCarePlanGoalBtnClick},"#CarePlanGoalsNewFormCancelBtn":{click:a.onCarePlanGoalsNewFormCancelBtn},"#CarePlanGoalsNewFormSaveBtn":{click:a.onCarePlanGoalsNewFormSaveBtn},"#CarePlanGoalPlanDateContainer > button":{click:a.onCarePlanGoalPlanDateContainerButtonsClick}})},onCarePlanGoalPlanDateContainerButtonsClick:function(a){var b,c=new Date,d=this.getCarePlanGoalPlanDateField();switch(a.action){case"1D":b=Ext.Date.add(c,Ext.Date.DAY,1);break;case"1W":b=Ext.Date.add(c,Ext.Date.DAY,7);break;case"2W":b=Ext.Date.add(c,Ext.Date.DAY,14);break;case"1M":b=Ext.Date.add(c,Ext.Date.MONTH,1);break;case"3M":b=Ext.Date.add(c,Ext.Date.MONTH,3);break;case"6M":b=Ext.Date.add(c,Ext.Date.MONTH,6);break;case"1Y":b=Ext.Date.add(c,Ext.Date.YEAR,1)}d.setValue(b||c)},onCarePlanGoalsGridItemDblClick:function(a,b){var c=this;c.getCarePlanGoalsNewWindow().setTitle(b.data.goal+" ["+b.data.goal_code+"]"),c.getCarePlanGoalsNewWindow().show(c.getCarePlanGoalsGrid().el),c.getCarePlanGoalsNewForm().getForm().loadRecord(b)},onCarePlanGoalSearchFieldSelect:function(a,b){var c=this,d=c.getCarePlanGoalsNewForm().getForm(),e=d.getRecord();e.set({goal_code:b[0].data.ConceptId,goal_code_type:b[0].data.CodeType})},onBeforeOpenEncounter:function(a){this.getCarePlanGoalsGrid()&&this.getCarePlanGoalsGrid().getStore().load({filters:[{property:"eid",value:a.data.eid}]})},onNewCarePlanGoalBtnClick:function(a){var b,c=this,d=a.up("grid"),e=d.getStore();b=e.add({pid:app.patient.pid,eid:app.patient.eid,uid:app.user.id,created_date:new Date}),c.getCarePlanGoalsNewWindow().setTitle(_("new_goal")),c.getCarePlanGoalsNewWindow().setSize(c.getSoapPanelForm().getSize()),c.getCarePlanGoalsNewWindow().show(c.getCarePlanGoalsGrid().el),c.getCarePlanGoalsNewForm().getForm().loadRecord(b[0])},onCarePlanGoalsNewFormSaveBtn:function(){var a=this,b=a.getCarePlanGoalsNewForm().getForm(),c=b.getRecord(),d=b.getValues();b.isValid()&&(c.set(d),c.store.sync({success:function(){app.msg(_("sweet"),_("record_saved"))},failure:function(){app.msg(_("oops"),_("record_error"),!0)}}),a.getCarePlanGoalsNewForm().getForm().reset(),a.getCarePlanGoalsNewWindow().close())},onCarePlanGoalsNewFormCancelBtn:function(){var a=this;a.getCarePlanGoalsGrid().getStore().rejectChanges(),a.getCarePlanGoalsNewForm().getForm().reset(),a.getCarePlanGoalsNewWindow().close()}}),Ext.define("App.controller.patient.CCD",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"PatientCcdPanel",selector:"patientccdpanel"},{ref:"PatientCcdPanelMiFrame",selector:"patientccdpanel > miframe"},{ref:"PatientCcdPanelEncounterCmb",selector:"#PatientCcdPanelEncounterCmb"},{ref:"PatientCcdPanelExcludeCheckBoxGroup",selector:"#PatientCcdPanelExcludeCheckBoxGroup"}],init:function(){var a=this;a.control({patientccdpanel:{activate:a.onPanelActivate},"#viewCcdBtn":{click:a.onViewCcdBtnClick},"#archiveCcdBtn":{click:a.onArchiveCcdBtnClick},"#exportCcdBtn":{click:a.onExportCcdBtnClick},"#printCcdBtn":{click:a.onPrintCcdBtnClick},"#PatientCcdPanelEncounterCmb":{select:a.onPatientCcdPanelEncounterCmbSelect}})},eid:null,onPanelActivate:function(a){a.down("toolbar").down("#PatientCcdPanelEncounterCmb").setVisible(null===this.eid),this.onViewCcdBtnClick(a.down("toolbar").down("button"))},onViewCcdBtnClick:function(a){a.up("panel").query("miframe")[0].setSrc("dataProvider/CCDDocument.php?action=view&site="+window.site+"&pid="+app.patient.pid+"&eid="+this.getEid(a)+"&exclude="+this.getExclusions(a)+"&token="+app.user.token),app.AuditLog("Patient summary CCD viewed")},onArchiveCcdBtnClick:function(a){a.up("panel").query("miframe")[0].setSrc("dataProvider/CCDDocument.php?action=archive&site="+window.site+"&pid="+app.patient.pid+"&eid="+this.getEid(a)+"&exclude="+this.getExclusions(a)+"&token="+app.user.token),app.AuditLog("Patient summary CCD archived")},onExportCcdBtnClick:function(a){a.up("panel").query("miframe")[0].setSrc("dataProvider/CCDDocument.php?action=export&site="+window.site+"&pid="+app.patient.pid+"&eid="+this.getEid(a)+"&exclude="+this.getExclusions(a)+"&token="+app.user.token),app.AuditLog("Patient summary CCD exported")},onPatientCcdPanelEncounterCmbSelect:function(a,b){a.selectedRecord=b[0],a.up("panel").query("miframe")[0].setSrc("dataProvider/CCDDocument.php?action=view&site="+window.site+"&pid="+app.patient.pid+"&eid="+this.getEid(a)+"&exclude="+this.getExclusions(a)+"&token="+app.user.token),app.AuditLog("Patient summary CCD exported")},onPrintCcdBtnClick:function(a){var b=a.up("panel").query("miframe")[0].frameElement.dom.contentWindow;b.focus(),b.print()},getEid:function(a){var b=a.up("toolbar").query("#PatientCcdPanelEncounterCmb")[0];return b.selectedRecord?b.selectedRecord.data.eid:this.eid},cmbReset:function(a){var b=a.up("toolbar").query("#PatientCcdPanelEncounterCmb")[0];b.reset(),delete b.selectedRecord},getExclusions:function(a){var b=a.up("toolbar").query("#PatientCcdPanelExcludeCheckBoxGroup")[0].getValue(),c=b.exclude||[];return c.join?c.join(","):c}}),Ext.define("App.controller.patient.CCDImport",{extend:"Ext.app.Controller",requires:["App.view.patient.windows.PossibleDuplicates"],refs:[{ref:"CcdImportWindow",selector:"ccdimportwindow"},{ref:"CcdImportPreviewWindow",selector:"ccdimportpreviewwindow"},{ref:"CcdImportPatientForm",selector:"#CcdImportPatientForm"},{ref:"CcdImportActiveProblemsGrid",selector:"#CcdImportActiveProblemsGrid"},{ref:"CcdImportMedicationsGrid",selector:"#CcdImportMedicationsGrid"},{ref:"CcdImportAllergiesGrid",selector:"#CcdImportAllergiesGrid"},{ref:"CcdPatientPatientForm",selector:"#CcdPatientPatientForm"},{ref:"CcdPatientActiveProblemsGrid",selector:"#CcdPatientActiveProblemsGrid"},{ref:"CcdPatientMedicationsGrid",selector:"#CcdPatientMedicationsGrid"},{ref:"CcdPatientAllergiesGrid",selector:"#CcdPatientAllergiesGrid"},{ref:"CcdImportPreviewPatientForm",selector:"#CcdImportPreviewPatientForm"},{ref:"CcdImportPreviewActiveProblemsGrid",selector:"#CcdImportPreviewActiveProblemsGrid"},{ref:"CcdImportPreviewMedicationsGrid",selector:"#CcdImportPreviewMedicationsGrid"},{ref:"CcdImportPreviewAllergiesGrid",selector:"#CcdImportPreviewAllergiesGrid"},{ref:"CcdImportWindowPreviewBtn",selector:"#CcdImportWindowPreviewBtn"},{ref:"CcdImportWindowImportBtn",selector:"#CcdImportWindowImportBtn"},{ref:"CcdImportWindowCloseBtn",selector:"#CcdImportWindowCloseBtn"},{ref:"CcdImportWindowPatientSearchField",selector:"#CcdImportWindowPatientSearchField"}],init:function(){var a=this;a.control({ccdimportwindow:{show:a.onCcdImportWindowShow},"#CcdImportPreviewWindowImportBtn":{click:a.onCcdImportPreviewWindowImportBtnClick},"#CcdImportWindowPreviewBtn":{click:a.onCcdImportWindowPreviewBtnClick},"#CcdImportWindowCloseBtn":{click:a.onCcdImportWindowCloseBtnClick},"#CcdImportWindowPatientSearchField":{select:a.onCcdImportWindowPatientSearchFieldSelect},"#CcdImportWindowSelectAllField":{change:a.onCcdImportWindowSelectAllFieldChange},"#CcdImportWindowViewRawCcdBtn":{click:a.onCcdImportWindowViewRawCcdBtnClick},"#PossiblePatientDuplicatesWindow > grid":{itemdblclick:a.onPossiblePatientDuplicatesGridItemDblClick},"#PossiblePatientDuplicatesContinueBtn":{click:a.onPossiblePatientDuplicatesContinueBtnClick},"#CcdImportPreviewWindowCancelBtn":{click:a.onCcdImportPreviewWindowCancelBtnClick}})},CcdImport:function(a){this.getCcdImportWindow()||Ext.create("App.view.patient.windows.CCDImport"),this.getCcdImportWindow().ccdData=a,this.getCcdImportWindow().show()},onCcdImportWindowShow:function(a){this.doLoadCcdData(a.ccdData)},doLoadCcdData:function(a){var b,c=this,d=c.getCcdImportPatientForm().getForm(),e=Ext.create("App.model.patient.Patient",a.patient);d.loadRecord(e),App.app.getController("patient.Patient").lookForPossibleDuplicates({fname:e.data.fname,lname:e.data.lname,sex:e.data.sex,DOB:e.data.DOB},"ccdImportDuplicateAction",function(){}),a.patient.race&&""!==a.patient.race&&CombosData.getDisplayValueByListIdAndOptionValue(14,a.patient.race,function(a){d.findField("race_text").setValue(a)}),a.patient.ethnicity&&""!==a.patient.ethnicity&&CombosData.getDisplayValueByListIdAndOptionCode(59,a.patient.ethnicity,function(a){d.findField("ethnicity_text").setValue(a)}),a.patient.pid&&""!==a.patient.pid&&PatientContacts.getSelfContact(a.patient.pid,function(a){b=a.phone_use_code+"-"+a.phone_area_code+"-"+a.phone_local_number,d.findField("phones").setValue(b)}),a&&(a.allergies&&a.allergies.length>0&&c.reconfigureGrid("getCcdImportAllergiesGrid",a.allergies),a.medications&&a.medications.length>0&&c.reconfigureGrid("getCcdImportMedicationsGrid",a.medications),a.problems&&a.problems.length>0&&c.reconfigureGrid("getCcdImportActiveProblemsGrid",a.problems))},onPossiblePatientDuplicatesGridItemDblClick:function(a,b){var c=this,d=c.getCcdImportWindowPatientSearchField(),e=(c.getCcdPatientPatientForm().getForm(),d.getStore()),f=a.up("window");"ccdImportDuplicateAction"==f.action&&(e.removeAll(),c.doLoadMergePatientData(b.data.pid),d.select(b),f.close(),c.promptVerifyPatientImport())},reconfigureGrid:function(a,b){var c=this,d=c[a]();d.getStore().loadRawData(b)},onCcdImportWindowPatientSearchFieldSelect:function(a,b){var c=this,d=c.getCcdImportPatientForm().getForm().getRecord();d.data.sex!=b[0].data.sex&&app.msg(_("warning"),_("records_sex_are_not_equal"),!0),d.data.DOB.getFullYear()!=b[0].data.DOB.getFullYear()&&d.data.DOB.getMonth()!=b[0].data.DOB.getMonth()&&d.data.DOB.getDate()!=b[0].data.DOB.getDate()&&app.msg(_("warning"),_("records_date_of_birth_are_not_equal"),!0),c.doLoadMergePatientData(b[0].data.pid)},doLoadMergePatientData:function(a){var b,c=this,d=c.getCcdPatientPatientForm().getForm();App.model.patient.Patient.load(a,{success:function(a){d.loadRecord(a),a.data.race&&""!==a.data.race&&CombosData.getDisplayValueByListIdAndOptionValue(14,a.data.race,function(a){d.findField("race_text").setValue(a)}),a.data.ethnicity&&""!==a.data.ethnicity&&CombosData.getDisplayValueByListIdAndOptionValue(59,a.data.ethnicity,function(a){d.findField("ethnicity_text").setValue(a)}),a.data.pid&&PatientContacts.getSelfContact(a.data.pid,function(a){b=a.phone_use_code+"-"+a.phone_area_code+"-"+a.phone_local_number,d.findField("phones").setValue(b)}),c.getCcdPatientMedicationsGrid().reconfigure(a.medications()),a.medications().load({params:{reconciled:!0}}),c.getCcdPatientAllergiesGrid().reconfigure(a.allergies()),a.allergies().load(),c.getCcdPatientActiveProblemsGrid().reconfigure(a.activeproblems()),a.activeproblems().load()}})},onCcdImportWindowCloseBtnClick:function(){this.getCcdImportWindow().close()},onCcdImportWindowPreviewBtnClick:function(){var a,b,c,d,e,f=this,g=!0,h=f.getCcdImportPatientForm().getForm().getRecord(),i=f.getCcdImportActiveProblemsGrid().getSelectionModel().getSelection(),j=f.getCcdImportMedicationsGrid().getSelectionModel().getSelection(),k=f.getCcdImportAllergiesGrid().getSelectionModel().getSelection(),l=f.getCcdPatientPatientForm().getForm().getRecord(),m=f.getCcdPatientActiveProblemsGrid().getStore().data.items,n=f.getCcdPatientMedicationsGrid().getStore().data.items,o=f.getCcdPatientAllergiesGrid().getStore().data.items,p=void 0!==l;if(p&&0===i.length&&0===j.length&&0===k.length)return void app.msg(_("oops"),_("nothing_to_merge"),!0);if(f.getCcdImportPreviewWindow()||Ext.create("App.view.patient.windows.CCDImportPreview"),f.getCcdImportPreviewWindow().show(),a=f.getCcdImportPreviewPatientForm().getForm(),p?(f.getCcdImportPreviewPatientForm().getForm().loadRecord(l),l.data.race&&""!==l.data.race&&CombosData.getDisplayValueByListIdAndOptionValue(14,l.data.race,function(b){a.findField("race_text").setValue(b)}),l.data.ethnicity&&""!==l.data.ethnicity&&CombosData.getDisplayValueByListIdAndOptionValue(59,l.data.ethnicity,function(b){a.findField("ethnicity_text").setValue(b)}),l.data.pid&&""!==l.data.pid&&PatientContacts.getSelfContact(l.data.pid,function(b){e=b.phone_use_code+"-"+b.phone_area_code+"-"+b.phone_local_number,a.findField("phones").setValue(e)})):(f.getCcdImportPreviewPatientForm().getForm().loadRecord(h),h.data.race&&""!==h.data.race&&CombosData.getDisplayValueByListIdAndOptionValue(14,h.data.race,function(b){a.findField("race_text").setValue(b)}),h.data.ethnicity&&""!==h.data.ethnicity&&CombosData.getDisplayValueByListIdAndOptionCode(59,h.data.ethnicity,function(b){a.findField("ethnicity_text").setValue(b)}),h.data.pid&&""!==h.data.pid&&PatientContacts.getSelfContact(h.data.pid,function(b){e=b.phone_use_code+"-"+b.phone_area_code+"-"+b.phone_local_number,a.findField("phones").setValue(e)})),g){for(d=Ext.clone(m),c=f.getCcdPatientActiveProblemsGrid().getStore(),b=0;b<i.length;b++)-1===c.find("code",i[b].data.code)&&Ext.Array.insert(d,0,[i[b]]);for(f.getCcdImportPreviewActiveProblemsGrid().getStore().loadRecords(d),d=Ext.clone(n),c=f.getCcdPatientMedicationsGrid().getStore(),b=0;b<j.length;b++)-1===c.find("RXCUI",j[b].data.RXCUI)&&Ext.Array.insert(d,0,[j[b]]);for(f.getCcdImportPreviewMedicationsGrid().getStore().loadRecords(d),d=Ext.clone(o),c=f.getCcdPatientAllergiesGrid().getStore(),b=0;b<k.length;b++)-1===c.find("allergy_code",k[b].data.allergy_code)&&Ext.Array.insert(d,0,[k[b]]);f.getCcdImportPreviewAllergiesGrid().getStore().loadRecords(d)}else f.getCcdImportPreviewActiveProblemsGrid().getStore().loadRecords(Ext.Array.merge(i,m)),f.getCcdImportPreviewMedicationsGrid().getStore().loadRecords(Ext.Array.merge(j,n)),f.getCcdImportPreviewAllergiesGrid().getStore().loadRecords(Ext.Array.merge(k,o))},onCcdImportPreviewWindowImportBtnClick:function(){var a=this,b=a.getCcdImportPreviewPatientForm().getRecord();b.data.pid?a.promptVerifyPatientImport(b):App.app.getController("patient.Patient").lookForPossibleDuplicates({fname:b.data.fname,lname:b.data.lname,sex:b.data.sex,DOB:b.data.DOB},"ccdImportDuplicateAction",function(c){0===c.length&&a.promptVerifyPatientImport(b)})},promptVerifyPatientImport:function(a){var b=this;Ext.Msg.show({title:_("wait"),msg:_(a.data.pid?"patient_merge_verification":"patient_import_verification"),buttons:Ext.Msg.YESNO,icon:Ext.Msg.QUESTION,fn:function(c){"yes"==c&&(a.data.pid?b.doPatientSectionsImport(a):b.doPatientImport(a))}})},doPatientImport:function(a){var b=this;a.set({create_uid:app.user.id,create_date:new Date}),a.save({callback:function(a,c,d){d?b.doPatientSectionsImport(a):app.msg(_("oops"),_("record_error"),!0)}})},onCcdImportPreviewWindowCancelBtnClick:function(a){a.up("window").close()},doPatientSectionsImport:function(a){var b=this,c=new Date,d=a.data.pid,e=b.getCcdImportPreviewActiveProblemsGrid().getStore().data.items,f=b.getCcdImportPreviewMedicationsGrid().getStore().data.items,g=b.getCcdImportPreviewAllergiesGrid().getStore().data.items;for(Index=0;Index<g.length;Index++)g[Index].data.id&&g[Index].data.id>0||(g[Index].set({pid:d,created_uid:app.patient.id,create_date:c}),g[Index].setDirty(),g[Index].save());for(Index=0;Index<f.length;Index++)f[Index].data.id&&f[Index].data.id>0||(f[Index].set({pid:d,created_uid:app.patient.id,create_date:c}),f[Index].setDirty(),f[Index].save());for(Index=0;Index<e.length;Index++)e[Index].data.id&&e[Index].data.id>0||(e[Index].set({pid:d,created_uid:app.patient.id,create_date:c}),e[Index].setDirty(),e[Index].save({callback:function(){b.getCcdImportWindow().close(),b.getCcdImportPreviewWindow().close(),app.setPatient(d,null,null,function(){app.openPatientSummary()}),app.msg(_("sweet"),_("patient_data_imported"))}}))},onPossiblePatientDuplicatesContinueBtnClick:function(a){"ccdImportDuplicateAction"==a.up("window").action&&(this.getCcdImportPreviewPatientForm(),this.promptVerifyPatientImport(this.getCcdImportPreviewPatientForm().getRecord()))},onCcdImportWindowSelectAllFieldChange:function(a,b){for(var c=this,d=c.getCcdImportWindow().query("grid"),e=0;e<d.length;e++){var f=d[e].getSelectionModel();b?f.selectAll():f.deselectAll()}},onCcdImportWindowViewRawCcdBtnClick:function(){var a=this,b=Ext.create("App.model.patient.PatientDocumentsTemp",{create_date:new Date,document_name:"temp_ccd.xml",document:a.getCcdImportWindow().ccd});b.save({callback:function(a){app.onDocumentView(a.data.id,"ccd")}})}}),Ext.define("App.controller.patient.CognitiveAndFunctionalStatus",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"CognitiveAndFunctionalStatusPanel",selector:"patientcognitiveandfunctionalstatuspanel"},{ref:"NewFunctionalStatusBtn",selector:"#newFunctionalStatusBtn"}],init:function(){var a=this;a.control({patientcognitiveandfunctionalstatuspanel:{activate:a.onCognitiveAndFunctionalStatusPanelActive},"#newFunctionalStatusBtn":{click:a.onNewFunctionalStatusBtnClick},"#functionalStatusCategoryCombo":{select:a.onFunctionalStatusCategoryComboSelect},"#functionalStatusSatausCombo":{select:a.onFunctionalStatusStatusComboSelect},"#functionalStatusCodeCombo":{select:a.onFunctionalStatusCodeComboSelect}})},onCognitiveAndFunctionalStatusPanelActive:function(a){var b=a.getStore();b.clearFilter(!0),b.filter([{property:"pid",value:app.patient.pid}])},onNewFunctionalStatusBtnClick:function(a){var b,c=a.up("grid"),d=c.getStore();c.editingPlugin.cancelEdit(),b=d.add({pid:app.patient.pid,eid:app.patient.eid,uid:app.user.id,begin_date:new Date,created_date:new Date}),c.editingPlugin.startEdit(b[0],0)},onFunctionalStatusCategoryComboSelect:function(a,b){var c=a.up("form").getForm().getRecord();c.set({category_code:b[0].data.code,category_code_type:b[0].data.code_type})},onFunctionalStatusStatusComboSelect:function(a,b){var c=a.up("form").getForm().getRecord();c.set({status_code:b[0].data.code,status_code_type:b[0].data.code_type})},onFunctionalStatusCodeComboSelect:function(a,b){var c=a.up("form").getForm().getRecord();c.set({code:b[0].data.ConceptId,code_type:b[0].data.CodeType})}}),Ext.define("App.controller.patient.DecisionSupport",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"DecisionSupportWarningPanel",selector:"#DecisionSupportWarningPanel"}],init:function(){var a=this;a.control({viewport:{beforeencounterload:a.onBeforeEncounterLoad},"#DecisionSupportWarningPanelCloseBtn":{click:a.DecisionSupportWarningPanelCloseBtnClick}})},DecisionSupportWarningPanelCloseBtnClick:function(a){var b=a.up("decisionsupportwarningpanel");b.collapse(),b.hide(),b.removeAll()},onBeforeEncounterLoad:function(){this.getDecisionSupportAlerts()},getDecisionSupportAlerts:function(){var a,b,c;this.getDecisionSupportWarningPanel()&&(b=this.getDecisionSupportWarningPanel(),b.collapse(),b.hide(),b.removeAll(),DecisionSupport.getAlerts({pid:app.patient.pid,alertType:"P"},function(d){for(c=0;c<d.length;c++)a={xtype:"button",margin:"2 5",icon:""!=d[c].reference?"resources/images/icons/blueInfo.png":null,text:d[c].description,result:d[c],handler:function(a){""!=a.result.reference?window.open(a.result.reference,"_blank","toolbar=no, scrollbars=yes, resizable=yes, top=10, left=10, width=1000, height=600"):app.msg(_("oops"),_("no_reference_provided"),!0)}},b.add(a);d.length>0&&(b.show(),b.expand())}))}}),Ext.define("App.controller.patient.DoctorsNotes",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"DoctorsNotesGrid",selector:"patientdoctorsnotepanel"},{ref:"PrintDoctorsNoteBtn",selector:"#printDoctorsNoteBtn"},{ref:"NewDoctorsNoteBtn",selector:"#newDoctorsNoteBtn"}],init:function(){var a=this;a.control({patientdoctorsnotepanel:{activate:a.onDoctorsNotesGridActive,selectionchange:a.onDoctorsNotesGridSelectionChange,beforerender:a.onDoctorsNotesGridBeforeRender,beforeedit:a.onDoctorsNotesGridBeforeEdit,validateedit:a.onDoctorsNotesGridValidateEdit},"#printDoctorsNoteBtn":{click:a.onPrintDoctorsNoteBtn},"#newDoctorsNoteBtn":{click:a.onNewDoctorsNoteBtn}}),a.docTemplates={},CombosData.getTemplatesTypes(function(b,c){for(var d=0;d<c.result.length;d++)c.result[d].id&&(a.docTemplates[c.result[d].id]=c.result[d].title)})},onDoctorsNotesGridBeforeRender:function(a){app.on("patientunset",function(){a.editingPlugin.cancelEdit(),a.getStore().removeAll()})},onDoctorsNotesGridSelectionChange:function(a,b){this.getPrintDoctorsNoteBtn().setDisabled(0==b.length)},onNewDoctorsNoteBtn:function(a){var b=a.up("grid");b.editingPlugin.cancelEdit(),b.getStore().insert(0,{pid:app.patient.pid,eid:app.patient.eid,uid:app.user.id,refill:0,order_date:new Date,from_date:new Date}),b.editingPlugin.startEdit(0,0)},onDoctorsNotesGridValidateEdit:function(a,b){var c=a.editor.query("multitextfield")[0],d=c.getValue();b.record.set({restrictions:d})},onDoctorsNotesGridBeforeEdit:function(a,b){var c=a.editor.query("multitextfield")[0],d=b.record.data.restrictions;c.setValue(d)},onPrintDoctorsNoteBtn:function(a){var b=this,c=b.getDoctorsNotesGrid(),d=a.isModel?a:c.getSelectionModel().getSelection()[0],e={};e.pid=d.data.pid,e.eid=d.data.eid,e.docType="Doctors Note",e.templateId=d.data.template_id,e.docNoteid=d.data.id,DocumentHandler.createTempDocument(e,function(a,b){window.dual?dual.onDocumentView(b.result.id,"Doctors Note"):app.onDocumentView(b.result.id,"Doctors Note")})},onDoctorsNotesGridActive:function(a){var b=a.getStore();a.editingPlugin.editing||(b.clearFilter(!0),b.filter([{property:"pid",value:app.patient.pid}]))},templatesRenderer:function(a){return this.docTemplates[a]}}),Ext.define("App.controller.patient.FamilyHistory",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"FamilyHistoryWindow",selector:"familyhistorywindow"},{ref:"FamilyHistoryGrid",selector:"patientfamilyhistorypanel"},{ref:"FamilyHistoryForm",selector:"#FamilyHistoryForm"},{ref:"FamilyHistorySaveBtn",selector:"#familyHistorySaveBtn"}],init:function(){var a=this;a.control({patientfamilyhistorypanel:{activate:a.onFamilyHistoryGridActivate},"#FamilyHistoryGridAddBtn":{click:a.onFamilyHistoryGridAddBtnClick},"#FamilyHistoryWindowSaveBtn":{click:a.onFamilyHistoryWindowSaveBtnClick},"#FamilyHistoryWindowCancelBtn":{click:a.onFamilyHistoryWindowCancelBtnClick}})},onFamilyHistoryGridActivate:function(a){var b=a.getStore();b.clearFilter(!0),b.load({filters:[{property:"pid",value:app.patient.pid}]})},onFamilyHistoryGridAddBtnClick:function(){this.showFamilyHistoryWindow(),this.getFamilyHistoryForm().getForm().reset()},showFamilyHistoryWindow:function(){this.getFamilyHistoryWindow()||Ext.create("App.view.patient.windows.FamilyHistory"),this.getFamilyHistoryWindow().show()},onFamilyHistoryWindowSaveBtnClick:function(){var a,b=this.getFamilyHistoryGrid(),c=this.getFamilyHistoryForm().getForm(),d=b.getStore(),e=c.getValues(),f=[],g=!0;return Ext.Object.each(e,function(b,c){"0~0"!=c&&(a=c.split("~"),condition=a[0].split(":"),relation=a[1].split(":"),g&&"0"==relation[0]&&(g=!1),Ext.Array.push(f,{pid:app.patient.pid,eid:app.patient.eid,relation:relation[2],relation_code:relation[1],relation_code_type:relation[0],condition:condition[2],condition_code:condition[1],condition_code_type:condition[0],create_uid:app.user.id,create_date:new Date}))}),0==f.length?void app.msg(_("oops"),_("no_history_selected"),!0):g?(d.add(f),d.sync(),void this.getFamilyHistoryWindow().close()):void app.msg(_("oops"),_("missing_required_information"),!0)},onFamilyHistoryWindowCancelBtnClick:function(){this.getFamilyHistoryWindow().close()}}),Ext.define("App.controller.patient.HL7",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"#Adt04MessageBtn",selector:"Adt04MessageBtn"}],init:function(){var a=this;a.control({"#soapForm":{render:a.onSoapFormRender},"#Adt04MessageBtn":{click:a.onAdt04MessageBtnClick}})},onSoapFormRender:function(b){a("hl7_send_adt04")&&b.getDockedItems()[0].insert(0,{xtype:"button",text:_("adt04"),itemId:"Adt04MessageBtn"})},onAdt04MessageBtnClick:function(){HL7Messages.broadcastADT({pid:app.patient.pid,eid:app.patient.eid,fid:app.user.facility,event:"A04"},function(){})}}),Ext.define("App.controller.patient.Immunizations",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"SubmitImmunizationWindow",selector:"#SubmitImmunizationWindow"},{ref:"ImmunizationPanel",selector:"patientimmunizationspanel"},{ref:"ImmunizationsGrid",selector:"patientimmunizationspanel #patientImmunizationsGrid"},{ref:"CvxGrid",selector:"patientimmunizationspanel #cvxGrid"},{ref:"CvxMvxCombo",selector:"cvxmanufacturersforcvxcombo"},{ref:"AddImmunizationBtn",selector:"patientimmunizationspanel #addImmunizationBtn"},{ref:"ReviewImmunizationsBtn",selector:"patientimmunizationspanel #reviewImmunizationsBtn"},{ref:"SubmitVxuBtn",selector:"patientimmunizationspanel #submitVxuBtn"}],init:function(){var a=this;
a.control({patientimmunizationspanel:{activate:a.onPatientImmunizationsPanelActive},"patientimmunizationspanel #patientImmunizationsGrid":{selectionchange:a.onPatientImmunizationsGridSelectionChange,beforeedit:a.onPatientImmunizationsGridBeforeEdit,edit:a.onPatientImmunizationsGridEdit},"patientimmunizationspanel #cvxGrid":{expand:a.onCvxGridExpand},"patientimmunizationspanel #submitVxuBtn":{click:a.onSubmitVxuBtnClick},"patientimmunizationspanel #reviewImmunizationsBtn":{click:a.onReviewImmunizationsBtnClick},"patientimmunizationspanel #addImmunizationBtn":{click:a.onAddImmunizationBtnClick},"form #immunizationsearch":{select:a.onImmunizationSearchSelect},"#patientImmunizationsEditFormAdministeredByField":{select:a.onPatientImmunizationsEditFormAdministeredByFieldSelect},"#SubmitImmunizationWindow #ActiveFacilitiesCombo":{change:a.onActiveFacilitiesChange},"#SubmitImmunizationWindow #ApplicationCombo":{change:a.onApplicationChange}})},onPatientImmunizationsEditFormAdministeredByFieldSelect:function(a,b){var c=a.up("form").getForm().getRecord();c.set({administered_uid:b[0].data.id,administered_title:b[0].data.title,administered_fname:b[0].data.fname,administered_mname:b[0].data.mname,administered_lname:b[0].data.lname})},onImmunizationSearchSelect:function(a,b){var c=a.up("form").getForm();this.getCvxMvxCombo().getStore().load({params:{cvx_code:b[0].data.cvx_code}}),c.getRecord().set({code:b[0].data.cvx_code,code_type:"CVX"})},onCvxGridExpand:function(a){a.getStore().load()},onPatientImmunizationsGridSelectionChange:function(a,b){this.getSubmitVxuBtn().setDisabled(0===b.length)},onPatientImmunizationsGridBeforeEdit:function(a,b){var c=a.editor.getForm().findField("administered_by");c.forceSelection=!1,Ext.Function.defer(function(){c.setValue(b.record.data.administered_by),c.forceSelection=!0},200)},onPatientImmunizationsGridEdit:function(a,b){app.fireEvent("immunizationedit",this,b.record)},onPatientImmunizationsPanelActive:function(){this.loadPatientImmunizations()},onSubmitVxuBtnClick:function(){var a=this,b=a.getImmunizationsGrid().getSelectionModel().getSelection(),c=[];a.vxuWindow=a.getVxuWindow();for(var d=0;d<b.length;d++)c.push(b[d].data);a.vxuWindow.getComponent("list").update(c)},onReviewImmunizationsBtnClick:function(){},onAddImmunizationBtnClick:function(){var a=this.getImmunizationsGrid(),b=a.getStore();a.editingPlugin.cancelEdit(),b.insert(0,{created_uid:app.user.id,uid:app.user.id,pid:app.patient.pid,eid:app.patient.eid,create_date:new Date,begin_date:new Date}),a.editingPlugin.startEdit(0,0)},loadPatientImmunizations:function(){var a=this.getImmunizationsGrid().getStore();a.clearFilter(!0),a.filter([{property:"pid",value:app.patient.pid}])},getVxuWindow:function(){var a=this;return Ext.widget("window",{title:_("submit_hl7_vxu"),closable:!1,itemId:"SubmitImmunizationWindow",modal:!0,bodyStyle:"background-color:white",defaults:{xtype:"container",border:!1,margin:10},items:[{html:_("please_verify_the_information")+":",margin:"10 10 0 10"},{width:700,minHeight:50,maxHeight:200,itemId:"list",margin:"0 10 20 10",styleHtmlContent:!0,tpl:new Ext.XTemplate("<ul>",'<tpl for=".">',"   <li>CVX:{code} - {vaccine_name} {administer_amount} {administer_units} {date_administered}</li>","</tpl></ul>")},{xtype:"uxiframe",itemId:"downloadHL7",hidden:!0}],buttons:[a.vxuFrom=Ext.create("App.ux.combo.ActiveFacilities",{fieldLabel:_("send_from"),emptyText:_("select"),itemId:"ActiveFacilitiesCombo",labelWidth:60,store:Ext.create("App.store.administration.HL7Clients",{filters:[{property:"active",value:!0}]})}),a.vxuTo=Ext.widget("combobox",{xtype:"combobox",fieldLabel:_("send_to"),emptyText:_("select"),allowBlank:!1,itemId:"ApplicationCombo",forceSelection:!0,editable:!1,labelWidth:60,displayField:"application_name",valueField:"id",store:Ext.create("App.store.administration.HL7Clients",{filters:[{property:"active",value:!0}]})}),{text:_("send"),scope:a,itemId:"send",handler:a.doSendVxu,action:"send",disabled:!0},{text:_("download"),scope:a,itemId:"download",handler:a.doDownloadVxu,action:"download",disabled:!0},{text:_("cancel"),handler:function(){a.vxuWindow.close()}}]}).show()},onActiveFacilitiesChange:function(){Ext.ComponentQuery.query("#ApplicationCombo")[0].getValue()&&(Ext.ComponentQuery.query("#SubmitImmunizationWindow #send")[0].setDisabled(!1),Ext.ComponentQuery.query("#SubmitImmunizationWindow #download")[0].setDisabled(!1))},onApplicationChange:function(){Ext.ComponentQuery.query("#ActiveFacilitiesCombo")[0].getValue()&&(Ext.ComponentQuery.query("#SubmitImmunizationWindow #send")[0].setDisabled(!1),Ext.ComponentQuery.query("#SubmitImmunizationWindow #download")[0].setDisabled(!1))},doDownloadVxu:function(){var a=this,b=a.getImmunizationsGrid().getSelectionModel(),c=b.getSelection(),d={},e=[];if(a.vxuTo.isValid()){for(var f=0;f<c.length;f++)e.push(c[f].data.id),d.pid=c[f].data.pid;a.vxuWindow.el.mask(_("download")),Ext.create("Ext.form.Panel",{renderTo:Ext.ComponentQuery.query("#SubmitImmunizationWindow #downloadHL7")[0].el,standardSubmit:!0,url:"dataProvider/Download.php"}).submit({params:{pid:d.pid,from:a.vxuFrom.getValue(),to:a.vxuTo.getValue(),immunizations:Ext.encode(e)},success:function(){}}),a.vxuWindow.el.unmask(),a.vxuWindow.close(),b.deselectAll()}},doSendVxu:function(){var a=this,b=a.getImmunizationsGrid().getSelectionModel(),c=b.getSelection(),d={},e=[];if(a.vxuTo.isValid()){for(var f=0;f<c.length;f++)e.push(c[f].data.id),d.pid=c[f].data.pid;d.from=a.vxuFrom.getValue(),d.to=a.vxuTo.getValue(),d.immunizations=e,a.vxuWindow.el.mask(_("sending")),HL7Messages.sendVXU(d,function(c,d){a.vxuWindow.el.unmask(),d.result.success?app.msg(_("sweet"),_("message_sent")):app.msg(_("oops"),_("message_error"),!0),a.vxuWindow.close(),b.deselectAll()})}}}),Ext.define("App.controller.patient.Insurance",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"PatientInsuranceFormSubscribeRelationshipCmb",selector:"PatientInsuranceFormSubscribeRelationshipCmb"}],init:function(){var a=this;a.control({"#PatientInsuranceFormSubscribeRelationshipCmb":{change:a.onPatientInsuranceFormSubscribeRelationshipCmbChange}})},onPatientInsuranceFormSubscribeRelationshipCmbChange:function(a,b){for(var c=a.up("fieldset").query("[isFormField]"),d="01"==b,e=0;e<c.length;e++)"subscriber_relationship"!=c[e].name&&(d?(c[e].setDisabled(!0),c[e].reset(),c[e].allowBlank=!0):(c[e].setDisabled(!1),("subscriber_given_name"==c[e].name||"subscriber_surname"==c[e].name||"subscriber_dob"==c[e].name||"subscriber_sex"==c[e].name||"subscriber_street"==c[e].name||"subscriber_city"==c[e].name||"subscriber_state"==c[e].name||"subscriber_country"==c[e].name||"subscriber_postal_code"==c[e].name||"subscriber_employer"==c[e].name)&&(c[e].allowBlank=!1)))}}),Ext.define("App.controller.patient.ItemsToReview",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"ItemsToReviewPanel",selector:"#ItemsToReviewPanel"},{ref:"ItemsToReviewImmuGrid",selector:"#ItemsToReviewPanel #ItemsToReviewImmuGrid"},{ref:"ItemsToReviewAllergiesGrid",selector:"#ItemsToReviewPanel #ItemsToReviewAllergiesGrid"},{ref:"ItemsToReviewActiveProblemsGrid",selector:"#ItemsToReviewPanel #ItemsToReviewActiveProblemsGrid"},{ref:"ItemsToReviewMedicationsGrid",selector:"#ItemsToReviewPanel #ItemsToReviewMedicationsGrid"},{ref:"ReviewSmokingStatusCombo",selector:"#ItemsToReviewPanel #reviewsmokingstatuscombo"}],init:function(){var a=this;a.control({"#ItemsToReviewPanel":{activate:a.storesLoad},"#encounterRecordAdd":{click:a.onReviewAll}})},storesLoad:function(){var a=this,b={filters:[{property:"pid",value:app.patient.pid}]};a.getReviewSmokingStatusCombo().reset(),a.getItemsToReviewImmuGrid().getStore().load(b),a.getItemsToReviewAllergiesGrid().getStore().load(b),a.getItemsToReviewActiveProblemsGrid().getStore().load(b),a.getItemsToReviewMedicationsGrid().getStore().load(b),a.smokeStatusStore=app.getController("patient.Social").smokeStatusStore,b.callback=function(){this.last()&&a.getReviewSmokingStatusCombo().setValue(this.last().data.status)},a.smokeStatusStore.load(b)},onReviewAll:function(){if(this.getReviewSmokingStatusCombo().isValid()){var a=this.getController("patient.encounter.Encounter").getEncounterRecord();a.set({review_active_problems:!0,review_allergies:!0,review_dental:!0,review_immunizations:!0,review_medications:!0,review_smoke:!0,review_surgery:!0}),a.save({success:function(){app.msg("Sweet!",_("items_to_review_save_and_review"))},failure:function(){app.msg("Oops!",_("items_to_review_entry_error"))}})}}}),Ext.define("App.controller.patient.Medical",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"MedicalWindow",selector:"#MedicalWindow"}],init:function(){var a=this;a.control({viewport:{navkey:a.onNavKey},"#MedicalWindow #immunization":{show:a.onPanelShow},"#MedicalWindow #allergies":{show:a.onPanelShow},"#MedicalWindow #activeproblems":{show:a.onPanelShow},"#MedicalWindow #medications":{show:a.onPanelShow},"#MedicalWindow #laboratories":{show:a.onPanelShow},"#MedicalWindow #socialhistory":{show:a.onPanelShow},"#MedicalWindow #referrals":{show:a.onPanelShow}})},onNavKey:function(a,b){if(!app.patient.pid)return void app.msg(_("oops"),_("patient_error"),!0);var c=this.getMedicalWindow().show();switch(b){case a.ONE:c.cardSwitch("immunization");break;case a.TWO:c.cardSwitch("allergies");break;case a.THREE:c.cardSwitch("activeproblems");break;case a.FOUR:c.cardSwitch("medications");break;case a.FIVE:c.cardSwitch("laboratories");break;case a.SIX:c.cardSwitch("socialhistory");break;case a.SEVEN:c.cardSwitch("referrals")}},onPanelShow:function(a){this.setWindowTitle(a.title)},setWindowTitle:function(a){this.getMedicalWindow().setTitle(app.patient.name+" ("+a+") "+(app.patient.readOnly?'-  <span style="color:red">[Read Mode]</span>':""))}}),Ext.define("App.controller.patient.Medications",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"MedicationsPanel",selector:"patientmedicationspanel"},{ref:"PatientMedicationsGrid",selector:"#patientMedicationsGrid"},{ref:"addPatientMedicationBtn",selector:"#addPatientMedicationBtn"},{ref:"PatientMedicationReconciledBtn",selector:"#PatientMedicationReconciledBtn"},{ref:"PatientMedicationUserLiveSearch",selector:"#PatientMedicationUserLiveSearch"},{ref:"AdministeredMedicationsGrid",selector:"#AdministeredMedicationsGrid"},{ref:"AdministeredMedicationsLiveSearch",selector:"#AdministeredMedicationsLiveSearch"},{ref:"AdministeredMedicationsUserLiveSearch",selector:"#AdministeredMedicationsUserLiveSearch"},{ref:"AdministeredMedicationsAddBtn",selector:"#AdministeredMedicationsAddBtn"}],init:function(){var a=this;a.control({viewport:{encounterload:a.onViewportEncounterLoad},patientmedicationspanel:{activate:a.onMedicationsPanelActive},"#patientMedicationsGrid":{beforeedit:a.onPatientMedicationsGridBeforeEdit},"#addPatientMedicationBtn":{click:a.onAddPatientMedicationBtnClick},"#patientMedicationLiveSearch":{select:a.onMedicationLiveSearchSelect},"#PatientMedicationReconciledBtn":{click:a.onPatientMedicationReconciledBtnClick},"#PatientMedicationUserLiveSearch":{select:a.onPatientMedicationUserLiveSearchSelect,reset:a.onPatientMedicationUserLiveSearchReset},"#AdministeredMedicationsGrid":{beforeedit:a.onAdministeredMedicationsGridBeforeEdit},"#AdministeredMedicationsLiveSearch":{select:a.onAdministeredMedicationsLiveSearchSelect},"#AdministeredMedicationsUserLiveSearch":{select:a.onAdministeredMedicationsUserLiveSearchSelect},"#AdministeredMedicationsAddBtn":{click:a.onAdministeredMedicationsAddBtnClick}})},onViewportEncounterLoad:function(){},onAdministeredMedicationsGridBeforeEdit:function(a,b){var c=this,d=c.getAdministeredMedicationsUserLiveSearch();d.forceSelection=!1,d.setValue(b.record.data.administered_by),Ext.Function.defer(function(){d.forceSelection=!0},200)},onAdministeredMedicationsLiveSearchSelect:function(a,b){var c=a.up("form").getForm();c.getRecord().set({RXCUI:b[0].data.RXCUI,CODE:b[0].data.CODE,NDC:b[0].data.NDC})},onAdministeredMedicationsUserLiveSearchSelect:function(a,b){var c=b[0],d=a.up("form").getForm().getRecord();d.set({administered_uid:c.data.id})},onAdministeredMedicationsAddBtnClick:function(){var a=this,b=a.getAdministeredMedicationsGrid(),c=b.getStore();b.editingPlugin.cancelEdit(),c.insert(0,{pid:app.patient.pid,eid:app.patient.eid,uid:app.user.id,created_uid:app.user.id,created_date:new Date,begin_date:new Date,end_date:new Date,administered_date:new Date,administered_uid:app.user.id,title:app.user.title,fname:app.user.fname,mname:app.user.mname,lname:app.user.lname}),b.editingPlugin.startEdit(0,0)},onPatientMedicationsGridBeforeEdit:function(a,b){var c=this,d=c.getPatientMedicationUserLiveSearch();d.forceSelection=!1,d.setValue(b.record.data.administered_by),Ext.Function.defer(function(){d.forceSelection=!0},200)},onPatientMedicationUserLiveSearchSelect:function(a,b){var c=b[0],d=a.up("form").getForm().getRecord();d.set({fname:c.data.fname}),d.set({lname:c.data.lname}),d.set({mname:c.data.mname}),d.set({title:c.data.title}),d.set({administered_uid:c.data.id})},onPatientMedicationUserLiveSearchReset:function(a){var b=a.up("form").getForm().getRecord();b.set({fname:""}),b.set({lname:""}),b.set({mname:""}),b.set({title:""}),b.set({administered_uid:""})},onAddPatientMedicationBtnClick:function(){var a=this,b=a.getPatientMedicationsGrid(),c=b.getStore();b.editingPlugin.cancelEdit(),c.insert(0,{pid:app.patient.pid,eid:app.patient.eid,uid:app.user.id,created_uid:app.user.id,create_date:new Date,begin_date:new Date}),b.editingPlugin.startEdit(0,0)},onMedicationLiveSearchSelect:function(a,b){var c=a.up("form").getForm();c.getRecord().set({RXCUI:b[0].data.RXCUI,CODE:b[0].data.CODE,NDC:b[0].data.NDC})},onPatientMedicationReconciledBtnClick:function(){this.onMedicationsPanelActive()},onMedicationsPanelActive:function(){var a=this.getPatientMedicationsGrid().getStore(),b=this.getPatientMedicationReconciledBtn().pressed;a.clearFilter(!0),a.load({filters:[{property:"pid",value:app.patient.pid}],params:{reconciled:b}})}}),Ext.define("App.controller.patient.Patient",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"PossiblePatientDuplicatesWindow",selector:"#PossiblePatientDuplicatesWindow"},{ref:"PatientDemographicForm",selector:"#PatientDemographicForm"}],init:function(){var a=this;a.control({"#PossiblePatientDuplicatesWindow":{close:a.onPossiblePatientDuplicatesWindowCLose},"#PossiblePatientDuplicatesWindow > grid":{itemdblclick:a.onPossiblePatientDuplicatesGridItemDblClick},"#PatientPossibleDuplicatesBtn":{click:a.onPatientPossibleDuplicatesBtnClick},"#PossiblePatientDuplicatesContinueBtn":{click:a.onPossiblePatientDuplicatesContinueBtnClick}})},doCapitalizeEachLetterOnKeyUp:function(){},onPossiblePatientDuplicatesGridItemDblClick:function(a,b){"openPatientSummary"==this.getPossiblePatientDuplicatesWindow().action&&app.setPatient(b.data.pid,null,null,function(){app.openPatientSummary(),a.up("window").close()})},onPossiblePatientDuplicatesWindowCLose:function(a){var b=a.down("grid").getStore();b.removeAll(),b.commitChanges()},checkForPossibleDuplicates:function(a){var b=this,c=a.isPanel?a.getForm():a.up("form").getForm();if(c.isValid()){var d={fname:c.findField("fname").getValue(),lname:c.findField("lname").getValue(),sex:c.findField("sex").getValue(),DOB:c.findField("DOB").getValue()};c.getRecord()&&(d.pid=c.getRecord().data.pid),b.lookForPossibleDuplicates(d,"openPatientSummary")}},lookForPossibleDuplicates:function(a,b,c){var d=this,e=d.getPossiblePatientDuplicatesWindow()||Ext.create("App.view.patient.windows.PossibleDuplicates"),f=e.down("grid").getStore();e.action=b,f.getProxy().extraParams=a,f.load({callback:function(a){"function"==typeof c&&c(a),a.length>0?e.show():app.msg(_("sweet"),_("no_possible_duplicates_found"))}})},onPatientPossibleDuplicatesBtnClick:function(a){this.checkForPossibleDuplicates(a.up("panel").down("form"))},onPossiblePatientDuplicatesContinueBtnClick:function(){var a=this.getPossiblePatientDuplicatesWindow();a.fireEvent("continue",a),a.close()}}),Ext.define("App.controller.patient.ProgressNotesHistory",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"EncounterProgressNotesHistoryGrid",selector:"#EncounterProgressNotesHistoryGrid"}],init:function(){var a=this;a.control({"#EncounterProgressNotesHistoryGrid":{afterrender:a.onEncounterProgressNotesHistoryGridAfterRender}})},onEncounterProgressNotesHistoryGridAfterRender:function(){},loadPatientProgressHistory:function(a,b){var c=this.getEncounterProgressNotesHistoryGrid().getStore();c.getProxy().extraParams={pid:a,eid:b},this.getEncounterProgressNotesHistoryGrid().rendered&&c.load()}}),Ext.define("App.controller.patient.RadOrders",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"RadOrdersGrid",selector:"patientradorderspanel"},{ref:"PrintRadOrderBtn",selector:"patientradorderspanel #printRadOrderBtn"}],init:function(){var a=this;a.control({patientradorderspanel:{activate:a.onRadOrdersGridActive,selectionchange:a.onRadOrdersGridSelectionChange,beforerender:a.onRadOrdersGridBeforeRender},"#radOrderliveSearch":{select:a.onRadSearchSelect},"patientradorderspanel #newRadOrderBtn":{click:a.onNewRadOrderBtnClick},"patientradorderspanel #printRadOrderBtn":{click:a.onPrintRadOrderBtnClick}})},onRadOrdersGridBeforeRender:function(a){app.on("patientunset",function(){a.editingPlugin.cancelEdit(),a.getStore().removeAll()})},onRadSearchSelect:function(a,b){var c=a.up("form").getForm();c.getRecord().set({code:b[0].data.loinc_number,code_type:b[0].data.code_type}),c.findField("code")&&c.findField("code").setValue(b[0].data.code),c.findField("note")&&c.findField("note").focus(!1,200)},onRadOrdersGridSelectionChange:function(a,b){this.getPrintRadOrderBtn().setDisabled(0===b.length)},onNewRadOrderBtnClick:function(){var a=this,b=a.getRadOrdersGrid(),c=b.getStore();b.editingPlugin.cancelEdit(),c.insert(0,{pid:app.patient.pid,eid:app.patient.eid,uid:app.user.id,date_ordered:new Date,order_type:"rad",status:"Pending",priority:"Normal"}),b.editingPlugin.startEdit(0,0)},onPrintRadOrderBtnClick:function(a){var b,c,d=this,e=d.getRadOrdersGrid(),f=Ext.isArray(a)?a:e.getSelectionModel().getSelection(),g={};for(g.pid=app.patient.pid,g.eid=app.patient.eid,g.orderItems=[],g.docType="Rad",g.templateId=6,g.orderItems.push(["Description","Notes"]),c=0;c<f.length;c++)b=f[c].data,g.orderItems.push([b.description+" ["+b.code_type+":"+b.code+"]",b.note]);DocumentHandler.createTempDocument(g,function(a,b){window.dual?dual.onDocumentView(b.result.id,"Rad"):app.onDocumentView(b.result.id,"Rad")})},onRadOrdersGridActive:function(a){var b=a.getStore();a.editingPlugin.editing||(b.clearFilter(!0),b.filter([{property:"pid",value:app.patient.pid},{property:"order_type",value:"rad"}]))},radOrdersGridStatusColumnRenderer:function(a){var b="black";return"Canceled"==a?b="red":"Pending"==a?b="orange":"Routed"==a?b="blue":"Complete"==a&&(b="green"),'<div style="color:'+b+'">'+a+"</div>"},doAddOrderByTemplate:function(a){var b=this,c=b.getLabOrdersGrid(),d=c.getStore();a.pid=app.patient.pid,a.eid=app.patient.eid,a.uid=app.user.id,a.date_ordered=new Date,a.order_type="rad",a.status="Pending",a.priority="Normal",d.add(a),d.sync({success:function(){app.msg(_("sweet"),a.description+" "+_("added"))}})}}),Ext.define("App.controller.patient.Reminders",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"RemindersAddBtn",selector:"#RemindersAddBtn"}],init:function(){var a=this;a.control({viewport:{encounterload:a.onEncounterOpen,patientset:a.onPatientSet},"#RemindersAddBtn":{click:a.onRemindersAddBtnClick},"#RemindersAlertOkBtn":{click:a.onRemindersAlertOkBtnClick},"#RemindersAlertCancelBtn":{click:a.onRemindersAlertCancelBtnClick}})},onRemindersAddBtnClick:function(a){var b=a.up("grid"),c=b.store;b.plugins[0].cancelEdit(),c.insert(0,{date:new Date,pid:app.patient.pid,uid:app.user.id,eid:app.patient.eid}),b.plugins[0].startEdit(0,0)},onRemindersAlertOkBtnClick:function(a){var b=a.up("window"),c=b.down("grid").getStore();c.sync(),b.close()},onRemindersAlertCancelBtnClick:function(a){var b=a.up("window"),c=b.down("grid").getStore();c.rejectChanges(),b.close()},onPatientSet:function(a){this.getPatientReminders("Administrative",a.pid)},onEncounterOpen:function(a){this.getPatientReminders("Clinical",a.data.pid)},getPatientReminders:function(a,b){var c,d,e=this,f="RemindersAlertWindow"+a,g=Ext.ComponentQuery.query("window[action="+f+"]");d=0===g.length?Ext.create("App.view.patient.RemindersAlert",{title:_("reminders")+" ("+_(a.toLowerCase())+")",action:f}):g[0],c=d.down("grid").getStore(),d.close(),c.load({filters:[{property:"pid",value:b},{property:"type",value:a},{property:"active",value:!0}],callback:function(a){a.length>0&&(e.playSound(),d.show())}})},playSound:function(){this.alertAudio?(this.alertAudio.dom.firstChild.currentTime=0,this.alertAudio.dom.firstChild.play()):this.alertAudio=Ext.core.DomHelper.append(Ext.getBody(),{html:'<audio autoplay id="reminderAlert" ><source src="resources/audio/sweetalertsound4.wav" type="audio/wav"></audio>'},!0)}}),Ext.define("App.controller.patient.Referrals",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"ReferralPanelGrid",selector:"patientreferralspanel"},{ref:"AddReferralBtn",selector:"button[action=addReferralBtn]"},{ref:"PrintReferralBtn",selector:"#printReferralBtn"},{ref:"ReferralProviderCombo",selector:"#ReferralProviderCombo"},{ref:"ReferralLocalProviderCombo",selector:"#ReferralLocalProviderCombo"},{ref:"ReferralExternalProviderCombo",selector:"#ReferralExternalProviderCombo"},{ref:"ReferralExternalReferralCheckbox",selector:"#ReferralExternalReferralCheckbox"}],init:function(){var a=this;a.control({patientreferralspanel:{activate:a.onReferralActive,selectionchange:a.onGridSelectionChange,beforeedit:a.onGridBeforeEdit},"button[action=addReferralBtn]":{click:a.onAddReferralBtnClicked},"#referralServiceSearch":{select:a.onReferralServiceSearchSelect},"#referralDiagnosisSearch":{select:a.onReferralDiagnosisSearchSelect},"#ReferralExternalReferralCheckbox":{change:a.onReferralExternalReferralCheckboxChange},"#printReferralBtn":{click:a.onPrintReferralBtnClick},"#ReferralProviderCombo":{select:a.onReferralProviderComboSelect},"#ReferralLocalProviderCombo":{select:a.onReferralLocalProviderComboSelect},"#ReferralExternalProviderCombo":{select:a.onReferralExternalProviderComboSelect}})},onGridBeforeEdit:function(a,b){this.getReferralExternalReferralCheckbox().setValue(b.record.data.is_external_referral),this.getReferralLocalProviderCombo().setValue(b.record.data.refer_to_text),this.getReferralExternalProviderCombo().setValue(b.record.data.refer_to_text)},onReferralProviderComboSelect:function(a,b){var c=a.up("form").getForm().getRecord();c.set({refer_by:b[0].data.option_value})},onReferralLocalProviderComboSelect:function(a,b){var c=a.up("form").getForm().getRecord();c.set({refer_to:b[0].data.id})},onReferralExternalProviderComboSelect:function(a,b){var c=a.up("form").getForm().getRecord();c.set({refer_to:b[0].data.id})},onPrintReferralBtnClick:function(){var a,b,c=this,d=c.getReferralPanelGrid(),e=d.getSelectionModel(),f=e.getSelection();for(d.view.el.mask(_("generating_documents")),b=0;b<f.length;b++)a={pid:app.patient.pid,eid:app.patient.eid,referralId:f[b].data.id,templateId:10,docType:"Referral"},DocumentHandler.createTempDocument(a,function(a,b){window.dual?dual.onDocumentView(b.result.id,"Referral"):app.onDocumentView(b.result.id,"Referral"),d.view.el.unmask()})},onGridSelectionChange:function(a,b){this.getPrintReferralBtn().setDisabled(0==b.length)},onReferralServiceSearchSelect:function(a,b){var c=a.up("form").getForm().getRecord();c.set({service_code:b[0].data.code,service_code_type:b[0].data.code_type})},onReferralDiagnosisSearchSelect:function(a,b){var c=a.up("form").getForm().getRecord();c.set({diagnosis_code:b[0].data.code,diagnosis_code_type:b[0].data.code_type})},onReferralExternalReferralCheckboxChange:function(a,b){this.getReferralLocalProviderCombo().setVisible(!b),this.getReferralLocalProviderCombo().setDisabled(b),this.getReferralExternalProviderCombo().setVisible(b),this.getReferralExternalProviderCombo().setDisabled(!b)},onReferralActive:function(a){var b=a.getStore();b.clearFilter(!0),b.filter([{property:"pid",value:app.patient.pid}])},onAddReferralBtnClicked:function(){var a,b=this,c=b.getReferralPanelGrid().getStore(),d=b.getReferralPanelGrid().editingPlugin;d.cancelEdit(),a=c.add({pid:app.patient.pid,eid:app.patient.eid,create_date:new Date,create_uid:app.user.id,referral_date:new Date}),d.startEdit(a[0],0)}}),Ext.define("App.controller.patient.RxOrders",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"RxOrdersGrid",selector:"patientrxorderspanel"},{ref:"RxNormOrderLiveSearch",selector:"#RxNormOrderLiveSearch"},{ref:"CloneRxOrderBtn",selector:"#cloneRxOrderBtn"},{ref:"PrintRxOrderBtn",selector:"#printRxOrderBtn"},{ref:"RxEncounterDxLiveSearch",selector:"#rxEncounterDxLiveSearch"},{ref:"RxEncounterDxCombo",selector:"#RxEncounterDxCombo"},{ref:"RxOrderMedicationInstructionsCombo",selector:"#RxOrderMedicationInstructionsCombo"},{ref:"RxOrderGridFormNotesField",selector:"#RxOrderGridFormNotesField"},{ref:"RxOrderCompCheckBox",selector:"#RxOrderCompCheckBox"},{ref:"RxOrderSplyCheckBox",selector:"#RxOrderSplyCheckBox"}],init:function(){var a=this;a.control({patientrxorderspanel:{activate:a.onRxOrdersGridActive,selectionchange:a.onRxOrdersGridSelectionChange,beforerender:a.onRxOrdersGridBeforeRender,beforeedit:a.onRxOrdersGridBeforeEdit,edit:a.onRxOrdersGridEdit},"#RxNormOrderLiveSearch":{beforeselect:a.onRxNormOrderLiveSearchBeforeSelect},"#newRxOrderBtn":{click:a.onNewRxOrderBtnClick},"#cloneRxOrderBtn":{click:a.onCloneRxOrderBtnClick},"#printRxOrderBtn":{click:a.onPrintRxOrderBtnClick},"#RxOrderCompCheckBox":{change:a.onRxOrderCompCheckBoxChange},"#RxOrderSplyCheckBox":{change:a.onRxOrderSplyCheckBoxChange}})},onRxOrderCompCheckBoxChange:function(a,b){b&&this.getRxOrderSplyCheckBox().setValue(!1)},onRxOrderSplyCheckBoxChange:function(a,b){b&&this.getRxOrderCompCheckBox().setValue(!1)},doSelectOrderByOrderId:function(a){var b=this.getRxOrdersGrid().getSelectionModel(),c=this.getRxOrdersGrid().getStore().getById(a);return c?(b.select(c),c):!1},onRxOrdersGridBeforeRender:function(a){app.on("patientunset",function(){a.editingPlugin.cancelEdit(),a.getStore().removeAll()})},onRxOrdersGridSelectionChange:function(a,b){this.getCloneRxOrderBtn().setDisabled(0===b.length),this.getPrintRxOrderBtn().setDisabled(0===b.length)},onRxNormOrderLiveSearchBeforeSelect:function(a,b){var c,d=a.up("form").getForm(),e=this.getRxOrderMedicationInstructionsCombo();d.getRecord().set({RXCUI:b.data.RXCUI,CODE:b.data.CODE,NDC:b.data.NDC}),c=b.instructions(),e.bindStore(c,!0),e.store=c,e.store.load(),d.findField("dispense").focus(!1,200)},onRxOrdersGridBeforeEdit:function(a,b){this.getRxEncounterDxCombo().getStore().load({filters:[{property:"eid",value:b.record.data.eid}]}),this.getRxOrderMedicationInstructionsCombo().getStore().load({filters:[{property:"rxcui",value:b.record.data.RXCUI}]})},onRxOrdersGridEdit:function(a,b){var c,d=this.getRxOrderMedicationInstructionsCombo(),e=b.record.data.directions,f=d.findRecordByValue(e);return f!==!1?!0:(Ext.Msg.show({title:_("new_instruction"),msg:"<p>"+e+"</p><p>"+_("would_you_like_to_save_it")+"</p>",buttons:Ext.Msg.YESNO,icon:Ext.Msg.QUESTION,fn:function(a){"yes"==a&&(c=d.getStore(),c.add({rxcui:b.record.data.RXCUI,occurrence:"1",instruction:e}),c.sync())}}),!0)},onNewRxOrderBtnClick:function(a){var b=a.up("grid");b.editingPlugin.cancelEdit(),b.getStore().insert(0,{pid:app.patient.pid,eid:app.patient.eid,uid:app.user.id,refill:0,daw:null,date_ordered:new Date,begin_date:new Date,created_date:new Date}),b.editingPlugin.startEdit(0,0)},onCloneRxOrderBtnClick:function(){var a=this;Ext.Msg.show({title:_("wait"),msg:_("sure_you_want_clone_prescription"),buttons:Ext.Msg.YESNO,icon:Ext.Msg.QUESTION,fn:function(b){"yes"==b&&a.doCloneOrder()}})},doCloneOrder:function(a){var b,c,d=this,e=d.getRxOrdersGrid(),f=e.getSelectionModel(),g=e.getStore(),h=f.getSelection(),i=new Date;e.editingPlugin.cancelEdit(),f.deselectAll();for(var j=0;j<h.length;j++)c=Ext.clone(h[j].data),c.pid=app.patient.pid,c.eid=app.patient.eid,c.uid=app.user.id,c.ref_order=c.id,"string"==typeof a&&(c.ref_order+="~"+a),c.date_ordered=i,c.begin_date=i,c.created_date=i,c.id=null,b=g.insert(0,c);return e.editingPlugin.startEdit(b[0],0),b},onPrintRxOrderBtnClick:function(a){var b,c,d,e,f,h=this,i=h.getRxOrdersGrid(),j=Ext.isArray(a)?a:i.getSelectionModel().getSelection(),k=!0,l="",m={};for(m.pid=app.patient.pid,m.eid=app.patient.eid,m.orderItems=[],m.docType="Rx",m.templateId=5,b=k?[""]:["Description","Instructions","Dispense","Refill","Days Supply","Dx","Notes","References"],m.orderItems.push(b),d=0;d<j.length;d++)if(c=j[d].data,""!==c.ref_order&&(e=c.ref_order.split("~"),e.length>=3&&(l="Rx Reference#: "+e[2])),k){f="<u>"+_("order_number")+"</u>: "+g("rx_order_number_prefix")+c.id+"<br>",f+="<u>"+_("description")+"</u>: <b>"+c.STR.toUpperCase()+"</b><br>",f+="<u>"+_("dispense_as_written")+"</u>: "+_(c.daw?"yes":"no")+"<br>",f+="<u>"+_("quantity")+"</u>: "+c.dispense+"<br>",c.days_supply&&(f+="<u>"+_("days_supply")+"</u>: "+c.days_supply+"<br>"),f+="<u>"+_("refill")+"</u>: "+c.refill+"<br>",f+="<u>"+_("instructions")+"</u>: "+c.directions+"<br>";var n=c.dxs.join?c.dxs.join(", "):c.dxs;n&&""!==n&&(f+="<u>"+_("dx")+"</u>: "+(c.dxs.join?c.dxs.join(", "):c.dxs)+"<br>"),""!==c.notes&&(f+="<u>"+_("notes_to_pharmacist")+"</u>: "+c.notes+"<br>"),""!==l&&(f+="<u>References</u>: "+l+"<br>"),""!==c.system_notes&&(f+="<b>"+c.system_notes+"</b><br>"),m.orderItems.push([f])}else m.orderItems.push([c.STR+" "+c.dose+" "+c.route+" "+c.form,c.directions,c.dispense,c.refill,c.days_supply,c.dxs.join?c.dxs.join(", "):c.dxs,c.notes,l]);DocumentHandler.createTempDocument(m,function(a,b){window.dual?dual.onDocumentView(b.result.id,"Rx"):app.onDocumentView(b.result.id,"Rx")})},onRxOrdersGridActive:function(a){var b=a.getStore();a.editingPlugin.editing||(b.clearFilter(!0),b.filter([{property:"pid",value:app.patient.pid}]))},doAddOrderByTemplate:function(a){var b=this,c=b.getRxOrdersGrid(),d=c.getStore(),e=new Date;a.pid=app.patient.pid,a.eid=app.patient.eid,a.uid=app.user.id,a.date_ordered=e,a.begin_date=e,a.created_date=e,d.add(a),d.sync({success:function(){app.msg(_("sweet"),a.STR+" "+_("added"))}})}}),Ext.define("App.controller.patient.Social",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"SocialPanel",selector:"patientsocialpanel"},{ref:"SocialHistoryGrid",selector:"patientsocialhistorypanel"},{ref:"SocialHistoryTypeCombo",selector:"combobox[action=socialHistoryTypeCombo]"},{ref:"SocialHistoryAddBtn",selector:"button[action=socialHistoryAddBtn]"},{ref:"ObservationColumn",selector:"#socialhistorypanelobservationcolumn"},{ref:"SmokingStatusCombo",selector:"#socialsmokingstatuscombo"}],init:function(){var a=this;a.control({patientsocialpanel:{activate:a.onSocialPanelActive},patientsocialhistorypanel:{beforeedit:a.onSocialHistoryBeforeEdit},"button[action=socialHistoryAddBtn]":{click:a.onAddBtnClicked},"combobox[action=socialHistoryTypeCombo]":{select:a.onHistoryTypeComboSelectionChanged},"#socialsistoryobservationcombo":{select:a.onHistoryObservationComboSelect},"#socialsmokingstatuscombo":{select:a.onSmokingStatusComboSelect},"#reviewsmokingstatuscombo":{select:a.onSmokingStatusComboSelect}}),a.smokeStatusStore=Ext.create("App.store.patient.SmokeStatus",{pageSize:1e3,listeners:{scope:a,load:a.onSmokeStatusStoreLoad}})},onSmokeStatusStoreLoad:function(a){a.last()&&this.getSmokingStatusCombo()&&this.getSmokingStatusCombo().setValue(a.last().data.status)},onSmokingStatusComboSelect:function(a,b){var c=this;c.smokeStatusStore.add({pid:app.patient.pid,eid:app.patient.eid,status:b[0].data.option_name,status_code:b[0].data.code,status_code_type:b[0].data.code_type,create_uid:app.user.id,create_date:new Date}),c.smokeStatusStore.sync({success:function(){window.dual?dual.msg(_("sweet"),_("record_updated")):app.msg(_("sweet"),_("record_updated")),c.loadSmokeStatusStore(a.up("grid").up("panel"))
},failure:function(){window.dual?dual.msg(_("oops"),_("record_error"),!0):app.msg(_("oops"),_("record_error"),!0)}})},onAddBtnClicked:function(){var a,b=this.getSocialHistoryTypeCombo().lastSelection[0],c=this.getSocialHistoryGrid().editingPlugin;this.getSocialHistoryTypeCombo().isValid()&&(c.cancelEdit(),a=this.getSocialHistoryGrid().getStore().add({pid:app.patient.pid,eid:app.patient.eid,create_uid:app.user.id,update_uid:app.user.id,create_date:new Date,update_date:new Date,category_code:b.data.code,category_code_type:b.data.code_type,category_code_text:b.data.option_name}),c.startEdit(a[0],0))},onSocialHistoryBeforeEdit:function(a,b){var c,d=this.getObservationColumn();c="229819007"==b.record.data.category_code?{xtype:"gaiaehr.combo",valueField:"option_name",itemId:"socialsistoryobservationcombo",list:106}:"160573003"==b.record.data.category_code?{xtype:"gaiaehr.combo",valueField:"option_name",itemId:"socialsistoryobservationcombo",list:105}:"256235009"==b.record.data.category_code?{xtype:"gaiaehr.combo",valueField:"option_name",itemId:"socialsistoryobservationcombo",list:107}:"363908000"==b.record.data.category_code?{xtype:"gaiaehr.combo",valueField:"option_name",itemId:"socialsistoryobservationcombo",list:108}:{xtype:"textfield"},c._marginWidth=2,d.setEditor(c),a.editor.onColumnResize(d)},onHistoryObservationComboSelect:function(a,b){var c=a.up("form").getForm().getRecord();c.set({observation_code:b[0].data.code,observation_code_type:b[0].data.code_type})},onHistoryTypeComboSelectionChanged:function(){this.getSocialHistoryAddBtn().enable()},loadSmokeStore:function(){this.smokeStatusStore.clearFilter(!0),this.smokeStatusStore.filter([{property:"pid",value:app.patient.pid}])},loadSmokeStatusStore:function(a){var b=a.query("#PatientSmokingStatusGrid");if(b.length>0){var c=b[0].getStore();c.clearFilter(!0),c.filter([{property:"pid",value:app.patient.pid}])}},loadSocialHistoryStore:function(a){var b=a.query("#PatientSocialHistoryGrid");if(b.length>0){var c=b[0].getStore();c.clearFilter(!0),c.filter([{property:"pid",value:app.patient.pid}])}},onSocialPanelActive:function(a){this.loadSmokeStatusStore(a),this.loadSocialHistoryStore(a),this.loadSmokeStore(),this.getSmokingStatusCombo().reset()}}),Ext.define("App.controller.patient.Vitals",{extend:"Ext.app.Controller",refs:[{ref:"VitalsPanel",selector:"vitalspanel"},{ref:"VitalsBlocksPanel",selector:"vitalspanel #vitalsBlocks"},{ref:"VitalsBlocksPanel",selector:"vitalspanel #vitalsBlocks"},{ref:"VitalsHistoryGrid",selector:"vitalspanel #historyGrid"},{ref:"VitalsAddBtn",selector:"vitalspanel #vitalAddBtn"},{ref:"VitalSignBtn",selector:"vitalspanel #vitalSignBtn"},{ref:"VitalTempFField",selector:"#vitalTempFField"},{ref:"VitalTempCField",selector:"#vitalTempCField"},{ref:"VitalHeightInField",selector:"#vitalHeightInField"},{ref:"VitalHeightCmField",selector:"#vitalHeightCmField"},{ref:"VitalWeightKgField",selector:"#vitalWeightKgField"},{ref:"VitalWeightLbsField",selector:"#vitalWeightLbsField"},{ref:"BpBlock",selector:"vitalspanel #bpBlock"},{ref:"TempBlock",selector:"vitalspanel #tempBlock"},{ref:"WeighBlock",selector:"vitalspanel #weighBlock"},{ref:"HeightBlock",selector:"vitalspanel #heightBlock"},{ref:"BmiBlock",selector:"vitalspanel #bmiBlock"},{ref:"NotesBlock",selector:"vitalspanel #notesBlock"}],init:function(){var a=this;a.control({viewport:{beforeencounterload:a.onAppBeforeEncounterLoad},"vitalspanel #historyGrid":{selectionchange:a.onHistoryGridSelectionChange,beforeselect:a.onHistoryGridBeforeSelect,beforeedit:a.onHistoryGridBeforeEdit,validateedit:a.onHistoryGridValidEdit,edit:a.onHistoryGridEdit},"vitalspanel #vitalAddBtn":{click:a.onVitalAddBtnClick},"vitalspanel #vitalSignBtn":{click:a.onVitalSignBtnClick},"#vitalTempFField":{keyup:a.onVitalTempFFieldKeyUp},"#vitalTempCField":{keyup:a.onVitalTempCFieldKeyUp},"#vitalHeightInField":{keyup:a.onVitalHeightInFieldKeyUp},"#vitalHeightCmField":{keyup:a.onVitalHeightCmFieldKeyUp},"#vitalWeightLbsField":{keyup:a.onVitalWeightLbsFieldKeyUp},"#vitalWeightKgField":{keyup:a.onVitalWeightKgFieldKeyUp}})},onAppBeforeEncounterLoad:function(a){this.getVitalsHistoryGrid()&&this.doReconfigureGrid(a.vitalsStore?a.vitalsStore:Ext.getStore("ext-empty-store"))},onHistoryGridSelectionChange:function(a,b){var c=this,d=c.getVitalSignBtn();this.doUpdateBlocks(b),0===b.length||b[0].data.auth_uid>0?d.disable():d.enable()},onHistoryGridBeforeSelect:function(a,b){var c=a.getSelection().length;return c>0&&b.data.auth_uid>0?(app.msg(_("oops"),_("multi_select_signed_records_not_authorized"),!0),!1):!0},onHistoryGridValidEdit:function(a,b){var c=this,d=a.editor.getForm(),e=c.isMetric()?d.findField("weight_kg").getValue():d.findField("weight_lbs").getValue(),f=c.isMetric()?d.findField("height_cm").getValue():d.findField("height_in").getValue(),g=c.bmi(e,f),h=c.bmiStatus(g);b.record.set({bmi:g,bmi_status:h})},onHistoryGridEdit:function(a,b){this.doUpdateBlocks([b.record])},onHistoryGridBeforeEdit:function(a,b){return 0!==b.record.data.auth_uid?(app.msg(_("oops"),_("this_record_can_not_be_modified_because_it_has_been_signed_by")+" "+b.record.data.authorized_by,!0),!1):!0},onVitalAddBtnClick:function(a){var b,c=a.up("grid"),d=c.getStore();c.editingPlugin.cancelEdit(),b=d.add({pid:app.patient.pid,eid:app.patient.eid,uid:app.user.id,date:new Date}),c.editingPlugin.startEdit(b[0],1)},onVitalSignBtnClick:function(){var a=this,b=a.getVitalsHistoryGrid(),c=b.getSelectionModel(),d=c.getSelection();app.fireEvent("beforevitalssigned",d),app.passwordVerificationWin(function(b,c){"ok"==b&&User.verifyUserPass(c,function(b,c){if(c.result){for(var e=0;e<d.length;e++)d[e].set({auth_uid:app.user.id});d[0].store.sync({callback:function(){app.msg("Sweet!",_("vitals_signed")),app.AuditLog("Patient vitals authorized"),app.fireEvent("vitalssigned",d)}})}else Ext.Msg.show({title:"Oops!",msg:_("incorrect_password"),buttons:Ext.Msg.OKCANCEL,icon:Ext.Msg.ERROR,fn:function(b){"ok"==b&&a.onVitalSignBtnClick()}})})})},doUpdateBlocks:function(a){var b=this;a.length>0?(b.getBpBlock().update(b.getBlockTemplate("bp",a[0])),b.isMetric()?(b.getTempBlock().update(b.getBlockTemplate("temp_c",a[0])),b.getWeighBlock().update(b.getBlockTemplate("weight_kg",a[0])),b.getHeightBlock().update(b.getBlockTemplate("height_cm",a[0]))):(b.getTempBlock().update(b.getBlockTemplate("temp_f",a[0])),b.getWeighBlock().update(b.getBlockTemplate("weight_lbs",a[0])),b.getHeightBlock().update(b.getBlockTemplate("height_in",a[0]))),b.getBmiBlock().update(b.getBlockTemplate("bmi",a[0])),b.getNotesBlock().update(b.getBlockTemplate("other_notes",a[0]))):(b.getBpBlock().update(b.getBlockTemplate("bp",!1)),b.isMetric()?(b.getTempBlock().update(b.getBlockTemplate("temp_c",!1)),b.getWeighBlock().update(b.getBlockTemplate("weight_kg",!1)),b.getHeightBlock().update(b.getBlockTemplate("height_cm",!1))):(b.getTempBlock().update(b.getBlockTemplate("temp_f",!1)),b.getWeighBlock().update(b.getBlockTemplate("weight_lbs",!1)),b.getHeightBlock().update(b.getBlockTemplate("height_in",!1))),b.getBmiBlock().update(b.getBlockTemplate("bmi",!1)),b.getNotesBlock().update(b.getBlockTemplate("other_notes",!1)))},getBlockTemplate:function(a,b){var c="",d="",e="",f="",g="center";return b!==!1?"bp"==a?(c=_(a),d=b.data.bp_systolic+"/"+b.data.bp_diastolic,d="null/null"==d||"/"==d?"--/--":d,e=_("systolic")+"/"+_("diastolic")):"temp_c"==a||"temp_f"==a?(c=_("temp"),f="temp_c"==a?"&deg;C":"&deg;F",d=null===b.data[a]||""===b.data[a]?"--":b.data[a]+f,e=""===b.data.temp_location?"--":b.data.temp_location):"weight_lbs"==a||"weight_kg"==a?(c=_("weight"),d=null===b.data[a]||""===b.data[a]?"--":b.data[a]+f,e="weight_lbs"==a?"lbs/oz":"Kg"):"height_in"==a||"height_cm"==a?(c=_("height"),f="height_in"==a?" in":" cm",d=null===b.data[a]||""===b.data[a]?"--":b.data[a]+f):"bmi"==a?(c=_(a),d=null===b.data[a]||""===b.data[a]?"--":this.decimalRound10(b.data[a],-1),e=""===b.data.bmi_status?"--":b.data.bmi_status):"other_notes"==a&&(c=_("notes"),d=null===b.data[a]||""===b.data[a]?"--":b.data[a],g="left"):("temp_c"==a||"temp_f"==a?c=_("temp"):"weight_lbs"==a||"weight_kg"==a?c=_("weight"):"height_in"==a||"height_cm"==a?c=_("height"):"other_notes"==a?(c=_("notes"),g="left"):c=_(a),d="bp"==a?"--/--":"--",e="--"),'<p class="title">'+c+'</p><p class="value" style="text-align: '+g+'">'+d+'</p><p class="extra">'+e+"</p>"},doReconfigureGrid:function(a){var b=this;a.sort([{property:"date",direction:"DESC"}]),a.on("write",b.onVitalStoreWrite,b),b.getVitalsHistoryGrid().reconfigure(a),b.getVitalsHistoryGrid().getSelectionModel().select(0)},onVitalStoreWrite:function(a,b,c){app.fireEvent("vitalwrite",a,b,c)},onVitalTempFFieldKeyUp:function(a){a.up("form").getForm().getRecord().set({temp_c:this.fc(a.getValue())})},onVitalTempCFieldKeyUp:function(a){a.up("form").getForm().getRecord().set({temp_f:this.cf(a.getValue())})},onVitalHeightInFieldKeyUp:function(a){a.up("form").getForm().getRecord().set({height_cm:this.incm(a.getValue())})},onVitalHeightCmFieldKeyUp:function(a){a.up("form").getForm().getRecord().set({height_in:this.cmin(a.getValue())})},onVitalWeightLbsFieldKeyUp:function(a){a.up("form").getForm().getRecord().set({weight_kg:this.lbskg(a.getValue())})},onVitalWeightKgFieldKeyUp:function(a){a.up("form").getForm().getRecord().set({weight_lbs:this.kglbs(a.getValue())})},cf:function(a){return Ext.util.Format.round(9*a/5+32,1)},fc:function(a){return Ext.util.Format.round(5*(a-32)/9,1)},lbskg:function(a){var b=a[0]||0,c=a[1]||0,d=0;return b>0&&(d+=b/2.2046),c>0&&(d+=c/35.274),Ext.util.Format.round(d,1)},kglbs:function(a){return Ext.util.Format.round(2.2046*a,1)},incm:function(a){return Math.floor(2.54*a)},cmin:function(a){return Ext.util.Format.round(a/2.54,0)},bmi:function(weight,height){var bmi="",foo=weight.split("/");return foo.length>1&&(weight=eval(foo[0])+foo[1]/16),weight>0&&height>0&&(bmi=this.isMetric()?weight/(height/100*(height/100)):weight/(height*height)*703),bmi.toFixed?bmi.toFixed(1):bmi},bmiStatus:function(a){var b="";return""==a?"":(15>a?b=_("very_severely_underweight"):a>=15&&16>a?b=_("severely_underweight"):a>=16&&18.5>a?b=_("underweight"):a>=18.5&&25>a?b=_("normal"):a>=25&&30>a?b=_("overweight"):a>=30&&35>a?b=_("obese_class_1"):a>=35&&40>a?b=_("obese_class_2"):a>=40&&(b=_("obese_class_3")),b)},isMetric:function(){return"metric"==g("units_of_measurement")},decimalAdjust:function(a,b,c){return"undefined"==typeof c||0===+c?Math[a](b):(b=+b,c=+c,isNaN(b)||"number"!=typeof c||c%1!==0?0/0:(b=b.toString().split("e"),b=Math[a](+(b[0]+"e"+(b[1]?+b[1]-c:-c))),b=b.toString().split("e"),+(b[0]+"e"+(b[1]?+b[1]+c:c))))},decimalRound10:function(a,b){return this.decimalAdjust("round",a,b)},floorRound10:function(a,b){return decimalAdjust("floor",a,b)},ceilRound10:function(a,b){return decimalAdjust("ceil",a,b)}}),Ext.define("App.controller.patient.Summary",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"PatientSummaryPanel",selector:"PatientSummaryPanel"},{ref:"PatientDocumentPanel",selector:"patientdocumentspanel"},{ref:"PatientCcdPanel",selector:"patientccdpanel"},{ref:"ReferralPanelGrid",selector:"patientreferralspanel"},{ref:"AddReferralBtn",selector:"button[action=addReferralBtn]"},{ref:"PrintReferralBtn",selector:"#printReferralBtn"}],init:function(){var a=this;a.control({"#PatientSummaryPanel":{activate:a.onPatientSummaryPanel},"#PatientSummaryEncountersPanel":{itemdblclick:a.onPatientSummaryEncounterDblClick},"#PatientSummaryContactsPanel":{activate:a.reloadGrid},"#PatientSummaryDisclosuresPanel":{activate:a.reloadGrid},"#PatientSummeryNotesPanel":{activate:a.reloadGrid},"#PatientSummaryRemindersPanel":{activate:a.reloadGrid},"#PatientSummaryVitalsPanel":{activate:a.reloadGrid},"#PatientEncounterHistoryPanel":{activate:a.reloadGrid},"#PatientSummaryDocumentsPanel":{activate:a.reloadGrid},"#PatientSummaryPreventiveCareAlertsPanel":{activate:a.reloadGrid}}),a.nav=a.getController("Navigation")},onPatientSummaryPanel:function(a){var b=this.nav.getExtraParams();b&&(b.document?a.down("tabpanel").setActiveTab(this.getPatientDocumentPanel()):b.ccd&&a.down("tabpanel").setActiveTab(this.getPatientCcdPanel()))},onPatientSummaryEncounterDblClick:function(a,b){app.openEncounter(b.data.eid)},reloadGrid:function(a){var b;b="PatientSummaryVitalsPanel"==a.itemId?a.down("vitalsdataview").getStore():a.getStore(),b.load({filters:[{property:"pid",value:app.patient.pid}]})}}),Ext.define("App.controller.patient.encounter.EncounterDocuments",{extend:"Ext.app.Controller",requires:[],refs:[],init:function(){var a=this;this.control({"#EncounterDocumentsPrintBtn":{click:a.onEncounterDocumentsPrintBtnClick}})},onEncounterDocumentsPrintBtnClick:function(a){for(var b=a.up("grid"),c=b.getSelectionModel().getSelection(),d={},e=0;e<c.length;e++){var f=c[e].data;d[f.document_type]||(d[f.document_type]={},d[f.document_type].controller=f.controller,d[f.document_type].method=f.method,d[f.document_type].items=[]),Ext.Array.push(d[f.document_type].items,f.record_id)}this.doEncounterDocumentsPrint(d)},doEncounterDocumentsPrint:function(a){var b,c,d,e=this;Ext.Object.each(a,function(a,f){if(c=[],"NOTE"==a.toUpperCase())for(b=Ext.data.StoreManager.lookup("DoctorsNotesStore"),d=0;d<f.items.length;d++)Ext.Array.push(c,{property:"id",value:f.items[d]}),b.load({filters:c,callback:function(a){e.getController(f.controller)[f.method](a[0])}});else{for("RX"==a.toUpperCase()?b=Ext.data.StoreManager.lookup("RxOrderStore"):"RAD"==a.toUpperCase()?b=Ext.data.StoreManager.lookup("LabOrderStore"):"LAB"==a.toUpperCase()&&(b=Ext.data.StoreManager.lookup("RadOrderStore")),d=0;d<f.items.length;d++)Ext.Array.push(c,{property:"id",value:f.items[d]});b.load({filters:c,callback:function(a){e.getController(f.controller)[f.method](a)}})}})},onDocumentView:function(){},loadDocumentsByEid:function(a,b){var c=a.getStore();c.removeAll(),Encounter.getEncounterPrintDocumentsByEid(b,function(a){for(var b=[],d=0;d<a.length;d++){var e=a[d];"rx"==e.document_type?(e.controller="patient.RxOrders",e.method="onPrintRxOrderBtnClick"):"rad"==e.document_type?(e.controller="patient.RadOrders",e.method="onPrintRadOrderBtnClick"):"lab"==e.document_type?(e.controller="patient.LabOrders",e.method="onPrintLabOrderBtnClick"):"note"==e.document_type&&(e.controller="patient.DoctorsNotes",e.method="onPrintDoctorsNoteBtn"),e.document_type=Ext.String.capitalize(e.document_type),Ext.Array.push(b,e)}b.length>0&&c.loadRawData(b)})}}),Ext.define("App.controller.patient.encounter.EncounterSign",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"EncounterSignWindow",selector:"#EncounterSignWindow"},{ref:"EncounterCoSignSupervisorCombo",selector:"#EncounterCoSignSupervisorCombo"},{ref:"EncounterCoSignSupervisorBtn",selector:"#EncounterCoSignSupervisorBtn"},{ref:"EncounterCancelSignBtn",selector:"#EncounterCancelSignBtn"},{ref:"EncounterSignBtn",selector:"#EncounterSignBtn"},{ref:"EncounterSignDocumentGrid",selector:"#EncounterSignDocumentGrid"},{ref:"EncounterSignAlertGrid",selector:"#EncounterSignAlertGrid"}],init:function(){var a=this;this.control({"#EncounterSignWindow":{show:a.onEncounterSignWindowShow},"#EncounterCoSignSupervisorCombo":{beforerender:a.onEncounterCoSignSupervisorComboBeforeRender},"#EncounterCoSignSupervisorBtn":{click:a.onEncounterCoSignSupervisorBtnClick},"#EncounterSignBtn":{click:a.onEncounterSignBtnClick},"#EncounterCancelSignBtn":{click:a.onEncounterCancelSignBtnClick}})},onEncounterCoSignSupervisorBtnClick:function(){this.coSignEncounter()},onEncounterSignBtnClick:function(){this.signEncounter()},onEncounterCancelSignBtnClick:function(){this.cancelCheckout()},coSignEncounter:function(){this.getEncounterSignWindow().enc.doSignEncounter(!0)},signEncounter:function(){a("require_enc_supervisor")?this.getEncounterCoSignSupervisorCombo().isValid()&&this.getEncounterSignWindow().enc.doSignEncounter(!1):this.getEncounterSignWindow().enc.doSignEncounter(!1)},cancelCheckout:function(){this.getEncounterSignWindow().close(),this.getEncounterSignWindow().down("form").getForm().reset()},onEncounterCoSignSupervisorComboBeforeRender:function(a){a.getStore().load()},onEncounterSignWindowShow:function(){var b=this,c=b.getEncounterSignWindow(),d=b.getEncounterCoSignSupervisorCombo(),e=b.getEncounterCoSignSupervisorBtn(),f=b.getEncounterSignBtn();b.encounter=c.enc.encounter,b.pid=c.enc.pid,b.eid=c.enc.eid,a("access_encounter_checkout")&&(App.app.getController("patient.encounter.SuperBill").reconfigureSupperBillGrid(b.encounter.services()),b.getEncounterSignAlertGrid().getStore().load({params:{eid:b.eid}})),b.getEncounterSignDocumentGrid().loadDocs(app.patient.eid);var g=null!=c.enc.encounter.data.supervisor_uid&&c.enc.encounter.data.supervisor_uid>0;g?d.setValue(c.enc.encounter.data.supervisor_uid):d.reset(),c.enc.isClose()||!a("sign_enc")?(f.disable(),e.disable(),d.setVisible(g),d.disable()):!g&&a("require_enc_supervisor")?(f.enable(),e.disable(),d.show(),d.enable()):g&&a("sign_enc_supervisor")?(f.disable(),e.enable(),d.show(),d.enable()):(f.enable(),e.disable(),d.hide(),d.disable())},alertIconRenderer:function(a){return 1==a?'<img src="resources/images/icons/icoLessImportant.png" />':2==a?'<img src="resources/images/icons/icoImportant.png" />':a}}),Ext.define("App.controller.patient.encounter.SuperBill",{extend:"Ext.app.Controller",requires:[],refs:[{ref:"SuperBillGrid",selector:"superbillpanel"},{ref:"SuperBillServiceAddBtn",selector:"#SuperBillServiceAddBtn"},{ref:"SuperBillEncounterDxCombo",selector:"#SuperBillEncounterDxCombo"}],init:function(){var a=this;this.control({viewport:{immunizationedit:a.onImmunizationEdit},superbillpanel:{beforeedit:a.onSuperBillGridBeforeEdit},"#SuperBillServiceAddBtn":{click:a.onSuperBillServiceAddBtnClick},"#SuperCptSearchCmb":{select:a.onSuperCptSearchCmbSelect}})},onImmunizationEdit:function(a,b){var c=this.getServiceFormEncounterRecord("cvx",b.data.id);0==c.length&&this.promptAddService(b,"cvx")},promptAddService:function(a,b){var c=this;Ext.Msg.show({title:_("wait"),msg:_("super_bill_prompt_add_question"),buttons:Ext.Msg.YESNO,icon:Ext.Msg.QUESTION,fn:function(d){"yes"==d&&c.addService(a,b)}})},addService:function(a,b){var c=this;"cvx"==b&&Immunizations.getCptByCvx(a.data.code,function(d){0==d.length?app.msg(_("oops"),_("no_service_code_found"),!0):1==d.length&&c.doAddService(a,b,d[0])})},doAddService:function(a,b,c,d){var e=this.getController("patient.encounter.Encounter").getEncounterRecord().services(),f={pid:a.data.pid,eid:a.data.eid,units:1,reference_type:b,reference_id:a.data.id,code:c?c.data.code:a.data.code,code_type:c?c.data.code_type:a.data.code_type,code_text:c?c.data.code_text:a.data.code_text,create_uid:app.user.id,date_create:new Date};a.data.tooth&&(f.tooth=a.data.tooth),a.data.surfaceString&&(f.surface=a.data.surfaceString),a.data.cavity_quadrant&&(f.cavity_quadrant=a.data.cavity_quadrant);var g=e.add(f);e.sync({callback:function(){app.msg(_("sweet"),_("service_added")),"function"==typeof d&&d(g[0])}})},getServiceRecord:function(a){var b=this.getController("patient.encounter.Encounter").getEncounterRecord().services();return b.getById(a)},onSuperBillGridBeforeEdit:function(a,b){this.getSuperBillEncounterDxCombo().getStore().load({filters:[{property:"eid",value:b.record.data.eid}]})},onSuperBillServiceAddBtnClick:function(){var a=this,b=a.getSuperBillGrid(),c=b.getStore(),d=a.getController("patient.encounter.EncounterSign").encounter;b.editingPlugin.cancelEdit();var e=c.add({pid:d.data.pid,eid:d.data.eid,units:1,create_uid:app.user.id,date_create:new Date});b.editingPlugin.startEdit(e[0],0)},onSuperCptSearchCmbSelect:function(a,b){var c=a.up("form").getForm().getRecord();c.set({code:b[0].data.code,code_type:b[0].data.code_type})},onRemoveService:function(a){a.destroy()},reconfigureSupperBillGrid:function(a){this.getSuperBillGrid().reconfigure(a)},getServiceFormEncounterRecord:function(a,b){var c=this.getController("patient.encounter.Encounter").getEncounterRecord(),d=[];if(null==c)return d;for(var e=c.services(),f=e.data.items,g=e.data.items.length,h=0;g>h;h++){var i=f[h];i.data.reference_type==a&&i.data.reference_id==b&&Ext.Array.push(d,i)}return d}}),Ext.define("App.controller.patient.encounter.SOAP",{extend:"Ext.app.Controller",recognition:null,speechAction:null,recognizing:!1,isError:!1,final_transcript:"",interim_transcript:"",field:{name:"subjective"},refs:[{ref:"Viewport",selector:"viewport"},{ref:"SoapPanel",selector:"#soapPanel"},{ref:"SoapForm",selector:"#soapPanel #soapForm"},{ref:"SoapProcedureWindow",selector:"#soapProcedureWindow"},{ref:"SoapProcedureForm",selector:"#soapProcedureWindow > form"},{ref:"SnippetsTreePanel",selector:"#soapPanel #SnippetsTreePanel"},{ref:"SpeechBtn",selector:"#soapPanel button[action=speechBtn]"},{ref:"EncounterProgressNotesPanel",selector:"#EncounterProgressNotesPanel"},{ref:"SoapDxCodesField",selector:"#SoapDxCodesField"},{ref:"SoapTemplateSpecialtiesCombo",selector:"#SoapTemplateSpecialtiesCombo"}],init:function(){var a=this;a.control({viewport:{beforeencounterload:a.onOpenEncounter,encounterbeforesync:a.onEncounterBeforeSync},"#soapPanel":{beforerender:a.onPanelBeforeRender},"#soapPanel #soapForm":{render:a.onPanelFormRender},"#soapPanel button[action=speechBtn]":{toggle:a.onSpeechBtnToggle},"#soapForm > fieldset > textarea":{focus:a.onSoapTextFieldFocus},"#soapProcedureWindow > form > textarea":{focus:a.onProcedureTextFieldFocus},"#SoapTemplateSpecialtiesCombo":{select:a.onSoapTemplateSpecialtiesComboChange,change:a.onSoapTemplateSpecialtiesComboChange}})},onSoapTemplateSpecialtiesComboChange:function(){this.loadSnippets()},onOpenEncounter:function(a){this.getSoapTemplateSpecialtiesCombo().setValue(a.data.specialty_id)},onEncounterBeforeSync:function(a,b,c){"soapForm"==c.owner.itemId&&this.getSoapDxCodesField().sync()},onSoapTextFieldFocus:function(a){this.field=a,this.loadSnippets(),Ext.isWebKit&&(this.final_transcript=a.getValue(),this.interim_transcript="")},onProcedureTextFieldFocus:function(a){this.field=a,this.loadSnippets(),Ext.isWebKit&&(this.final_transcript=a.getValue(),this.interim_transcript="")},loadSnippets:function(){var a=this;if(a.getSnippetsTreePanel().collapsed===!1){var b=a.getSnippetsTreePanel(),c=a.getSoapTemplateSpecialtiesCombo().getValue(),d=a.field.name+"-"+c;b.action!=d&&(b.setTitle(_(a.field.name)+" "+_("templates")),b.action=a.field.name+"-"+c,b.getSelectionModel().deselectAll(),b.getStore().load({filters:[{property:"category",value:a.field.name},{property:"specialty_id",value:a.getSoapTemplateSpecialtiesCombo().getValue()},{property:"parentId",value:"root"}]}))}},onPanelBeforeRender:function(a){if(Ext.isWebKit){var b=[{xtype:"button",action:"speechBtn",iconCls:"speech-icon-inactive",enableToggle:!0,minWidth:null},{xtype:"tbfill"}];a.down("form").getDockedItems('toolbar[dock="bottom"]')[0].insert(0,b)}},onPanelFormRender:function(a){Ext.widget("careplangoalsnewwindow",{constrainTo:a.el.dom})},onSpeechBtnToggle:function(a,b){b?this.initSpeech():this.stopSpeech()},stopSpeech:function(){this.recognition.stop(),this.final_transcript="",this.interim_transcript="",delete this.recognition},initSpeech:function(){var a=this;a.recognition&&a.stopSpeech(),a.final_transcript=a.field.getValue(),a.recognition=new webkitSpeechRecognition,a.recognition.continuous=!0,a.recognition.interimResults=!0,a.recognition.lang=app.user.localization,a.recognition.onstart=function(){a.recognizing=!0,a.setRecordButton(!0)},a.recognition.onerror=function(){a.isError=!0,a.setRecordButton(!1)},a.recognition.onend=function(){a.setRecordButton(!1)},a.recognition.onresult=function(b){a.interim_transcript="";for(var c=b.resultIndex;c<b.results.length;++c)b.results[c].isFinal?a.final_transcript+=b.results[c][0].transcript:a.interim_transcript+=b.results[c][0].transcript;a.field.setValue(a.final_transcript)},a.recognition.start()},setRecordButton:function(a){this.getSpeechBtn().setIconCls(a?"speech-icon-active":"speech-icon-inactive")}}),Ext.define("App.model.patient.EncounterDx",{extend:"Ext.data.Model",table:{name:"encounter_dx",comment:"Encounter Diagnosis"},fields:[{name:"id",type:"int"},{name:"pid",type:"int",index:!0},{name:"eid",type:"int",index:!0},{name:"uid",type:"int",index:!0},{name:"dx_group",type:"int",index:!0},{name:"dx_order",type:"int",index:!0},{name:"code",type:"string",len:25},{name:"code_type",type:"string",len:25},{name:"code_text",type:"string",store:!1,convert:function(a,b){return""==a?b.data.long_desc:a}},{name:"long_desc",type:"string",store:!1}],proxy:{type:"direct",api:{read:"Encounter.getEncounterDxs",create:"Encounter.createEncounterDx",update:"Encounter.updateEncounterDx",destroy:"Encounter.destroyEncounterDx"}},belongsTo:{model:"App.model.patient.SOAP",foreignKey:"eid"}}),Ext.define("App.view.patient.Immunizations",{extend:"Ext.panel.Panel",requires:["App.ux.combo.CVXManufacturersForCvx","App.ux.LiveImmunizationSearch","App.ux.grid.RowFormEditing","App.store.patient.CVXCodes","App.ux.form.fields.DateTime","App.ux.LiveUserSearch"],xtype:"patientimmunizationspanel",title:_("immunizations"),layout:"border",border:!1,items:[{xtype:"grid",region:"center",itemId:"patientImmunizationsGrid",selModel:Ext.create("Ext.selection.CheckboxModel"),columnLines:!0,store:this.store=Ext.create("App.store.patient.PatientImmunization",{groupField:"vaccine_name",sorters:["vaccine_name","administered_date"],remoteFilter:!0,autoSync:!1}),features:Ext.create("Ext.grid.feature.Grouping",{groupHeaderTpl:_("immunization")+': {name} ({rows.length} Item{[values.rows.length > 1 ? "s" : ""]})'}),columns:[{text:_("code"),dataIndex:"code",width:50,renderer:function(a,b,c){return c.data.is_error?'<span class="is_error_data">'+a+"</span>":a}},{text:_("immunization_name"),dataIndex:"vaccine_name",flex:1,renderer:function(a,b,c){return c.data.is_error?'<span class="is_error_data">'+a+"</span>":a}},{text:_("lot_number"),dataIndex:"lot_number",width:100,renderer:function(a,b,c){return c.data.is_error?'<span class="is_error_data">'+a+"</span>":a}},{text:_("amount"),dataIndex:"administer_amount",width:100,renderer:function(a,b,c){return c.data.is_error?'<span class="is_error_data">'+a+"</span>":a}},{text:_("units"),dataIndex:"administer_units",width:100,renderer:function(a,b,c){return c.data.is_error?'<span class="is_error_data">'+a+"</span>":a}},{text:_("notes"),dataIndex:"note",flex:1,renderer:function(a,b,c){return c.data.is_error?'<span class="is_error_data">'+a+"</span>":a}},{text:_("administered_by"),dataIndex:"administered_by",width:150,renderer:function(a,b,c){return c.data.is_error?'<span class="is_error_data">'+a+"</span>":a}},{xtype:"datecolumn",text:_("date"),format:"Y-m-d",width:100,dataIndex:"administered_date",renderer:function(a,b,c){return c.data.is_error?'<span class="is_error_data">'+a+"</span>":a}}],plugins:Ext.create("App.ux.grid.RowFormEditing",{autoCancel:!1,errorSummary:!1,clicksToEdit:2,items:[{xtype:"container",layout:"hbox",items:[{xtype:"container",layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",itemId:"line1",defaults:{margin:"0 10 0 0",xtype:"textfield"},items:[{xtype:"immunizationlivesearch",itemId:"immunizationsearch",fieldLabel:_("name"),name:"vaccine_name",valueField:"name",hideLabel:!1,allowBlank:!1,enableKeyEvents:!0,width:625}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 0 0",xtype:"textfield"},items:[{xtype:"numberfield",fieldLabel:_("amount"),name:"administer_amount",width:160},{xtype:"gaiaehr.listcombo",fieldLabel:_("units"),name:"administer_units",labelWidth:30,width:150,loadStore:!0,queryMode:"local",list:131},{xtype:"gaiaehr.combo",fieldLabel:_("administration_site"),width:295,labelWidth:110,list:119,queryMode:"local",loadStore:!0,name:"administration_site"}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 0 0",xtype:"textfield"},items:[{fieldLabel:_("route"),xtype:"gaiaehr.combo",list:6,queryMode:"local",loadStore:!0,width:295,name:"route"},{xtype:"mitos.datetime",fieldLabel:_("date_administered"),width:320,labelWidth:115,dateTimeFormat:"Y-m-d H:i:s",name:"administered_date",vtype:"date",allowBlank:!1}]},{fieldLabel:_("administered_by"),xtype:"userlivetsearch",itemId:"patientImmunizationsEditFormAdministeredByField",name:"administered_by",margin:"0 10 5 0",width:625,hideLabel:!1,forceSelection:!1,acl:"administer_patient_immunizations"},{fieldLabel:_("notes"),xtype:"textfield",name:"note",width:625}]},{xtype:"container",items:[{xtype:"fieldset",title:_("substance_data"),defaults:{margin:"0 0 5 0",width:250},margin:"0 15 5 0",items:[{fieldLabel:_("lot_number"),xtype:"textfield",name:"lot_number"},{fieldLabel:_("exp_date"),xtype:"datefield",format:"Y-m-d",name:"exp_date"},{xtype:"cvxmanufacturersforcvxcombo",fieldLabel:_("manufacturer"),margin:"0 0 8 0",name:"manufacturer"}]},{xtype:"datefield",width:250,margin:"0 0 0 5",fieldLabel:_("education"),name:"education_date"},{xtype:"datefield",width:250,margin:"0 0 0 5",fieldLabel:_("doc_published"),name:"education_doc_published"}]},{xtype:"checkboxfield",boxLabel:_("entered_in_error"),name:"is_error"}]}]}),tbar:["->",{text:_("add_new"),action:"encounterRecordAdd",itemId:"addImmunizationBtn",iconCls:"icoAdd"}],bbar:["-",{xtype:"button",text:_("submit_hl7_vxu"),disabled:!0,itemId:"submitVxuBtn"},"-","->",{text:_("review"),itemId:"reviewImmunizationsBtn",action:"encounterRecordAdd"}]},{xtype:"grid",title:_("immunization_list"),itemId:"cvxGrid",collapseMode:"mini",region:"east",collapsible:!0,collapsed:!0,width:300,split:!0,store:Ext.create("App.store.patient.CVXCodes"),columns:[{text:_("code"),dataIndex:"cvx_code",width:50},{text:_("immunization_name"),dataIndex:"name",flex:1}]}]}),Ext.define("App.view.patient.Medications",{extend:"Ext.panel.Panel",requires:["App.store.patient.Medications","App.store.administration.Medications","Ext.form.field.Trigger","App.ux.LiveRXNORMSearch","App.ux.combo.PrescriptionHowTo","App.ux.combo.PrescriptionTypes","App.ux.LiveSigsSearch","App.ux.LiveUserSearch","App.ux.form.fields.DateTime"],xtype:"patientmedicationspanel",title:_("medications"),layout:"border",border:!1,items:[{xtype:"grid",region:"center",action:"patientMedicationsListGrid",itemId:"patientMedicationsGrid",columnLines:!0,features:[{ftype:"grouping"}],store:Ext.create("App.store.patient.Medications",{autoSync:!1,startCollapsed:!0}),columns:[{xtype:"actioncolumn",width:25,groupable:!1,items:[{icon:"resources/images/icons/blueInfo.png",tooltip:"Get Info",handler:function(a,b,c,d,e,f){App.app.getController("InfoButton").doGetInfo(f.data.RXCUI,"RXCUI",f.data.STR)}}]},{header:_("medication"),flex:1,groupable:!0,hidden:!1,minWidth:200,dataIndex:"STR",editor:{xtype:"rxnormlivetsearch",itemId:"patientMedicationLiveSearch",displayField:"STR",valueField:"STR",action:"medication",allowBlank:!1},renderer:function(a,b,c){var d="";return""!=c.data.RXCUI&&(d+=" <b>RxNorm:</b> "+c.data.RXCUI),""!=c.data.NDC&&(d+=" <b>NDC:</b> "+c.data.NDC),d=""!=d?" ("+d+" )":"",a+d}},{text:_("directions"),dataIndex:"directions",groupable:!1,flex:1,editor:{xtype:"textfield"}},{text:_("dispense"),dataIndex:"dispense",groupable:!1,"with":200,editor:{xtype:"textfield",maxLength:40}},{text:_("administered"),groupable:!1,columns:[{text:_("user"),dataIndex:"administered_by",width:200,editor:{xtype:"userlivetsearch",acl:"administer_medications",valueField:"fullname",itemId:"PatientMedicationUserLiveSearch"}},{xtype:"datecolumn",text:_("date"),dataIndex:"administered_date",width:200,format:g("date_time_display_format"),editor:{xtype:"mitos.datetime"}}]},{xtype:"datecolumn",groupable:!1,format:"Y-m-d",header:_("begin_date"),width:90,dataIndex:"begin_date",sortable:!1,hideable:!1},{xtype:"datecolumn",groupable:!1,format:"Y-m-d",header:_("end_date"),width:90,dataIndex:"end_date",sortable:!1,hideable:!1,editor:{xtype:"datefield",format:"Y-m-d"}},{header:_("active?"),groupable:!1,width:60,dataIndex:"active",renderer:function(a){return app.boolRenderer(a)}}],plugins:Ext.create("Ext.grid.plugin.RowEditing",{autoCancel:!1,errorSummary:!1,clicksToEdit:2}),bbar:["-",{text:_("reconciled"),itemId:"PatientMedicationReconciledBtn",enableToggle:!0,pressed:!0},"-","->",{text:_("review"),itemId:"reviewMedications"}]}],tbar:["->",{text:_("add_new"),itemId:"addPatientMedicationBtn",iconCls:"icoAdd"}]}),Ext.define("App.view.patient.AdvanceDirectives",{extend:"Ext.grid.Panel",requires:[],xtype:"patientadvancedirectivepanel",title:_("advance_directives"),columnLines:!0,store:Ext.create("App.store.patient.AdvanceDirectives",{remoteFilter:!0,autoSync:!1}),columns:[{text:_("directive"),flex:1,dataIndex:"code_text",editor:{xtype:"gaiaehr.combo",list:129,loadStore:!0}},{text:_("status"),dataIndex:"status_code_text",flex:1,editor:{xtype:"gaiaehr.combo",list:128,loadStore:!0}},{text:_("notes"),flex:2,dataIndex:"notes",editor:{xtype:"textfield"}},{xtype:"datecolumn",text:_("start_date"),dataIndex:"start_date",editor:{xtype:"datefield"}},{xtype:"datecolumn",text:_("end_date"),dataIndex:"end_date",editor:{xtype:"datefield"}},{xtype:"datecolumn",text:_("verified_date"),dataIndex:"verified_date",editor:{xtype:"datefield"}}],plugins:[{ptype:"rowediting",errorSummary:!1}],tbar:["->",{text:_("add_new"),itemId:"AdvanceDirectiveAddBtn",action:"encounterRecordAdd",iconCls:"icoAdd"}],bbar:["->",{text:_("review"),itemId:"AdvanceDirectiveReviewBtn",action:"encounterRecordAdd"}]}),Ext.define("App.view.patient.LabOrders",{extend:"Ext.grid.Panel",requires:["Ext.grid.plugin.RowEditing","Ext.grid.feature.Grouping","Ext.selection.CheckboxModel","App.ux.LiveLabsSearch","App.ux.combo.Combo"],xtype:"patientlaborderspanel",title:_("lab_orders"),itemId:"LabOrders",columnLines:!0,tabConfig:{cls:"order-tab"},store:Ext.create("App.store.patient.PatientsOrders",{storeId:"LabOrderStore",groupField:"date_ordered",remoteFilter:!0,pageSize:200,sorters:[{property:"date_ordered",direction:"DESC"}],proxy:{type:"direct",api:{read:"Orders.getPatientLabOrders",create:"Orders.addPatientOrder",update:"Orders.updatePatientOrder",destroy:"Orders.deletePatientOrder"},remoteGroup:!1}}),selModel:Ext.create("Ext.selection.CheckboxModel",{showHeaderCheckbox:!1}),features:[{ftype:"grouping"}],plugins:[{ptype:"rowediting",clicksToEdit:2}],columns:[{header:_("void"),groupable:!1,width:60,align:"center",dataIndex:"void",tooltip:_("void"),editor:{xtype:"checkbox"},renderer:function(a){return app.voidRenderer(a)
}},{header:_("order#"),width:60,dataIndex:"id",renderer:function(a,b,c){return c.data.void?'<span style="text-decoration: line-through;">'+a+"</span>":"<span>"+a+"</span>"}},{header:_("status"),width:75,dataIndex:"status",editor:{xtype:"gaiaehr.combo",list:40},renderer:function(a,b,c){var d=app.getController("patient.LabOrders").labOrdersGridStatusColumnRenderer(a);return c.data.void?'<span style="text-decoration: line-through;">'+d+"</span>":d}},{xtype:"datecolumn",header:_("date_ordered"),width:100,dataIndex:"date_ordered",format:"Y-m-d",editor:{xtype:"datefield"},renderer:function(a,b,c){return c.data.void?'<span style="text-decoration: line-through;">'+a+"</span>":"<span>"+a+"</span>"}},{header:_("code"),width:100,dataIndex:"code",renderer:function(a,b,c){return c.data.void?'<span style="text-decoration: line-through;">'+a+"</span>":"<span>"+a+"</span>"}},{header:_("description"),flex:1,dataIndex:"description",editor:{xtype:"labslivetsearch",itemId:"rxLabOrderLabsLiveSearch"},renderer:function(a,b,c){return c.data.void?'<span style="text-decoration: line-through;">'+a+"</span>":"<span>"+a+"</span>"}},{header:_("notes"),flex:1,dataIndex:"note",editor:{xtype:"textfield"},renderer:function(a,b,c){return c.data.void?'<span style="text-decoration: line-through;">'+a+"</span>":"<span>"+a+"</span>"}},{header:_("priority"),width:100,dataIndex:"priority",editor:{xtype:"gaiaehr.combo",list:98},renderer:function(a,b,c){return c.data.void?'<span style="text-decoration: line-through;">'+a+"</span>":"<span>"+a+"</span>"}},{xtype:"datecolumn",header:_("date_collected"),width:100,dataIndex:"date_collected",format:"Y-m-d",editor:{xtype:"datefield"},renderer:function(a,b,c){return c.data.void?'<span style="text-decoration: line-through;">'+a+"</span>":"<span>"+a+"</span>"}}],tbar:[{text:_("eLab"),iconCls:"icoSend",itemId:"electronicLabOrderBtn"},"-","->","-",{text:_("new_order"),iconCls:"icoAdd",action:"encounterRecordAdd",itemId:"newLabOrderBtn"},"-",{text:_("print"),iconCls:"icoPrint",disabled:!0,margin:"0 5 0 0",itemId:"printLabOrderBtn"}]}),Ext.define("App.view.patient.SupperBill",{extend:"Ext.grid.Panel",requires:["Ext.grid.plugin.RowEditing","App.ux.LiveCPTSearch","App.ux.combo.EncounterICDS"],xtype:"superbillpanel",store:Ext.create("App.store.patient.EncounterServices"),columnLines:!0,plugins:[{ptype:"rowediting",errorSummary:!1}],columns:[{xtype:"actioncolumn",width:20,menuDisabled:!0,items:[{icon:"resources/images/icons/delete.png",tooltip:_("remove"),handler:function(a,b,c,d,e,f){return App.app.getController("patient.encounter.SuperBill").onRemoveService(f)}}]},{header:_("units"),dataIndex:"units",width:40,menuDisabled:!0,editor:{xtype:"numberfield",minValue:1,allowBlank:!1}},{header:_("code"),dataIndex:"code",menuDisabled:!0,width:75},{text:_("service"),dataIndex:"code_text",flex:1,menuDisabled:!0,editor:{xtype:"livecptsearch",itemId:"SuperCptSearchCmb",valueField:"code_text_medium",allowBlank:!1}},{text:_("financial"),dataIndex:"financial_class",flex:1,menuDisabled:!0,editor:{xtype:"gaiaehr.listcombo",displayField:"option_name",valueField:"option_value",loadStore:!0,queryMode:"local",list:135}},{header:_("modifiers"),dataIndex:"modifiers",width:100,menuDisabled:!0,editor:{xtype:"textfield"}},{header:_("diagnosis"),dataIndex:"dx_pointers",menuDisabled:!0,width:250,editor:{xtype:"encountericdscombo",itemId:"SuperBillEncounterDxCombo",allowBlank:!1}}],dockedItems:[{xtype:"toolbar",dock:"top",items:["->",{text:_("service"),iconCls:"icoAdd",itemId:"SuperBillServiceAddBtn"}]}]}),Ext.define("App.ux.combo.EncounterSupervisors",{extend:"Ext.form.ComboBox",alias:"widget.encountersupervisorscombo",initComponent:function(){var a=this;Ext.define("EncounterSupervisorsComboModel",{extend:"Ext.data.Model",fields:[{name:"option_name",type:"string"},{name:"option_value",type:"int"}],proxy:{type:"direct",api:{read:"CombosData.getEncounterSupervisors"}}}),a.store=Ext.create("Ext.data.Store",{model:"EncounterSupervisorsComboModel",autoLoad:!1}),Ext.apply(this,{editable:!1,queryMode:"local",displayField:"option_name",valueField:"option_value",emptyText:_("select"),store:a.store}),a.callParent(arguments)}}),Ext.define("App.view.dashboard.panel.Portlet",{extend:"Ext.panel.Panel",alias:"widget.portlet",layout:"fit",anchor:"100%",frame:!0,closable:!0,collapsible:!0,animCollapse:!0,draggable:{moveOnDrag:!1},cls:"x-portlet",doClose:function(){this.closing||(this.closing=!0,this.el.animate({opacity:0,callback:function(){this.fireEvent("close",this),this[this.closeAction]()},scope:this}))}}),Ext.define("App.ux.grid.AreasViewDropZone",{extend:"Ext.grid.ViewDropZone",handleNodeDrop:function(a,b,c){var d,e,f,g,h=this.view,i=h.getStore();if(!a.patient)if(a.copy)for(e=a.records,a.records=[],f=0,g=e.length;g>f;f++)a.records.push(e[f].copy());else a.view.store.remove(a.records,a.view===h);b&&c?(d=i.indexOf(b),"before"!==c&&d++,i.insert(d,a.records)):i.add(a.records)},notifyEnter:function(a,b,c){Ext.get(c.ddel.id).update(_("drop_patient_to_new_area")),this.callParent(arguments)},notifyOut:function(a,b,c){Ext.get(c.ddel.id).update(_("drag_patient_to_new_area")),this.callParent(arguments)}}),Ext.define("App.ux.grid.AreasDragDrop",{extend:"Ext.grid.plugin.DragDrop",alias:"plugin.areasgridviewdragdrop",onViewRender:function(a){var b,c=this;c.enableDrag&&(c.containerScroll&&(b=a.getEl()),c.dragZone=new Ext.view.DragZone({view:a,ddGroup:c.dragGroup||c.ddGroup,dragText:c.dragText,containerScroll:c.containerScroll,scrollEl:b})),c.enableDrop&&(c.dropZone=new App.ux.grid.AreasViewDropZone({view:a,ddGroup:c.dropGroup||c.ddGroup}))}}),Ext.define("App.view.patient.encounter.CarePlanGoals",{extend:"Ext.grid.Panel",requires:["App.store.patient.CarePlanGoals"],xtype:"careplangoalsgrid",store:Ext.create("App.store.patient.CarePlanGoals"),frame:!0,columns:[{text:_("goal"),dataIndex:"goal",width:200},{text:_("instructions"),dataIndex:"instructions",flex:1}],tbar:[_("care_plan_goals"),"->",{text:_("new_goal"),iconCls:"icoAdd",itemId:"NewCarePlanGoalBtn"}]}),Ext.define("App.ux.LiveSnomedProcedureSearch",{extend:"Ext.form.ComboBox",alias:"widget.snomedliveproceduresearch",hideLabel:!0,displayField:"FullySpecifiedName",valueField:"ConceptId",emptyText:_("search")+"...",typeAhead:!1,hideTrigger:!0,minChars:3,initComponent:function(){var a=this;Ext.define("liveSnomedProcedureSearchModel",{extend:"Ext.data.Model",fields:[{name:"ConceptId",type:"string"},{name:"FullySpecifiedName",type:"string"},{name:"CodeType",type:"string",defaultValue:"SNOMED-CT"},{name:"Occurrence",type:"int"}],idProperty:"ConceptId",proxy:{type:"direct",api:{read:"SnomedCodes.liveProcedureCodeSearch",update:"SnomedCodes.updateLiveProcedureCodeSearch"},reader:{totalProperty:"totals",root:"data"}}}),a.store=Ext.create("Ext.data.Store",{model:"liveSnomedProcedureSearchModel",pageSize:25,autoLoad:!1}),Ext.apply(this,{store:a.store,listConfig:{loadingText:_("searching")+"...",getInnerTpl:function(){return'<div class="search-item"><h3>{FullySpecifiedName}<span style="font-weight: normal"> ({ConceptId}) </span></h3></div>'}},pageSize:25}),a.callParent(),a.on("select",function(a,b){b[0].set({Occurrence:b[0].data.Occurrence+1}),b[0].save()})}}),Ext.define("App.view.patient.encounter.AdministeredMedications",{extend:"Ext.grid.Panel",requires:["Ext.grid.plugin.RowEditing","App.ux.LiveRXNORMSearch","App.ux.LiveSigsSearch","App.ux.LiveUserSearch","App.ux.form.fields.DateTime"],xtype:"administeredmedications",itemId:"AdministeredMedicationsGrid",frame:!0,store:Ext.create("App.store.patient.Medications",{autoSync:!1}),columns:[{header:_("medication"),flex:1,minWidth:150,dataIndex:"STR",editor:{xtype:"rxnormlivetsearch",itemId:"AdministeredMedicationsLiveSearch",displayField:"STR",valueField:"STR",action:"medication",allowBlank:!1},renderer:function(a,b,c){var d="";return""!=c.data.RXCUI&&(d+=" <b>RxNorm:</b> "+c.data.RXCUI),""!=c.data.NDC&&(d+=" <b>NDC:</b> "+c.data.NDC),d=""!=d?" ("+d+" )":"",a+d}},{text:_("directions"),dataIndex:"directions",flex:1,editor:{xtype:"textfield"}},{text:_("administered_by"),dataIndex:"administered_by",width:150,editor:{xtype:"userlivetsearch",acl:"administer_medications",valueField:"fullname",forceSelection:!1,itemId:"AdministeredMedicationsUserLiveSearch"}},{xtype:"datecolumn",text:_("date"),dataIndex:"administered_date",width:120,format:g("date_time_display_format"),editor:{xtype:"mitos.datetime"}}],plugins:Ext.create("Ext.grid.plugin.RowEditing",{autoCancel:!1,errorSummary:!1,clicksToEdit:2}),tbar:[_("administered_medications"),"->",{text:_("medication"),itemId:"AdministeredMedicationsAddBtn",action:"encounterRecordAdd",iconCls:"icoAdd"}]}),Ext.define("App.view.patient.DecisionSupportWarningPanel",{extend:"Ext.panel.Panel",xtype:"decisionsupportwarningpanel",cls:"decisionSupportWarning",header:!1,collapsible:!0,collapsed:!0,hidden:!0,margin:0,dockedItems:[{xtype:"toolbar",dock:"right",ui:"plain",items:[{xtype:"button",icon:"resources/images/icons/close_exit.png",itemId:"DecisionSupportWarningPanelCloseBtn"}]}]}),Ext.define("App.view.patient.Documents",{extend:"Ext.panel.Panel",requires:["App.ux.grid.LiveSearchGridPanel","App.ux.combo.Templates","Ext.grid.plugin.RowEditing","App.store.patient.PatientDocuments","App.ux.ManagedIframe","Ext.grid.feature.Grouping","Ext.form.ComboBox"],xtype:"patientdocumentspanel",title:_("documents"),layout:"border",initComponent:function(){var a=this,b=Ext.create("App.store.patient.PatientDocuments",{autoLoad:!1,remoteFilter:!0,remoteSort:!1,autoSync:!1,pageSize:500,groupField:"docTypeCode"}),c=App.app.getController("patient.Documents");a.items=[{xtype:"gridlivesearch",region:"west",split:!0,flex:1,columnLines:!0,selType:"checkboxmodel",features:[{ftype:"grouping",hideGroupedHeader:!0,startCollapsed:a.startCollapsed||!1,groupHeaderTpl:Ext.create("Ext.XTemplate","{children:this.getGroupName}",{getGroupName:function(a){return c.getGroupName(a[0].store,a[0])}})}],itemId:"patientDocumentGrid",store:b,columns:[{xtype:"actioncolumn",width:23,icon:"resources/images/icons/icoLessImportant.png",tooltip:_("validate_file_integrity_hash"),handler:function(a,b){c.onDocumentHashCheckBtnClick(a,b)},getClass:function(){return"x-grid-icon-padding"}},{header:_("category"),dataIndex:"docType",itemId:"docType",renderer:function(a,b,c){return c.get("entered_in_error")&&(b.tdCls+=" entered-in-error ",b.tdAttr='data-qtip="'+_("error_note")+": "+c.get("error_note")+'"'),a}},{xtype:"datecolumn",header:_("date"),dataIndex:"groupDate",format:g("date_display_format"),itemId:"groupDate",renderer:function(a,b,c){var d=null!=a?Ext.Date.format(a,g("date_display_format")):"-";return c.get("entered_in_error")&&(b.tdCls+=" entered-in-error ",b.tdAttr='data-qtip="'+_("error_note")+": "+c.get("error_note")+'"'),d}},{header:_("title"),dataIndex:"title",flex:1,editor:{xtype:"textfield",action:"title"},renderer:function(a,b,c){return c.get("entered_in_error")&&(b.tdCls+=" entered-in-error ",b.tdAttr='data-qtip="'+_("error_note")+": "+c.get("error_note")+'"'),a}},{header:_("encrypted"),dataIndex:"encrypted",width:70,renderer:function(a,b,c){return c.get("entered_in_error")&&(b.tdCls+=" entered-in-error ",b.tdAttr='data-qtip="'+_("error_note")+": "+c.get("error_note")+'"'),app.boolRenderer(a)}}],plugins:Ext.create("Ext.grid.plugin.RowEditing",{autoCancel:!0,errorSummary:!1,clicksToEdit:2}),tbar:[_("group_by")+":",{xtype:"button",text:_("category"),enableToggle:!0,action:"docTypeCode",pressed:!0,disabled:!0,toggleGroup:"documentgridgroup"},{xtype:"button",text:_("date"),enableToggle:!0,action:"groupDate",toggleGroup:"documentgridgroup"},"->","-",{text:_("add_document"),itemId:"documentUploadBtn"}],bbar:Ext.create("Ext.PagingToolbar",{pageSize:10,store:b,displayInfo:!0,plugins:Ext.create("Ext.ux.SlidingPager",{})})},{xtype:"panel",region:"center",flex:2,layout:{type:"vbox",align:"stretch"},frame:!0,itemId:"patientDocumentViewerPanel",style:"background-color:#e7e7e7",items:[{xtype:"miframe",style:"background-color:#e7e7e7",autoMask:!1,flex:1,itemId:"patientDocumentViewerFrame"}]}],a.callParent(arguments)}}),Ext.define("App.view.patient.CCD",{extend:"Ext.panel.Panel",requires:["Ext.ux.IFrame","App.ux.ManagedIframe"],xtype:"patientccdpanel",title:_("ccd"),columnLines:!0,itemId:"CcdPanel",layout:"fit",items:[{xtype:"miframe",style:"background-color:white",autoMask:!0,itemId:"patientDocumentViewerFrame"}],tbar:[{xtype:"patientEncounterCombo",itemId:"PatientCcdPanelEncounterCmb",margin:"0 5 5 5",width:300,fieldLabel:_("filter_encounter"),hideLabel:!1,labelAlign:"top"},"-",{xtype:"checkboxgroup",fieldLabel:_("exclude"),columns:5,vertical:!0,labelWidth:60,itemId:"PatientCcdPanelExcludeCheckBoxGroup",flex:1,items:[{boxLabel:_("procedures"),name:"exclude",inputValue:"procedures"},{boxLabel:_("vitals"),name:"exclude",inputValue:"vitals"},{boxLabel:_("immunizations"),name:"exclude",inputValue:"immunizations"},{boxLabel:_("medications"),name:"exclude",inputValue:"medications"},{boxLabel:_("meds_administered"),name:"exclude",inputValue:"administered"},{boxLabel:_("plan_of_care"),name:"exclude",inputValue:"planofcare"},{boxLabel:_("problems"),name:"exclude",inputValue:"problems"},{boxLabel:_("allergies"),name:"exclude",inputValue:"allergies"},{boxLabel:_("social"),name:"exclude",inputValue:"social"},{boxLabel:_("results"),name:"exclude",inputValue:"results"}]},"-",{xtype:"button",text:_("refresh"),margin:"0 0 5 0",itemId:"viewCcdBtn",icon:"resources/images/icons/refresh.png"},"-",{text:_("download"),margin:"0 0 5 0",itemId:"exportCcdBtn",icon:"resources/images/icons/download.png"},"-",{text:_("archive"),margin:"0 0 5 0",itemId:"archiveCcdBtn",icon:"resources/images/icons/archive_16.png"},"-",{text:"Print",iconCls:"icon-print",itemId:"printCcdBtn"}]}),Ext.define("App.view.administration.CPT",{extend:"Ext.grid.Panel",requires:["Ext.grid.plugin.RowEditing","App.store.administration.CPT"],xtype:"cptadmingrid",title:_("cpt4"),columns:[{width:60,header:_("code"),dataIndex:"code"},{header:_("short_name"),dataIndex:"code_text_short",width:100,flex:1,editor:{xtype:"textfield"}},{header:_("long_name"),dataIndex:"code_text",flex:2,editor:{xtype:"textfield"}},{header:_("radiology"),dataIndex:"isRadiology",editor:{xtype:"checkbox"},renderer:function(a){return this.boolRenderer(a)}},{width:60,header:_("active"),dataIndex:"active",editor:{xtype:"checkbox"},renderer:function(a){return this.boolRenderer(a)}}],plugins:[{ptype:"rowediting",errorSummary:!1,clicksToEdit:1}],initComponent:function(){var a=this;a.store=Ext.create("App.store.administration.CPT",{remoteSort:!0}),a.tbar=Ext.create("Ext.PagingToolbar",{store:a.store,displayInfo:!0,emptyMsg:_("no_office_notes_to_display"),plugins:Ext.create("Ext.ux.SlidingPager"),items:["-",{xtype:"textfield",emptyText:_("search"),width:200,enableKeyEvents:!0,itemId:"adminCpt4CodeSearchField"},"-",{xtype:"button",text:_("only_active"),enableToggle:!0,itemId:"adminCpt4CodeOnlyActiveBtn"},"-"]}),a.callParent()}}),Ext.define("App.ux.grid.Button",{extend:"Ext.grid.column.Column",alias:["widget.gridbutton"],header:"&#160;",sortable:!1,context:{},applicationProperties:{iconStore:""},constructor:function(a){var b,c,d,e=this;b=Ext.apply({},a),c=b.items||[e],e.callParent(arguments),e.items=c,e.context=b.scope,e.renderer=function(a,b,f){return Ext.Array.each(c,function(b){var c;d=b,c=Ext.id(),Ext.Function.defer(e.addButton,100,e,[c,f,d,e.context]),a?a+='<div id="'+c+'">&#160;</div>':a='<div id="'+c+'">&#160;</div>'}),a}},noHandler:function(){Ext.Msg.alert("Oops","No Handler set up")},addButton:function(a,b,c,d){var e,f,g,h,i,j=this,k=Ext.get(a);k&&(c.menu?(f=[],Ext.Array.each(c.menu,function(a){g=a.handler?Ext.bind(a.handler,j,[b,d]):j.noHandler,i=a.icon?j.applicationProperties.iconStore+a.icon:void 0;var c={text:a.text,handler:g,icon:i};f.push(c)}),h={text:c.text,icon:c.icon?j.applicationProperties.iconStore+c.icon:"",menu:f,renderTo:k.parent()}):(g=c.handler?Ext.bind(c.handler,j,[b,d]):j.noHandler,h={text:c.text,tooltip:c.tooltip,icon:c.icon?j.applicationProperties.iconStore+c.icon:"",handler:g,cls:c.cls||null,listeners:c.listeners||null,record:b,width:c.width||50,margin:c.margin||0,renderTo:k.parent()}),e=Ext.create("Ext.button.Button",h),Ext.get(a).remove())},destroy:function(){delete this.items,delete this.renderer,this.callParent(arguments)},cascade:function(a,b){a.call(b||this,this)},getRefItems:function(){return[]}}),Ext.define("App.ux.combo.XCombo",{extend:"Ext.form.field.ComboBox",xtype:"xcombo",trigger1Class:"x-form-select-trigger",trigger2Class:"x-form-add-trigger",trigger3Class:"x-form-update-trigger",editable:!1,addTooltip:"Add Item",saveText:"Save",cancelText:"Cancel",maskText:"Saving Data",windowConfig:{title:"New Record",modal:!0},formConfig:{width:400,height:240,border:!1,html:'Form placeholder, please add a formConfig property<br>Exmaple:<br><pre>{<br>   ptype: "comboadd",<br>   windowConfig: {<br>       title: "New Record"<br>       modal: true<br>   }<br>   formConfig: {<br>       width: 600,<br>       height: 400,<br>       border: false,<br>       items:[ {...},{...} ]<br>   }<br>}<br></pre>'},initComponent:function(){var a=this;a.addEvents("cancel","beforesync","sync","failure"),a.on("select",a.setUpdateTrigger,a),a.callParent(arguments)},onRender:function(){var a=this,b=a.getId();a.callParent(arguments),a.triggerWidth=51,a.triggerConfig={tag:"td",valign:"top",cls:"x-trigger-cell",style:"width:34px",cn:[{tag:"img",src:Ext.BLANK_IMAGE_URL,id:"trigger1"+b,name:"trigger1"+b,style:"float:left",cls:"x-form-trigger "+this.trigger1Class,role:"button"},{tag:"img",src:Ext.BLANK_IMAGE_URL,id:"trigger2"+b,name:"trigger2"+b,style:"float:left",cls:"x-form-trigger "+this.trigger2Class,role:"button"},{tag:"img",src:Ext.BLANK_IMAGE_URL,id:"trigger3"+b,name:"trigger3"+b,style:"float:left;display:none",cls:"x-form-trigger "+this.trigger3Class,role:"button"}]},a.triggerCell.replaceWith(a.triggerConfig),a.trigger1=Ext.get("trigger1"+b),a.trigger2=Ext.get("trigger2"+b),a.trigger3=Ext.get("trigger3"+b),a.trigger1.on("mouseup",a.triggerClick,a),a.trigger2.on("mouseup",a.triggerClick,a),a.trigger3.on("mouseup",a.triggerClick,a),a.trigger1.addClsOnOver("x-form-trigger-over"),a.trigger2.addClsOnOver("x-form-trigger-over"),a.trigger3.addClsOnOver("x-form-trigger-over")},setUpdateTrigger:function(){this.trigger3.isVisible()||(this.setWidth(this.getWidth()+17),this.triggerCell.setWidth(51),this.trigger3.show())},triggerClick:function(a){var b=this.getId();a.target.name=="trigger1"+b?this.onTriggerClick():a.target.name=="trigger2"+b?this.onTriggerAddClick():a.target.name=="trigger3"+b&&this.onTriggerUpdateClick()},onTriggerAddClick:function(){var a=this;a.reset(),a.getWindow().show(),a.uWindow.down("form").getForm().loadRecord(a.getNewRecord())},onTriggerUpdateClick:function(){var a=this;a.getWindow().show(),a.uWindow.down("form").getForm().loadRecord(a.getSelectedRecord())},getSelectedRecord:function(){return this.findRecordByValue(this.getValue())},getNewRecord:function(){return Ext.create(this.getStore().model)},getWindow:function(){var a=this;return a.uWindow=Ext.widget("window",{items:[Ext.widget("form",a.formConfig)],buttons:[{text:a.cancelText,scope:a,handler:a.doCancelRecord},{text:a.saveText,scope:a,handler:a.doSaveRecord}]}),Ext.apply(a.uWindow,a.windowConfig)},doSaveRecord:function(){var a=this,b=a.uWindow.down("form"),c=b.getForm(),d=c.getRecord(),e=c.getValues(),f=a.store.indexOf(d);d.set(e),-1==f&&a.store.add(d),a.store.getNewRecords().length||a.store.getUpdatedRecords().length?(b.el.mask(a.maskText),a.fireEvent("beforesync",a.store,d),a.store.sync({success:function(b,c){a.select(d),a.fireEvent("sync",a.store,d,b,c)},failure:function(){a.fireEvent("failure",a.store,d,batch,options)},callback:function(){b.el.unmask(),c.reset(),a.uWindow.close()}})):(c.reset(),a.uWindow.close())},doCancelRecord:function(){var a=this,b=a.uWindow.down("form").getForm();a.fireEvent("cancel",a,a.form,a.store),b.reset(),a.uWindow.close()}}),Ext.define("App.ux.form.fields.plugin.PasswordStrength",{extend:"Ext.AbstractPlugin",alias:"plugin.passwordstrength",colors:["ffcccc","ffcc99","ffff99","99ccff","99ff99"],init:function(a){var b=this;a.on("change",b.onFieldChange,b)},onFieldChange:function(a,b){if(""===b)return a.inputEl.setStyle({"background-color":null,"background-image":null}),void(a.score=0);var c=this,d=c.scorePassword(b);a.score=d,c.processValue(a,d)},processValue:function(a,b){var c,d=this,e=d.colors;c=16>b?e[0]:b>15&&25>b?e[1]:b>24&&35>b?e[2]:b>34&&45>b?e[3]:e[4],a.inputEl.setStyle({"background-color":"#"+c,"background-image":"none"})},scorePassword:function(a){var b=0;return a.length<5?b+=3:a.length>4&&a.length<8?b+=6:a.length>7&&a.length<13?b+=12:a.length>12&&(b+=18),a.match(/[a-z]/)&&(b+=1),a.match(/[A-Z]/)&&(b+=5),a.match(/\d+/)&&(b+=5),a.match(/(.*[0-9].*[0-9].*[0-9])/)&&(b+=5),a.match(/.[!,@,#,$,%,^,&,*,?,_,~]/)&&(b+=7),a.match(/(.*[!,@,#,$,%,^,&,*,?,_,~].*[!,@,#,$,%,^,&,*,?,_,~])/)&&(b+=7),a.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/)&&(b+=3),a.match(/([a-zA-Z])/)&&a.match(/([0-9])/)&&(b+=3),a.match(/([a-zA-Z0-9].*[!,@,#,$,%,^,&,*,?,_,~])|([!,@,#,$,%,^,&,*,?,_,~].*[a-zA-Z0-9])/)&&(b+=3),b}}),Ext.define("App.ux.combo.ActiveSpecialties",{extend:"Ext.form.ComboBox",xtype:"activespecialtiescombo",displayField:"text_details",valueField:"id",editable:!1,emptyText:_("select"),queryMode:"local",store:Ext.create("App.store.administration.Specialties",{filters:[{property:"active",value:!0}],pageSize:500,autoLoad:!0})}),Ext.define("App.ux.AddTabButton",{alias:"plugin.AddTabButton",extend:"Ext.AbstractPlugin",toolTip:"Add Tab",iconCls:null,btnText:"+",forceText:!1,panelConfig:{xtype:"panel",title:"New Tab",closable:!0,hidden:!1},constructor:function(a){this.panelConfig=Ext.apply(this.panelConfig,a.tabConfig||{}),this.callParent(arguments)},init:function(a){var b=this;b.tabPanel=a,a instanceof Ext.TabPanel&&(b.btn=b.tabPanel.getTabBar().add({xtype:"tab",minWidth:25,text:b.iconCls&&!b.forceText?"":b.btnText,iconCls:b.iconCls,tooltip:b.toolTip,handler:b.onAddTabClick,closable:!1,acl:b.acl,scope:b}),b.btn.on("render",function(){if(b.iconCls&&!b.forceText){var a;"top"==b.tabPanel.tabPosition?a="margin: 0 0 3px 0; padding: 0":"bottom"==b.tabPanel.tabPosition&&(a="margin: 3px 0 0 0; padding: 0"),b.btn.btnWrap.applyStyles(a)}}))},onAddTabClick:function(){var a=this.tabPanel.add(this.panelConfig);this.tabPanel.fireEvent("newtabclick",a,this.tabPanel),this.tabPanel.setActiveTab(a)},setDisabled:function(a){this.btn.setDisabled(a)},setVisible:function(a){this.btn.setVisible(a)}}),Ext.define("App.model.administration.AclGroupPerm",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"title",type:"string"},{name:"group_id",type:"int"},{name:"category",type:"string"}],proxy:{type:"direct",api:{read:"ACL.getGroupPerms",create:"ACL.updateGroupPerms",update:"ACL.updateGroupPerms"},reader:{type:"json",root:"data"}}}),Ext.define("App.view.patient.windows.ArchiveDocument",{extend:"Ext.window.Window",xtype:"patientarchivedocumentwindow",draggable:!1,modal:!0,autoShow:!0,title:_("archive_document"),items:[{xtype:"form",bodyPadding:10,width:400,defaults:{xtype:"textfield",anchor:"100%",labelWidth:70},items:[{name:"id",hidden:!0},{fieldLabel:_("title"),name:"title"},{xtype:"gaiaehr.combo",fieldLabel:_("type"),list:102,name:"docType",allowBlank:!1},{xtype:"checkbox",name:"encrypted",fieldLabel:_("encrypted")},{xtype:"textareafield",name:"note",fieldLabel:_("notes")}]}],buttons:[{text:_("cancel"),handler:function(a){a.up("window").close()}},{text:_("archive"),itemId:"archiveBtn"}]}),Ext.define("App.view.scanner.Window",{extend:"Ext.window.Window",xtype:"scannerwindow",itemId:"ScannerWindow",autoScroll:!0,width:1e3,minHeight:500,maxHeight:700,closeAction:"hide",title:_("scanner"),layout:{type:"hbox"},items:[{xtype:"image",flex:1,id:"ScannerImage",style:"background-color:white",itemId:"ScannerImage"}],buttons:[{text:_("edit"),enableToggle:!0,itemId:"ScannerImageEditBtn"},"-",{xtype:"combobox",itemId:"ScannerCombo",editable:!1,queryMode:"local",displayField:"Name",valueField:"Name",flex:1,store:Ext.create("Ext.data.Store",{fields:[{name:"Name",type:"string"},{name:"Version",type:"string"},{name:"Checked",type:"string"}]})},{text:_("scan"),itemId:"ScannerScanBtn"},"-",{text:_("ok"),itemId:"ScannerOkBtn"}]}),Ext.define("App.view.notifications.Grid",{extend:"Ext.grid.Panel",xtype:"notificationsgrid",width:400,header:!1,hideHeaders:!0,columns:[{text:_("description"),dataIndex:"description",flex:1}]}),Ext.define("App.view.patient.windows.UploadDocument",{extend:"Ext.window.Window",xtype:"patientuploaddocumentwindow",draggable:!1,modal:!0,autoShow:!0,title:_("new_document"),items:[{xtype:"form",bodyPadding:10,width:400,defaults:{xtype:"textfield",anchor:"100%",labelWidth:70},items:[{fieldLabel:_("title"),name:"title"},{xtype:"gaiaehr.combo",fieldLabel:_("type"),list:102,name:"docType",allowBlank:!1},{xtype:"container",layout:"hbox",items:[{xtype:"fileuploadfield",labelWidth:70,name:"document",buttonText:_("select"),fieldLabel:_("file"),allowBlank:!1,flex:1,itemId:"fileUploadField",margin:"0 5 0 0"},{xtype:"button",text:_("scan"),itemId:"scanBtn",hidden:!0}]},{xtype:"checkbox",name:"encrypted",fieldLabel:_("encrypted")},{xtype:"textareafield",name:"note",fieldLabel:_("notes")}]}],buttons:[{text:_("cancel"),handler:function(a){a.up("window").close()}},{text:_("upload"),itemId:"uploadBtn"}]}),Ext.define("App.view.administration.HL7MessageViewer",{xtype:"hl7messageviewer",extend:"Ext.window.Window",layout:{type:"vbox",align:"stretch"},title:_("hl7_viewer"),width:800,height:450,bodyPadding:10,maximizable:!0,bodyStyle:"background-color:white",defaults:{xtype:"textareafield",labelAlign:"top"},items:[{fieldLabel:_("message"),action:"message",flex:1},{fieldLabel:_("acknowledge"),action:"acknowledge",flex:1}]}),Ext.define("App.view.patient.encounter.Snippets",{extend:"Ext.window.Window",xtype:"snippetswindow",requires:[],itemId:"SnippetWindow",title:_("snippet"),closable:!1,items:[{xtype:"form",itemId:"SnippetForm",fieldDefaults:{labelAlign:"top",width:600,margin:5},items:[{xtype:"textfield",fieldLabel:_("title"),name:"title"},{xtype:"textareafield",fieldLabel:_("snippet"),allowBlank:!1,itemId:"SnippetFormTextField",name:"text"}]}],buttons:[{text:_("cancel"),itemId:"SnippetCancelBtn"},{text:_("save"),itemId:"SnippetSaveBtn"}]}),Ext.define("App.ux.combo.ReferringProviders",{extend:"Ext.form.ComboBox",alias:"widget.referringproviderscombo",displayField:"fullname",valueField:"id",initComponent:function(){var a=this;Ext.define("ReferringProvidersModel",{extend:"Ext.data.Model",fields:[{name:"id",type:"int"},{name:"title",type:"string"},{name:"fname",type:"string"},{name:"mname",type:"string"},{name:"lname",type:"string"},{name:"fullname",type:"string",convert:function(a,b){return b.data.title+" "+b.data.lname+", "+b.data.fname+" "+b.data.mname}}],proxy:{type:"direct",api:{read:"ReferringProviders.getReferringProviders"},reader:{root:"data"}}}),a.store=Ext.create("Ext.data.Store",{model:"ReferringProvidersModel",autoLoad:!1}),Ext.apply(this,{emptyText:_("select"),store:a.store}),a.callParent(arguments)}}),Ext.define("App.ux.LiveSnomedProblemSearch",{extend:"Ext.form.ComboBox",alias:"widget.snomedliveproblemsearch",hideLabel:!0,displayField:"FullySpecifiedName",valueField:"ConceptId",emptyText:_("search")+"...",typeAhead:!1,hideTrigger:!0,minChars:3,initComponent:function(){var a=this;Ext.define("liveSnomedProblemSearchModel",{extend:"Ext.data.Model",fields:[{name:"ConceptId",type:"string"},{name:"FullySpecifiedName",type:"string"},{name:"CodeType",type:"string",defaultValue:"SNOMEDCT"},{name:"OCCURRENCE",type:"int"}],idProperty:"ConceptId",proxy:{type:"direct",api:{read:"SnomedCodes.liveProblemCodeSearch",update:"SnomedCodes.updateLiveProblemCodeSearch"},reader:{totalProperty:"totals",root:"data"}}}),a.store=Ext.create("Ext.data.Store",{model:"liveSnomedProblemSearchModel",pageSize:25,autoLoad:!1}),Ext.apply(this,{store:a.store,listConfig:{loadingText:_("searching")+"...",getInnerTpl:function(){return'<div class="search-item"><h3>{FullySpecifiedName}<span style="font-weight: normal"> ({ConceptId}) </span></h3></div>'}},pageSize:25}),a.callParent(),a.on("select",function(a,b){b[0].set({OCCURRENCE:b[0].data.OCCURRENCE+1}),b[0].save()})}}),Ext.define("App.view.patient.SmokingStatus",{extend:"Ext.grid.Panel",requires:["Ext.grid.plugin.RowEditing","App.store.patient.SmokeStatus","App.ux.combo.SmokingStatus"],xtype:"patientsmokingstatusgrid",itemId:"PatientSmokingStatusGrid",columnLines:!0,store:Ext.create("App.store.patient.SmokeStatus",{remoteFilter:!0}),plugins:[{ptype:"rowediting"}],columns:[{xtype:"datecolumn",text:_("date"),dataIndex:"create_date",format:"Y-m-d",width:120},{text:_("status"),dataIndex:"status",width:250,renderer:function(a,b,c){return a+" ("+c.data.status_code+")"}},{text:_("counseling_given"),dataIndex:"counseling",width:120,editor:{xtype:"checkbox"},renderer:function(a){return app.boolRenderer(a)}},{text:_("note"),dataIndex:"note",flex:1,editor:{xtype:"textfield"}},{xtype:"datecolumn",format:"Y-m-d",text:_("start_date"),dataIndex:"start_date",width:120,editor:{xtype:"datefield",format:g("date_display_format"),submitFormat:"Y-m-d"}}],tbar:[{xtype:"tbtext",text:_("smoking_status"),width:100},{xtype:"mitos.smokingstatuscombo",itemId:"socialsmokingstatuscombo",width:250}]}),Ext.define("App.ux.LiveSnomedSearch",{extend:"Ext.form.ComboBox",alias:"widget.snomedlivesearch",hideLabel:!0,displayField:"FullySpecifiedName",valueField:"ConceptId",initComponent:function(){var a=this;Ext.define("liveSnomedSearchModel",{extend:"Ext.data.Model",fields:[{name:"ConceptId",type:"string"},{name:"FullySpecifiedName",type:"string"},{name:"CodeType",type:"string",defaultValue:"SNOMED"}],proxy:{type:"direct",api:{read:"SnomedCodes.liveCodeSearch"},reader:{totalProperty:"totals",root:"data"}}}),a.store=Ext.create("Ext.data.Store",{model:"liveSnomedSearchModel",pageSize:25,autoLoad:!1}),Ext.apply(this,{store:a.store,emptyText:_("search")+"...",typeAhead:!1,hideTrigger:!0,minChars:3,listConfig:{loadingText:_("searching")+"...",getInnerTpl:function(){return'<div class="search-item"><h3>{FullySpecifiedName}<span style="font-weight: normal"> ({ConceptId}) </span></h3></div>'}},pageSize:25}),a.callParent()}}),Ext.define("App.ux.LiveRadsSearch",{extend:"Ext.form.ComboBox",alias:"widget.radslivetsearch",hideLabel:!0,initComponent:function(){var a=this;Ext.define("liveRadLoincSearchModel",{extend:"Ext.data.Model",fields:[{name:"id"},{name:"loinc_name"},{name:"loinc_number"},{name:"code_type",defaultValue:"LOINC"}],proxy:{type:"direct",api:{read:"Laboratories.getRadLoincLiveSearch"},reader:{totalProperty:"totals",root:"rows"}}}),a.store=Ext.create("Ext.data.Store",{model:"liveRadLoincSearchModel",pageSize:10,autoLoad:!1}),Ext.apply(this,{store:a.store,displayField:"loinc_name",valueField:"loinc_name",emptyText:_("radiology_search")+"...",typeAhead:!1,hideTrigger:!0,minChars:1,listConfig:{loadingText:_("searching")+"...",getInnerTpl:function(){return'<div class="search-item"><h3>{loinc_name} ({loinc_number})</h3></div>'}},pageSize:10}),a.callParent()}}),Ext.define("App.store.administration.MedicationInstructions",{extend:"Ext.data.Store",model:"App.model.administration.MedicationInstruction"}),Ext.define("App.model.patient.SOAP",{extend:"Ext.data.Model",requires:["App.model.patient.Encounter","App.model.patient.EncounterDx","App.model.patient.encounter.Procedures"],table:{name:"encounter_soap",comment:"SOAP Data"},fields:[{name:"id",type:"int"},{name:"pid",type:"int",index:!0},{name:"eid",type:"int",index:!0},{name:"uid",type:"int"},{name:"date",type:"date",dateFormat:"Y-m-d H:i:s"},{name:"subjective",type:"string",dataType:"mediumtext"},{name:"objective",type:"string",dataType:"mediumtext"},{name:"assessment",type:"string",dataType:"mediumtext"},{name:"plan",type:"string",dataType:"mediumtext"},{name:"instructions",type:"string",dataType:"mediumtext"}],proxy:{type:"direct",api:{update:"Encounter.updateSoap"}},hasMany:[{model:"App.model.patient.EncounterDx",name:"dxCodes",primaryKey:"eid",foreignKey:"eid"},{model:"App.model.patient.encounter.Procedures",name:"procedures",primaryKey:"eid",foreignKey:"eid"}],belongsTo:{model:"App.model.patient.Encounter",foreignKey:"eid"}}),Ext.define("App.view.patient.windows.Charts",{extend:"Ext.window.Window",requires:["App.store.patient.Vitals"],title:_("vector_charts"),layout:"card",closeAction:"hide",modal:!0,width:window.innerWidth-200,height:window.innerHeight-200,maximizable:!0,initComponent:function(){var a=this;
a.vitalsStore=Ext.create("App.store.patient.Vitals"),a.graphStore=Ext.create("App.store.patient.VectorGraph"),a.WeightForAgeInfStore=Ext.create("App.store.patient.charts.WeightForAgeInf"),a.LengthForAgeInfStore=Ext.create("App.store.patient.charts.LengthForAgeInf"),a.WeightForRecumbentInfStore=Ext.create("App.store.patient.charts.WeightForRecumbentInf"),a.HeadCircumferenceInfStore=Ext.create("App.store.patient.charts.HeadCircumferenceInf"),a.WeightForStatureStore=Ext.create("App.store.patient.charts.WeightForStature"),a.WeightForAgeStore=Ext.create("App.store.patient.charts.WeightForAge"),a.StatureForAgeStore=Ext.create("App.store.patient.charts.StatureForAge"),a.BMIForAgeStore=Ext.create("App.store.patient.charts.BMIForAge"),a.tbar=["->",{text:_("bp_pulse_temp"),action:"bpPulseTemp",pressed:!0,enableToggle:!0,toggleGroup:"charts",scope:a,handler:a.onChartSwitch},"-",{text:_("weight_for_age"),action:"WeightForAgeInf",enableToggle:!0,toggleGroup:"charts",scope:a,handler:a.onChartSwitch},"-",{text:_("length_for_age"),action:"LengthForAgeInf",enableToggle:!0,toggleGroup:"charts",scope:a,handler:a.onChartSwitch},"-",{text:_("weight_for_recumbent"),action:"WeightForRecumbentInf",enableToggle:!0,toggleGroup:"charts",scope:a,handler:a.onChartSwitch},"-",{text:_("head_circumference"),action:"HeadCircumferenceInf",enableToggle:!0,toggleGroup:"charts",scope:a,handler:a.onChartSwitch},"-",{text:_("weight_for_stature"),action:"WeightForStature",enableToggle:!0,toggleGroup:"charts",scope:a,handler:a.onChartSwitch},"-",{text:_("weight_for_age"),action:"WeightForAge",enableToggle:!0,toggleGroup:"charts",scope:a,handler:a.onChartSwitch},"-",{text:_("stature_for_age"),action:"StatureForAge",enableToggle:!0,toggleGroup:"charts",scope:a,handler:a.onChartSwitch},"-",{text:_("bmi_for_age"),action:"BMIForAge",enableToggle:!0,toggleGroup:"charts",scope:a,handler:a.onChartSwitch},"-"],a.tools=[{type:"print",tooltip:_("print_chart"),handler:function(){console.log(this.up("window").down("chart"))}}],a.items=[Ext.create("App.view.patient.charts.BPPulseTemp",{store:a.vitalsStore}),a.WeightForAgeInf=Ext.create("App.view.patient.charts.HeadCircumference",{title:_("weight_for_age_0_3_mos"),xTitle:_("weight_kg"),yTitle:_("age_months"),xMinimum:1,xMaximum:19,yMinimum:0,yMaximum:36,store:a.WeightForAgeInfStore}),a.LengthForAgeInf=Ext.create("App.view.patient.charts.HeadCircumference",{title:_("length_for_age_0_3_mos"),xTitle:_("length_cm"),yTitle:_("age_months"),xMinimum:40,xMaximum:110,yMinimum:0,yMaximum:36,store:a.LengthForAgeInfStore}),a.WeightForRecumbentInf=Ext.create("App.view.patient.charts.HeadCircumference",{title:_("weight_for_recumbent_0_3_mos"),xTitle:_("weight_kg"),yTitle:_("length_cm"),xMinimum:1,xMaximum:20,yMinimum:45,yMaximum:103.5,store:a.WeightForRecumbentInfStore}),a.HeadCircumferenceInf=Ext.create("App.view.patient.charts.HeadCircumference",{title:_("head_circumference_0_3_mos"),xTitle:_("circumference_cm"),yTitle:_("age_months"),xMinimum:30,xMaximum:55,yMinimum:0,yMaximum:36,store:a.HeadCircumferenceInfStore}),a.WeightForStature=Ext.create("App.view.patient.charts.HeightForStature",{store:a.WeightForStatureStore}),a.WeightForAge=Ext.create("App.view.patient.charts.HeadCircumference",{title:_("weight_for_age_2_20_years"),xTitle:_("weight_kg"),yTitle:_("age_years"),xMinimum:10,xMaximum:110,yMinimum:2,yMaximum:20,store:a.WeightForAgeStore}),a.StatureForAge=Ext.create("App.view.patient.charts.HeadCircumference",{title:_("stature_for_age_2_20_years"),xTitle:_("stature_cm"),yTitle:_("age_years"),xMinimum:60,xMaximum:200,yMinimum:2,yMaximum:20,store:a.StatureForAgeStore}),a.BMIForAge=Ext.create("App.view.patient.charts.HeadCircumference",{title:_("bmi_for_age_2_20_years"),xTitle:_("bmi"),yTitle:_("age_years"),xMinimum:10,xMaximum:35,yMinimum:2,yMaximum:20,store:a.BMIForAgeStore})],a.listeners={scope:a,show:a.onWinShow},a.callParent(arguments)},onWinShow:function(){var a,b=this,c=b.getLayout(),d=b.down("toolbar").items.items;c.setActiveItem(0),b.vitalsStore.load({params:{pid:app.patient.pid}});for(var e=0;e<d.length;e++)a=d[e],"button"!=a.type||"WeightForAgeInf"!=a.action&&"LengthForAgeInf"!=a.action&&"WeightForRecumbentInf"!=a.action&&"HeadCircumferenceInf"!=a.action?"button"==a.type&&(a.setVisible(app.patient.age.DMY.years>=2),d[e+1].setVisible(app.patient.age.DMY.years>=2)):(a.setVisible(app.patient.age.DMY.years<2),d[e+1].setVisible(app.patient.age.DMY.years<2))},onChartSwitch:function(a){var b=this,c=b.getLayout();"bpPulseTemp"==a.action?c.setActiveItem(0):"WeightForAgeInf"==a.action?(c.setActiveItem(1),b.WeightForAgeInfStore.load({params:{pid:app.patient.pid}})):"LengthForAgeInf"==a.action?(c.setActiveItem(2),b.LengthForAgeInfStore.load({params:{pid:app.patient.pid}})):"WeightForRecumbentInf"==a.action?(c.setActiveItem(3),b.WeightForRecumbentInfStore.load({params:{pid:app.patient.pid}})):"HeadCircumferenceInf"==a.action?(c.setActiveItem(4),b.HeadCircumferenceInfStore.load({params:{pid:app.patient.pid}})):"WeightForStature"==a.action?(c.setActiveItem(5),b.WeightForStatureStore.load({params:{pid:app.patient.pid}})):"WeightForAge"==a.action?(c.setActiveItem(6),b.WeightForAgeStore.load({params:{pid:app.patient.pid}})):"StatureForAge"==a.action?(c.setActiveItem(7),b.StatureForAgeStore.load({params:{pid:app.patient.pid}})):"BMIForAge"==a.action&&(c.setActiveItem(8),b.BMIForAgeStore.load({params:{pid:app.patient.pid}}))}}),Ext.define("App.view.patient.windows.EncounterCheckOut",{extend:"App.ux.window.Window",requires:["Ext.grid.plugin.RowEditing","App.view.patient.SupperBill","App.ux.combo.EncounterSupervisors","App.ux.LiveCPTSearch"],title:_("checkout_and_signing"),itemId:"EncounterSignWindow",closeAction:"hide",modal:!0,layout:"border",width:1200,height:660,bodyPadding:5,pid:null,eid:null,items:[{xtype:"superbillpanel",title:_("super_bill"),region:"center",flex:2},{xtype:"encounterdocumentsgrid",title:_("documents"),region:"east",itemId:"EncounterSignDocumentGrid",width:200},{xtype:"form",title:_("additional_info"),region:"south",split:!0,height:245,layout:"column",defaults:{xtype:"fieldset",padding:8},items:[{xtype:"container",columnWidth:.5,defaults:{xtype:"fieldset",padding:8,margin:"5 1 5 5"},padding:0,layout:{type:"vbox",align:"stretch"},items:[{title:_("messages_notes_and_reminders"),defaults:{anchor:"100%"},items:[{xtype:"textfield",name:"message",fieldLabel:_("message")},{xtype:"textfield",name:"reminder",fieldLabel:_("reminder")},{xtype:"textfield",grow:!0,name:"note",fieldLabel:_("note"),margin:0}]},{title:"Follow Up",flex:1,defaults:{anchor:"100%"},items:[{xtype:"mitos.followupcombo",fieldLabel:_("time_interval"),name:"followup_time"},{fieldLabel:_("facility"),xtype:"activefacilitiescombo",name:"followup_facility",margin:0}]}]},{xtype:"fieldset",margin:5,padding:8,columnWidth:.5,layout:"fit",height:208,title:_("warnings_alerts"),items:[{xtype:"grid",hideHeaders:!0,store:Ext.create("App.store.patient.CheckoutAlertArea"),itemId:"EncounterSignAlertGrid",border:!1,rowLines:!1,header:!1,viewConfig:{stripeRows:!1,disableSelection:!0},columns:[{dataIndex:"alertType",width:30,renderer:function(a){return App.app.getController("patient.encounter.EncounterSign").alertIconRenderer(a)}},{dataIndex:"alert",flex:1}]}]}]}],buttons:[{xtype:"encountersupervisorscombo",itemId:"EncounterCoSignSupervisorCombo",allowBlank:!1},{text:_("co_sign")+" ("+_("supervisor")+")",itemId:"EncounterCoSignSupervisorBtn"},{text:_("sign"),itemId:"EncounterSignBtn"},{text:_("cancel"),itemId:"EncounterCancelSignBtn"}]}),Ext.define("App.view.dashboard.panel.PortalColumn",{extend:"Ext.container.Container",alias:"widget.portalcolumn",requires:["Ext.layout.container.Anchor","App.view.dashboard.panel.Portlet"],layout:"anchor",defaultType:"portlet",cls:"x-portal-column"}),Ext.define("App.view.dashboard.panel.PortalPanel",{extend:"Ext.panel.Panel",alias:"widget.portalpanel",requires:["Ext.layout.container.Column","App.view.dashboard.panel.PortalDropZone","App.view.dashboard.panel.PortalColumn"],cls:"x-portal",bodyCls:"x-portal-body",defaultType:"portalcolumn",autoScroll:!0,manageHeight:!1,initComponent:function(){this.layout={type:"column"},this.callParent(),this.addEvents({validatedrop:!0,beforedragover:!0,dragover:!0,beforedrop:!0,drop:!0})},beforeLayout:function(){var a,b,c,d=this.layout.getLayoutItems(),e=d.length,f=["x-portal-column-first","x-portal-column-last"];for(a=0;e>a;a++)b=d[a],b.columnWidth=1/e,c=a==e-1,a?c?(b.addCls("x-portal-column-last"),b.removeCls("x-portal-column-first")):b.removeCls(f):c?b.addCls(f):(b.addCls("x-portal-column-first"),b.removeCls("x-portal-column-last"));return this.callParent(arguments)},initEvents:function(){this.callParent(),this.dd=Ext.create("App.view.dashboard.panel.PortalDropZone",this,this.dropConfig)},beforeDestroy:function(){this.dd&&this.dd.unreg(),this.callParent()}}),Ext.define("App.view.areas.PatientPoolAreas",{extend:"App.ux.RenderPanel",requires:["App.ux.grid.AreasDragDrop"],pageTitle:_("patient_pool_areas"),initComponent:function(){var a=this;a.pageBody=Ext.create("Ext.container.Container",{defaults:{flex:1,margin:5,frame:!1},layout:{type:"hbox",align:"stretch"}}),a.listeners={beforerender:a.getPoolAreas},a.callParent(arguments)},onPatientDrop:function(a,b){var c,d=b.records[0].data?b.records[0].data.name:b.records[0].name,e=b.records[0].data?b.records[0].data.pid:b.records[0].pid;app.msg("Sweet!",d+" "+_("sent_to")+" "+this.panel.title),c={pid:e,sendTo:this.panel.action},PoolArea.sendPatientToPoolArea(c,function(a){return null==a.floor_plan_id?(app.unsetPatient(null,!0),app.nav.App_view_areas_PatientPoolAreas.reloadStores(),void app.getPatientsInPoolArea()):void app.getController("areas.FloorPlan").promptPatientZoneAssignment(a.record.pid,a.floor_plan_id)})},reRenderPoolAreas:function(){var a=this,b=a.getPageBody().down("container");b.removeAll(),a.getPoolAreas()},getPoolAreas:function(){var a,b=this,c=b.getPageBody().down("container");b.stores=[],PoolArea.getFacilityActivePoolAreas(function(d,e){a=e.result;for(var f=0;f<a.length;f++){var h=Ext.create("App.store.areas.PoolDropAreas",{proxy:{type:"direct",api:{read:"PoolArea.getPoolAreaPatients"},extraParams:{area_id:a[f].id}}});b.stores.push(h),c.add({xtype:"grid",title:a[f].title,action:a[f].id,store:h,floorPlanId:a[f].floor_plan_id,columns:[Ext.create("Ext.grid.RowNumberer"),{header:_("record")+" #",width:100,dataIndex:"pid"},{header:_("patient_name"),flex:1,dataIndex:"name"},{xtype:"datecolumn",header:_("time_in"),width:100,dataIndex:"time_in",format:g("time_display_format")}],viewConfig:{loadMask:!1,plugins:{ptype:"areasgridviewdragdrop",dragGroup:"patientPoolAreas",dropGroup:"patientPoolAreas"},listeners:{drop:b.onPatientDrop}},listeners:{scope:b,itemdblclick:b.onPatientDblClick}})}b.reloadStores()})},onPatientDblClick:function(a,b){var c=b.data;app.setPatient(c.pid,c.name,null,function(){app.openPatientSummary()})},reloadStores:function(){if(this.stores)for(var a=0;a<this.stores.length;a++)this.stores[a].load()},onActive:function(a){"function"==typeof a&&a(!0)}}),Ext.define("App.view.administration.DataManager",{extend:"App.ux.RenderPanel",pageTitle:"Data Manager",requires:["App.view.administration.CPT","App.ux.combo.CodesTypes","App.ux.combo.Titles"],initComponent:function(){function a(a){return"1"==a?"CPT4":"3"==a?"HCPCS":"100"==a?"CVX":a}var b=this;b.active=1,b.dataQuery="",b.code_type="LOINC",b.store=Ext.create("App.store.administration.Services"),b.activeProblemsStore=Ext.create("App.store.administration.ActiveProblems"),b.medicationsStore=Ext.create("App.store.administration.Medications"),b.ImmuRelationStore=Ext.create("App.store.administration.ImmunizationRelations"),b.labObservationsStore=Ext.create("App.store.administration.LabObservations"),b.cptContainer=Ext.create("Ext.container.Container",{layout:"column",action:"CPT4",items:[{xtype:"fieldcontainer",msgTarget:"under",defaults:{action:"field"},items:[{fieldLabel:"Type",xtype:"mitos.codestypescombo",name:"code_type"},{fieldLabel:"Code",xtype:"textfield",name:"code"}]},{xtype:"fieldcontainer",margin:"0 0 0 10",defaults:{action:"field"},items:[{fieldLabel:_("description"),xtype:"textfield",name:"code_text",width:500}]},{xtype:"fieldcontainer",margin:"0 0 0 20",defaults:{action:"field"},items:[{boxLabel:_("radiology"),xtype:"checkboxfield",name:"isRadiology"},{boxLabel:_("active"),labelWidth:75,xtype:"checkboxfield",name:"active"}]}]}),b.hpccsContainer=Ext.create("Ext.container.Container",{layout:"column",action:"HCPCS",items:[{xtype:"fieldcontainer",msgTarget:"under",defaults:{action:"field"},items:[{fieldLabel:_("type"),xtype:"mitos.codestypescombo",name:"code_type"},{fieldLabel:_("code"),xtype:"textfield",name:"code"},{fieldLabel:_("modifier"),xtype:"textfield",name:"mod"}]},{xtype:"fieldcontainer",margin:"0 0 0 10",defaults:{action:"field"},items:[{fieldLabel:_("description"),xtype:"textfield",name:"code_text"},{fieldLabel:_("category"),xtype:"mitos.titlescombo",name:"title"}]},{xtype:"fieldcontainer",margin:"0 0 0 20",defaults:{action:"field"},items:[{boxLabel:_("reportable"),xtype:"checkboxfield",name:"reportable"},{boxLabel:_("active"),labelWidth:75,xtype:"checkboxfield",name:"active"}]}]}),b.cvxCintainer=Ext.create("Ext.container.Container",{action:_("immunizations"),layout:"fit",items:[{}]}),b.labContainer=Ext.create("Ext.container.Container",{action:_("laboratories"),layout:{type:"vbox",align:"stretch"},items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 5 0",action:"field"},items:[{xtype:"textfield",fieldLabel:_("short_name_alias"),name:"code_text_short",labelWidth:130,width:500},{xtype:"checkbox",fieldLabel:_("active"),name:"active",anchor:"100%",labelWidth:50}]},{xtype:"grid",frame:!0,title:_("children"),store:b.labObservationsStore,plugins:Ext.create("Ext.grid.plugin.CellEditing",{clicksToEdit:2}),columns:[{header:_("label_alias"),dataIndex:"code_text_short",width:150,editor:{xtype:"textfield"}},{header:_("loinc_name"),dataIndex:"loinc_name",flex:1},{header:_("loinc_number"),dataIndex:"loinc_number",width:100},{header:_("default_unit"),dataIndex:"default_unit",width:100,editor:{xtype:"mitos.unitscombo"}},{header:_("req_opt"),dataIndex:"required_in_panel",width:75},{header:_("range_start"),dataIndex:"range_start",width:100,editor:{xtype:"numberfield"}},{header:_("range_end"),dataIndex:"range_end",width:100,editor:{xtype:"numberfield"}},{header:_("description"),dataIndex:"description",flex:1,editor:{xtype:"textfield"}},{width:60,header:_("active"),dataIndex:"active",renderer:b.boolRenderer,editor:{xtype:"checkbox"}}]}]}),b.dataManagerGrid=Ext.create("Ext.grid.Panel",{title:"Codes",region:"center",store:b.store,viewConfig:{loadMask:!0},columns:[{width:50,sortable:!1,dataIndex:"code_type",renderer:a},{width:60,header:_("code"),sortable:!0,dataIndex:"code"},{header:_("short_name"),dataIndex:"code_text_short",width:100,flex:1},{header:_("long_name"),sortable:!0,dataIndex:"code_text",flex:2},{width:60,header:_("active"),sortable:!0,dataIndex:"active",renderer:b.boolRenderer}],plugins:Ext.create("App.ux.grid.RowFormEditing",{autoCancel:!1,errorSummary:!1,clicksToEdit:1,listeners:{scope:b,beforeedit:b.beforeServiceEdit}}),tbar:this.bar=Ext.create("Ext.PagingToolbar",{store:b.store,displayInfo:!0,emptyMsg:_("no_office_notes_to_display"),plugins:Ext.create("Ext.ux.SlidingPager"),items:["-",{xtype:"mitos.codestypescombo",width:150,listeners:{scope:b,select:b.onCodeTypeSelect}},"-",{text:_("add"),iconCls:"icoAddRecord",scope:b,handler:b.onAddData},"-",{xtype:"textfield",emptyText:_("search"),width:200,enableKeyEvents:!0,listeners:{scope:b,keyup:b.onSearch,buffer:500}},"-",{xtype:"button",text:_("show_inactive_codes_only"),enableToggle:!0,listeners:{scope:b,toggle:b.onActivePressed}}]})}),b.tabPanel=Ext.widget("tabpanel",{items:[{xtype:"cptadmingrid"},b.dataManagerGrid]}),b.pageBody=[b.tabPanel],b.callParent()},onAddData:function(){var a=this;"Laboratories"==a.code_type?Ext.Msg.alert("Opps!",_("ops_laboratories")):(a.dataManagerGrid.plugins[0].cancelEdit(),a.store.add({code_type:a.code_type}),a.dataManagerGrid.plugins[0].startEdit(0,0))},beforeServiceEdit:function(a,b){var c,d,e=this,f=a.editor,g=b.record.data.code_type;if("CPT4"==g?d=e.cptContainer:"HCPCS"==g?d=e.hpccsContainer:"CVX"==g?d=e.cvxCintainer:"LOINC"==g&&(e.labContainer.down("grid").setTitle(_(b.record.data.has_children?"observations":"observation")),e.labContainer.down("grid").setVisible("RAD"!=b.record.data.class),d=e.labContainer),f.items.length?this.currForm!=d&&(f.remove(0,!1),f.add(d),f.setFields()):(f.add(d),f.setFields()),d){c=d.query("grid");for(var h=0;h<c.length;h++)c[h].getStore().load({params:{selectedId:e.getSelectId()}});this.currForm=d}},onSearch:function(a){var b=this,c=b.store;b.dataQuery=a.getValue(),c.proxy.extraParams={active:b.active,code_type:b.code_type,query:b.dataQuery},b.store.loadPage(1)},onCodeTypeSelect:function(a,b){var c=this,d=c.store;c.code_type=b[0].data.option_value,d.proxy.extraParams={active:c.active,code_type:c.code_type,query:c.dataQuery},c.store.loadPage(1)},onActivePressed:function(a,b){var c=this,d=c.store;c.active=!b,d.proxy.extraParams={active:c.active,code_type:c.code_type,query:c.dataQuery},c.store.load()},getSelectId:function(){var a=this.dataManagerGrid.getSelectionModel().getLastSelected();return a.data.id},onActive:function(a){this.bar.query("combobox")[0].setValue("CPT4"),this.store.proxy.extraParams={active:this.active,code_type:this.code_type,query:this.dataQuery},this.store.load(),a(!0)}}),Ext.define("App.view.administration.Documents",{extend:"App.ux.RenderPanel",id:"panelDocuments",pageTitle:_("document_template_editor"),pageLayout:"border",requires:["App.ux.grid.Button","Ext.grid.Panel"],initComponent:function(){var a=this;a.templatesDocumentsStore=Ext.create("App.store.administration.DocumentsTemplates"),a.defaultsDocumentsStore=Ext.create("App.store.administration.DefaultDocuments"),a.tokenStore=Ext.create("App.store.administration.DocumentToken"),a.DocumentsDefaultsGrid=Ext.create("Ext.grid.Panel",{title:_("documents_defaults"),region:"north",width:250,border:!0,store:a.defaultsDocumentsStore,hideHeaders:!0,columns:[{flex:1,sortable:!0,dataIndex:"title",editor:{xtype:"textfield",allowBlank:!1}},{icon:"resources/images/icons/delete.png",tooltip:_("remove"),scope:a,handler:a.onRemoveDocument}],listeners:{scope:a,itemclick:a.onDocumentsGridItemClick},tbar:["->",{text:_("new"),scope:a,handler:a.newDefaultTemplates}],plugins:[a.rowEditor3=Ext.create("Ext.grid.plugin.RowEditing",{clicksToEdit:2})]}),a.DocumentsGrid=Ext.create("Ext.grid.Panel",{title:_("document_templates"),region:"center",width:250,border:!0,split:!0,store:a.templatesDocumentsStore,hideHeaders:!0,columns:[{flex:1,sortable:!0,dataIndex:"title",editor:{xtype:"textfield",allowBlank:!1}},{icon:"resources/images/icons/delete.png",tooltip:_("remove"),scope:a,handler:a.onRemoveDocument}],listeners:{scope:a,itemclick:a.onDocumentsGridItemClick},tbar:["->",{text:_("new"),scope:a,handler:a.newDocumentTemplate}],plugins:[a.rowEditor=Ext.create("Ext.grid.plugin.RowEditing",{clicksToEdit:2})]}),a.LeftCol=Ext.create("Ext.container.Container",{region:"west",layout:"border",width:250,border:!1,split:!0,items:[a.DocumentsDefaultsGrid,a.DocumentsGrid]}),a.TeamplateEditor=Ext.create("Ext.form.Panel",{title:_("document_editor"),region:"center",layout:"fit",autoScroll:!1,border:!0,split:!0,hideHeaders:!0,items:{xtype:"htmleditor",enableFontSize:!1,name:"body",margin:5},buttons:[{text:_("save"),scope:a,handler:a.onSaveEditor},{text:_("cancel"),scope:a,handler:a.onCancelEditor}]}),a.TokensGrid=Ext.create("Ext.grid.Panel",{title:_("available_tokens"),region:"east",width:250,border:!0,split:!0,hideHeaders:!0,store:a.tokenStore,disableSelection:!0,viewConfig:{stripeRows:!1},columns:[{flex:1,sortable:!1,dataIndex:"token"},{xtype:"actioncolumn",width:50,items:[{icon:"resources/images/icons/copy.png",tooltip:_("copy"),margin:"0 5 0 0",handler:function(){}}]}]}),a.pageBody=[a.LeftCol,a.TeamplateEditor,a.TokensGrid],a.callParent()},onDelete:function(){},onTokensGridItemClick:function(){},onSaveEditor:function(){var a=this,b=a.down("form").getForm(),c=b.getRecord(),d=b.getValues();c.set(d),app.msg(_("sweet"),_("record_saved"))},onCancelEditor:function(){var a=this,b=a.down("form").getForm(),c=a.DocumentsGrid;b.reset(),c.getSelectionModel().deselectAll()},onDocumentsGridItemClick:function(a,b){var c=this,d=c.down("form").getForm();d.loadRecord(b)},newDocumentTemplate:function(){var a=this,b=a.templatesDocumentsStore;a.rowEditor.cancelEdit(),b.insert(0,{title:_("new_document"),template_type:"documenttemplate",date:new Date,type:1}),a.rowEditor.startEdit(0,0)},newDefaultTemplates:function(){var a=this,b=a.defaultsDocumentsStore;a.rowEditor3.cancelEdit(),b.insert(0,{title:_("new_defaults"),template_type:"defaulttemplate",date:new Date,type:1}),a.rowEditor3.startEdit(0,0)},copyToClipBoard:function(a,b){{var c=a.getStore().getAt(b);c.get("token")}},onRemoveDocument:function(){},onActive:function(a){var b=this;b.templatesDocumentsStore.load(),b.defaultsDocumentsStore.load(),a(!0)}}),Ext.define("App.view.administration.Roles",{extend:"App.ux.RenderPanel",requires:["App.ux.combo.XCombo","Ext.grid.plugin.CellEditing","Ext.ux.DataTip"],itemId:"AdministrationRolePanel",pageTitle:_("roles_and_permissions"),pageBody:[{xtype:"grid",bodyStyle:"background-color:white",itemId:"AdministrationRoleGrid",frame:!0,columnLines:!0,tbar:[{xtype:"xcombo",emptyText:_("select"),labelWidth:50,width:250,valueField:"id",displayField:"title",queryMode:"local",store:Ext.create("App.store.administration.AclGroups"),itemId:"AdministrationRoleGroupCombo",windowConfig:{title:_("add_group")},formConfig:{border:!1,bodyPadding:10,items:[{xtype:"textfield",fieldLabel:_("group_name"),name:"title"},{xtype:"checkbox",fieldLabel:_("active"),name:"active"}]}},"-","->","-",{xtype:"button",text:_("add_role"),iconCls:"icoAdd",action:"adminAclAddRole"},"-"],features:[{ftype:"grouping"}],plugins:[{ptype:"cellediting",clicksToEdit:1},{ptype:"datatip",tpl:_("click_to_edit")}],columns:[{text:"Permission",width:250,locked:!0}]}],pageButtons:[{text:_("cancel"),cls:"cancelBtn",action:"adminAclCancel"},"-",{text:_("save"),cls:"saveBtn",action:"adminAclSave"}]}),Ext.define("App.view.administration.Users",{extend:"App.ux.RenderPanel",requires:["App.ux.form.fields.plugin.PasswordStrength","App.ux.combo.ActiveSpecialties"],pageTitle:_("users"),itemId:"AdminUsersPanel",initComponent:function(){var a=this;a.userStore=Ext.create("App.store.administration.User",{remoteSort:!0,autoSync:!1}),a.userGrid=Ext.create("Ext.grid.Panel",{itemId:"AdminUserGridPanel",store:a.userStore,columns:[{text:"id",sortable:!1,dataIndex:"id",width:50},{width:100,text:_("username"),sortable:!0,dataIndex:"username"},{width:200,text:_("name"),sortable:!0,dataIndex:"fullname"},{flex:1,text:_("aditional_info"),sortable:!0,dataIndex:"notes"},{text:_("active"),sortable:!0,dataIndex:"active",renderer:a.boolRenderer},{text:_("authorized"),sortable:!0,dataIndex:"authorized",renderer:a.boolRenderer},{text:_("is_attending"),sortable:!0,dataIndex:"is_attending",renderer:a.boolRenderer}],plugins:[a.formEditing=Ext.create("App.ux.grid.RowFormEditing",{clicksToEdit:1,items:[{xtype:"tabpanel",items:[{title:_("general"),itemId:"UserGridEditFormContainer",layout:"hbox",items:[{xtype:"container",itemId:"UserGridEditFormContainerLeft",items:[{xtype:"fieldcontainer",layout:{type:"hbox"},fieldDefaults:{labelAlign:"right"},items:[{width:280,xtype:"textfield",fieldLabel:_("username"),name:"username",allowBlank:!1,validateOnBlur:!0,vtype:"usernameField"},{width:275,xtype:"textfield",fieldLabel:_("password"),name:"password",inputType:"password",vtype:"strength",strength:24,plugins:{ptype:"passwordstrength"}}]},{xtype:"fieldcontainer",layout:{type:"hbox"},fieldDefaults:{labelAlign:"right"},fieldLabel:_("name"),items:[{width:50,xtype:"mitos.titlescombo",name:"title"},{width:145,xtype:"textfield",name:"fname",allowBlank:!1},{width:100,xtype:"textfield",name:"mname"},{width:150,xtype:"textfield",name:"lname"}]},{xtype:"fieldcontainer",layout:{type:"hbox"},fieldDefaults:{labelAlign:"right"},items:[{width:125,xtype:"checkbox",fieldLabel:_("active"),name:"active"},{width:100,labelWidth:85,xtype:"checkbox",fieldLabel:_("authorized"),name:"authorized"},{width:100,labelWidth:85,xtype:"checkbox",fieldLabel:_("calendar_q"),name:"calendar"},{width:225,labelWidth:50,xtype:"gaiaehr.combo",fieldLabel:_("type"),name:"doctor_type",list:121,loadStore:!0}]},{xtype:"fieldcontainer",layout:{type:"hbox"},fieldDefaults:{labelAlign:"right"},items:[{width:280,xtype:"mitos.facilitiescombo",fieldLabel:_("default_facility"),name:"facility_id"},{width:275,xtype:"mitos.authorizationscombo",fieldLabel:_("authorizations"),name:"see_auth"}]},{xtype:"fieldcontainer",layout:{type:"hbox"},fieldDefaults:{labelAlign:"right"},items:[{width:555,xtype:"mitos.rolescombo",fieldLabel:_("access_control"),name:"role_id",allowBlank:!1}]}]},{xtype:"container",itemId:"UserGridEditFormContainerRight",items:[]}]},{xtype:"panel",title:_("provider"),itemId:"UserGridEditFormProviderPanel",layout:"hbox",items:[{xtype:"fieldcontainer",itemId:"UserGridEditFormProviderPanelLeft",fieldDefaults:{labelAlign:"right",width:500,margin:"0 0 5 0"},margin:"20 10 0 0",items:[{xtype:"checkbox",fieldLabel:_("is_attending"),name:"is_attending"},{xtype:"textfield",fieldLabel:_("federal_tax_id"),name:"fedtaxid"},{xtype:"textfield",fieldLabel:_("fed_drug_id"),name:"feddrugid"},{xtype:"textfield",fieldLabel:_("upin"),name:"pin"},{xtype:"textfield",fieldLabel:_("npi"),name:"npi",maxLength:10,vtype:"npi"},{xtype:"activespecialtiescombo",fieldLabel:_("specialties"),name:"specialty",margin:"5 0",labelAlign:"right",multiSelect:!0},{xtype:"textfield",fieldLabel:_("additional_info"),name:"notes",labelAlign:"right"}]},{xtype:"grid",title:_("provider_credentialization"),itemId:"UserGridEditFormProviderCredentializationGrid",flex:1,maxHeight:200,frame:!0,store:Ext.create("App.store.administration.ProviderCredentializations",{pageSize:1e3}),plugins:[{ptype:"cellediting"}],tools:[{xtype:"button",text:_("active_all"),icon:"resources/images/icons/yes.gif",margin:"0 5 0 0",itemId:"UserGridEditFormProviderCredentializationActiveBtn"},{xtype:"button",text:_("inactive_all"),icon:"resources/images/icons/no.gif",itemId:"UserGridEditFormProviderCredentializationInactiveBtn"}],columns:[{text:_("insurance"),width:150,dataIndex:"insurance_company_id",renderer:function(a,b,c){return c.data.insurance_company_id+": "+c.data.insurance_company_name}},{xtype:"datecolumn",format:g("date_display_format"),text:_("start"),dataIndex:"start_date",editor:{xtype:"datefield"}},{xtype:"datecolumn",format:g("date_display_format"),text:_("end"),dataIndex:"end_date",editor:{xtype:"datefield"}},{text:_("note"),dataIndex:"credentialization_notes",flex:1,editor:{xtype:"textfield"}},{text:_("active"),dataIndex:"active",renderer:app.boolRenderer}]}]}]}]})],tbar:[{xtype:"button",text:_("user"),iconCls:"icoAdd",scope:a,handler:a.onNewUser}],bbar:{xtype:"pagingtoolbar",pageSize:10,store:a.userStore,displayInfo:!0,plugins:new Ext.ux.SlidingPager}}),a.pageBody=[a.userGrid],a.callParent(arguments)},onNewUser:function(){var a=this;a.formEditing.cancelEdit(),a.userStore.insert(0,{create_date:new Date,update_date:new Date,create_uid:app.user.id,update_uid:app.user.id,active:1,authorized:0,calendar:0}),a.formEditing.startEdit(0,0)},onActive:function(a){this.userStore.load(),a(!0)}}),Ext.define("App.view.miscellaneous.AddressBook",{extend:"App.ux.RenderPanel",requires:["App.store.miscellaneous.AddressBook","Ext.toolbar.Paging","Ext.ux.SlidingPager"],pageTitle:_("address_book"),initComponent:function(){var a=this;a.grid=Ext.create("Ext.grid.Panel",{store:a.store=Ext.create("App.store.miscellaneous.AddressBook"),columns:[{header:_("name"),width:200,dataIndex:"fullname"},{header:_("primary_phone"),dataIndex:"phone",width:120},{header:_("cell_phone"),dataIndex:"mobile",width:120},{header:_("fax"),dataIndex:"fax",width:120},{header:_("email"),dataIndex:"email",width:120},{header:_("direct_address"),dataIndex:"direct_address",width:120},{header:_("notes"),dataIndex:"notes",flex:1}],plugins:[{ptype:"rowformediting",items:[{xtype:"container",layout:"column",defaults:{xtype:"container",layout:"anchor",margin:5},items:[{width:500,defaults:{labelWidth:80,anchor:"100%"},items:[{xtype:"fieldcontainer",fieldLabel:_("name"),layout:"hbox",defaults:{margin:"0 5 0 0"},items:[{xtype:"textfield",emptyText:_("first_name"),name:"fname",width:130},{xtype:"textfield",emptyText:_("middle_name"),name:"mname",width:50},{xtype:"textfield",emptyText:_("last_name"),name:"lname",flex:1,margin:0}]},{xtype:"fieldcontainer",fieldLabel:_("address"),layout:"anchor",defaults:{anchor:"100%",margin:"0 0 5 0"},items:[{xtype:"textfield",emptyText:_("street"),name:"street"},{xtype:"textfield",name:"street_cont"},{xtype:"container",layout:"hbox",defaults:{margin:"0 5 0 0"},items:[{xtype:"textfield",emptyText:_("city"),name:"city",flex:1},{xtype:"textfield",emptyText:_("state"),name:"state",width:120},{xtype:"textfield",emptyText:_("zip"),name:"zip",width:100,margin:0}]},{xtype:"textfield",emptyText:_("country"),name:"country",margin:"5 0 0 0"}]},{xtype:"textfield",fieldLabel:_("notes"),name:"notes",margin:"5 0 5 0"}]},{width:300,layout:"anchor",defaults:{anchor:"100%",labelWidth:80,margin:"0 0 5 0"},items:[{xtype:"textfield",fieldLabel:_("phone")+" (1)",name:"phone"},{xtype:"textfield",fieldLabel:_("phone")+" (2)",name:"phone2"},{xtype:"textfield",fieldLabel:_("cell_phone"),name:"mobile"},{xtype:"textfield",fieldLabel:_("fax"),name:"fax"},{xtype:"textfield",fieldLabel:_("email"),name:"email",margin:"5 0 5 0",vtype:"email"},{xtype:"textfield",fieldLabel:_("url"),name:"url"}]},{width:300,layout:"anchor",defaults:{anchor:"100%",labelWidth:100,margin:"0 0 5 0"},items:[{xtype:"textfield",fieldLabel:_("direct_address"),name:"direct_address"}]}]}]}],tbar:[{text:_("add_contact"),iconCls:"icoAdd",scope:a,handler:a.onAddContact}],bbar:Ext.create("Ext.PagingToolbar",{store:a.store,displayInfo:!0,plugins:Ext.create("Ext.ux.SlidingPager",{})})}),a.pageBody=[a.grid],a.callParent(arguments)},onAddContact:function(){var a,b=this,c=b.grid,d=c.getStore(),e=c.editingPlugin;e.cancelEdit(),a=d.add({})[0],e.startEdit(a,0)},onActive:function(a){this.grid.getStore().load(),a(!0)}}),Ext.define("App.view.miscellaneous.MyAccount",{extend:"App.ux.RenderPanel",pageTitle:_("my_account"),requires:["App.ux.combo.Titles","App.ux.window.Window","App.ux.combo.Facilities","App.ux.combo.ActiveSpecialties","App.ux.form.fields.plugin.PasswordStrength"],initComponent:function(){var a=this;a.store=Ext.create("App.store.miscellaneous.Users"),a.myAccountForm=Ext.create("App.ux.form.Panel",{cls:"form-white-bg",frame:!0,hideLabels:!0,defaults:{labelWidth:89,layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{xtype:"textfield",hidden:!0,name:"id"},{xtype:"fieldset",title:_("personal_info"),defaultType:"textfield",layout:"anchor",defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{xtype:"fieldcontainer",defaults:{hideLabel:!0},msgTarget:"under",items:[{width:110,xtype:"displayfield",value:"First, Middle, Last: "},{width:55,xtype:"mitos.titlescombo",name:"title"},{width:105,xtype:"textfield",name:"fname"},{width:100,xtype:"textfield",name:"mname"},{width:175,xtype:"textfield",name:"lname"}]}]},{xtype:"fieldset",title:_("login_info"),defaultType:"textfield",layout:"anchor",defaults:{labelWidth:89,anchor:"100%",layout:{type:"hbox",defaultMargins:{top:0,right:5,bottom:0,left:0}}},items:[{xtype:"fieldcontainer",defaults:{hideLabel:!0},msgTarget:"under",items:[{width:110,xtype:"displayfield",value:"Username: "},{width:170,xtype:"textfield",name:"username"},{width:100,xtype:"displayfield",value:"Password: "},{width:175,xtype:"textfield",name:"password",inputType:"password",disabled:!0}]}]}],tbar:[{text:_("change_password"),iconCls:"save",scope:a,handler:a.onPasswordChange}],buttons:[{text:_("save"),iconCls:"save",scope:a,handler:a.onSaveClick}]}),a.win=Ext.create("App.ux.window.Window",{width:420,title:_("change_you_password"),items:[{xtype:"form",bodyPadding:15,defaultType:"textfield",defaults:{labelWidth:130,width:380,inputType:"password"},items:[{name:"id",hidden:!0},{fieldLabel:_("old_password"),name:"oPassword",allowBlank:!1},{fieldLabel:_("new_password"),name:"nPassword",allowBlank:!1,id:"myAccountPage_nPassword",vtype:"strength",strength:24,plugins:{ptype:"passwordstrength"}},{fieldLabel:_("re_type_password"),name:"vPassword",allowBlank:!1,vtype:"password",initialPassField:"myAccountPage_nPassword",validateOnChange:!0}]}],buttons:[{text:_("save"),scope:a,handler:a.onPasswordSave},{text:_("cancel"),scope:a,handler:a.onCancel}],listeners:{scope:a,close:a.onClose}}),a.pageBody=[a.myAccountForm],a.callParent(arguments)
},onPasswordSave:function(){var a,b=this,c=b.win.down("form").getForm(),d=c.getValues(),e=b.myAccountForm.getForm().getRecord().data.id;return d.nPassword!=d.vPassword?void app.msg(_("oops"),_("password_does_not_match"),!0):void(c.isValid()&&(a={id:e,old_password:d.oPassword,new_password:d.nPassword},User.updatePassword(a,function(a,c){c.result.success?(app.msg(_("sweet"),_("record_updated")),b.win.close()):app.msg(_("oops"),_(c.result.message),!0)})))},onPasswordChange:function(){this.win.show()},onCancel:function(){this.win.close()},onClose:function(){this.win.down("form").getForm().reset()},onSaveClick:function(){var a=this,b=a.myAccountForm.getForm(),c=b.getRecord(),d=b.getValues();c.set(d),c.save({callback:function(){app.msg(_("sweet"),_("record_update"))}})},onActive:function(a){var b=this,c=b.myAccountForm.getForm();this.store.load({callback:function(a){c.loadRecord(a[0])}}),a(!0)}}),Ext.define("App.view.patient.Patient",{extend:"Ext.panel.Panel",requires:["App.ux.AddTabButton","App.view.patient.InsuranceForm"],layout:{type:"vbox",align:"stretch"},xtype:"patientdeomgraphics",itemId:"PatientDemographicsPanel",newPatient:!0,pid:null,defaultPatientImage:"resources/images/patientPhotoPlaceholder.jpg",defaultQRCodeImage:"resources/images/QRCodeImage.png",initComponent:function(){var me=this;me.store=Ext.create("App.store.patient.Patient"),me.patientAlertsStore=Ext.create("App.store.patient.MeaningfulUseAlert"),me.patientContacsStore=Ext.create("App.store.patient.PatientContacts",{autoLoad:!1}),me.compactDemographics=eval(g("compact_demographics")),me.insTabPanel=Ext.widget("tabpanel",{itemId:"PatientInsurancesPanel",flex:1,defaults:{autoScroll:!0,padding:10},plugins:[{ptype:"AddTabButton",iconCls:"icoAdd",toolTip:_("new_insurance"),btnText:_("add_insurance"),forceText:!0,panelConfig:{xtype:"patientinsuranceform"}}],listeners:{scope:me,beforeadd:me.insurancePanelAdd}});var configs={items:[me.demoForm=Ext.widget("form",{action:"demoFormPanel",itemId:"PatientDemographicForm",type:"anchor",border:!1,autoScroll:!0,padding:me.compactDemographics?0:10,fieldDefaults:{labelAlign:"right",msgTarget:"side"}})]};me.compactDemographics&&configs.items.push(me.insTabPanel),configs.bbar=[{xtype:"button",action:"readOnly",text:_("possible_duplicates"),minWidth:75,itemId:"PatientPossibleDuplicatesBtn"},"-","->","-",{xtype:"button",action:"readOnly",text:_("save"),itemId:"PatientDemographicSaveBtn",minWidth:75,scope:me,handler:me.formSave},"-",{xtype:"button",text:_("cancel"),action:"readOnly",itemId:"PatientDemographicCancelBtn",minWidth:75,scope:me,handler:me.formCancel}],configs.listeners={scope:me,beforerender:me.beforePanelRender},Ext.apply(me,configs),me.callParent(arguments),me.compactDemographics||Ext.Function.defer(function(){me.insTabPanel.title=_("insurance"),me.insTabPanel.addDocked({xtype:"toolbar",dock:"bottom",items:["->","-",{xtype:"button",action:"readOnly",text:_("save"),minWidth:75,scope:me,handler:me.formSave},"-",{xtype:"button",text:_("cancel"),action:"readOnly",minWidth:75,scope:me,handler:me.formCancel}]}),me.up("tabpanel").insert(1,me.insTabPanel)},300)},beforePanelRender:function(){var a,b,c=this;c.getFormItems(c.demoForm,1,function(d){var e=c.demoForm.getForm(),f=e.findField("fname"),g=e.findField("mname"),h=e.findField("lname"),i=e.findField("sex"),j=e.findField("DOB");if(f&&(f.vtype="nonspecialcharacters"),g&&(g.vtype="nonspecialcharacters"),h&&(h.vtype="nonspecialcharacters"),j&&j.setMaxValue(new Date),c.newPatient){var k=App.app.getController("patient.Patient");f.on("blur",k.checkForPossibleDuplicates,k),h.on("blur",k.checkForPossibleDuplicates,k),i.on("blur",k.checkForPossibleDuplicates,k),j.dateField.on("blur",k.checkForPossibleDuplicates,k)}else a=d.query("[action=DemographicWhoFieldSet]")[0],a.insert(0,c.patientImages=Ext.create("Ext.panel.Panel",{action:"patientImage",layout:"hbox",style:"float:right",bodyPadding:5,height:160,width:255,items:[{xtype:"image",width:119,height:119,itemId:"image",margin:"0 5 0 0",src:c.defaultPatientImage},{xtype:"textareafield",name:"image",hidden:!0},{xtype:"image",itemId:"qrcode",width:119,height:119,margin:0,src:c.defaultQRCodeImage}],bbar:["-",{text:_("take_picture"),action:"onWebCam"},"-","->","-",{text:_("print_qrcode"),scope:c,handler:function(){window.printQRCode(app.patient.pid)}},"-"]})),b=Ext.ComponentQuery.query("#Demographics")[0],b.add(c.patientContacts=Ext.create("Ext.grid.Panel",{itemId:"PatientSummaryContactsPanel",bodyPadding:0,title:_("contacts"),store:c.patientContacsStore,columns:[{text:_("name"),dataIndex:"fullname",flex:1},{header:_("relationship"),dataIndex:"relationship_name"},{header:_("active"),dataIndex:"active",renderer:c.boolRenderer}],plugins:Ext.create("App.ux.grid.RowFormEditing",{autoCancel:!1,errorSummary:!1,clicksToEdit:2,items:[{xtype:"container",layout:"hbox",defaults:{margin:"5 10 0 0"},items:[{xtype:"container",layout:"vbox",defaults:{layout:"50%",margin:"5 10 0 0"},items:[{xtype:"fieldcontainer",layout:"hbox",fieldLabel:_("name"),defaults:{layout:"100%",xtype:"textfield"},items:[{name:"first_name",emptyText:_("first_name"),width:150,maxLength:100,allowBlank:!1},{name:"middle_name",emptyText:_("middle_name"),width:120,maxLength:100},{name:"last_name",emptyText:_("last_name"),width:150,maxLength:100}]},{xtype:"gaiaehr.listcombo",fieldLabel:_("relationship"),name:"relationship",displayField:"option_name",valueField:"option_value",width:350,loadStore:!0,queryMode:"local",list:134},{xtype:"fieldcontainer",layout:"hbox",fieldLabel:_("phone"),defaults:{xtype:"textfield",vtype:"numeric"},items:[{name:"phone_use_code",emptyText:_("code"),width:50,maxLength:4},{name:"phone_area_code",emptyText:_("area_code"),width:50,maxLength:4},{name:"phone_local_number",emptyText:_("local_number"),width:120,maxLength:7}]},{fieldLabel:_("address"),xtype:"textfield",name:"street_mailing_address",emptyText:_("street"),width:610,maxLength:200},{xtype:"fieldcontainer",layout:"hbox",fieldLabel:_("address_cont"),defaults:{xtype:"textfield"},items:[{name:"city",emptyText:_("city"),width:125,maxLength:70},{xtype:"gaiaehr.listcombo",name:"state",emptyText:_("state"),displayField:"option_name",valueField:"option_value",width:125,loadStore:!0,queryMode:"local",list:20},{xtype:"gaiaehr.listcombo",name:"country",emptyText:_("country"),displayField:"option_name",valueField:"option_value",width:125,loadStore:!0,queryMode:"local",list:3},{emptyText:_("zip"),name:"zip",width:125,maxLength:20}]}]},{xtype:"fieldcontainer",layout:"vbox",defaults:{layout:"50%",margin:"5 10 0 0"},items:[{xtype:"gaiaehr.listcombo",name:"publicity",fieldLabel:_("publicity"),emptyText:_("select"),displayField:"option_name",valueField:"option_value",width:400,loadStore:!0,queryMode:"local",list:132},{xtype:"checkboxfield",name:"active",fieldLabel:_("active")}]}]}]}),tbar:[{text:_("add_contact"),iconCls:"icoAdd",action:"patientContact",handler:c.onAddNewContact}]}))})},onAddNewContact:function(a){var b,c=a.up("grid"),d=c.store;b={created_date:new Date,pid:app.patient.pid,uid:app.user.id},c.plugins[0].cancelEdit(),d.insert(0,b),c.plugins[0].startEdit(0,0)},insurancePanelAdd:function(a,b){var c=this,d=b.insurance||Ext.create("App.model.patient.Insurance",{pid:c.pid});b.title=_("insurance")+" ("+(d.data.insurance_type?d.data.insurance_type:_("new"))+")",c.insuranceFormLoadRecord(b,d),""!==d.data.image&&b.down("image").setSrc(d.data.image)},insuranceFormLoadRecord:function(a,b){a.getForm().loadRecord(b),app.fireEvent("insurancerecordload",a,b)},getValidInsurances:function(){for(var a,b,c=this,d=c.insTabPanel.items.items,e=[],f=0;f<d.length;f++){if(a=d[f].getForm(),!a.isValid())return c.insTabPanel.setActiveTab(d[f]),!1;b=a.getRecord(),app.fireEvent("beforepatientinsuranceset",a,b),b.set(a.getValues()),app.fireEvent("afterpatientinsuranceset",a,b),e.push(b)}return e},getPatientImages:function(a){var b=this;b.patientImages&&b.patientImages.getComponent("image").setSrc(""!==a.data.image?a.data.image:b.defaultPatientImage),b.patientImages&&b.patientImages.getComponent("qrcode").setSrc(""!==a.data.qrcode?a.data.qrcode:b.defaultQRCodeImage)},getPatientContacts:function(a){var b=this;b.patientContacsStore.clearFilter(!0),b.patientContacsStore.load({params:{pid:a},filters:[{property:"pid",value:a}]})},verifyPatientRequiredInfo:function(){var a,b=this;b.patientAlertsStore.load({scope:b,params:{pid:b.pid},callback:function(c){for(var d=0;d<c.length;d++)a=b.demoForm.getForm().findField(c[d].data.name),c[d].data.val?a&&a.removeCls("x-field-yellow"):a&&a.addCls("x-field-yellow")}})},readOnlyFields:function(){},formSave:function(){var a=this,b=a.demoForm.getForm(),c=b.getRecord(),d=b.getValues(),e=a.getValidInsurances();b.isValid()&&e!==!1?(c.set(d),app.fireEvent("beforedemographicssave",c,a),c.save({scope:a,callback:function(c){app.setPatient(c.data.pid,null,null,function(){for(var d=c.insurance(),f=0;f<e.length;f++)0===e[f].data.id&&d.add(e[f]);d.sync(),a.newPatient?app.openPatientSummary():(a.getPatientImages(c),a.verifyPatientRequiredInfo(),a.readOnlyFields(b.getFields()))}),app.fireEvent("afterdemographicssave",c,a),a.msg(_("sweet"),_("record_saved")),app.AuditLog("Patient new record "+(a.newPatient?"created":"updated"))}})):a.msg(_("oops"),_("missing_required_data"),!0)},formCancel:function(a){var b=a.up("form").getForm(),c=b.getRecord();b.loadRecord(c)},loadNew:function(){var a=Ext.create("App.model.patient.Patient",{create_uid:app.user.id,update_uid:app.user.id,create_date:new Date,update_date:new Date,DOB:"0000-00-00 00:00:00"});app.AuditLog("Patient new record created"),this.demoForm.getForm().loadRecord(a)},loadPatient:function(a){var b=this,c=b.demoForm.getForm();b.pid=a,c.reset(),app.AuditLog("Patient record viewed"),b.getPatientContacts(a),app.patient.record.insurance().load({filters:[{property:"pid",value:app.patient.record.data.pid}],callback:function(a){c.loadRecord(app.patient.record),b.setReadOnly(app.patient.readOnly),b.setButtonsDisabled(b.query('button[action="readOnly"]')),b.verifyPatientRequiredInfo(),b.insTabPanel.removeAll(!0);for(var d=0;d<a.length;d++)b.insTabPanel.add(Ext.widget("patientinsuranceform",{closable:!1,insurance:a[d]}));0!==b.insTabPanel.items.length&&b.insTabPanel.setActiveTab(0)}})}}),Ext.define("App.view.patient.Summary",{extend:"App.ux.RenderPanel",pageTitle:_("patient_summary"),pageLayout:"border",requires:["Ext.XTemplate","Ext.ux.IFrame","App.view.patient.Documents","App.view.patient.CCD","App.ux.ManagedIframe","App.view.patient.Patient","App.view.patient.Reminders"],itemId:"PatientSummaryPanel",showRating:!0,pid:null,demographicsData:null,initComponent:function(){var b=this;b.stores=[],app.on("patientset",function(a){b.hidden||b.updateTitle(a.name+" - "+a.sexSymbol+" - "+a.age.str+" - ("+_("patient_summary")+")",app.patient.readOnly,null)},b),b.pageBody=[b.tabPanel=Ext.widget("tabpanel",{flex:1,margin:"3 0 0 0",bodyPadding:0,frame:!1,border:!1,plain:!0,region:"center",layout:"fit",itemId:"PatientSummaryTabPanel"})],b.sidePanelItems=[],a("access_patient_visits")&&(b.stores.push(b.patientEncountersStore=Ext.create("App.store.patient.Encounters",{autoLoad:!1})),Ext.Array.push(b.sidePanelItems,{xtype:"grid",title:_("encounters"),itemId:"PatientSummaryEncountersPanel",hideHeaders:!0,store:b.patientEncountersStore,columns:[{xtype:"datecolumn",width:80,dataIndex:"service_date",format:g("date_display_format")},{dataIndex:"brief_description",flex:1}]})),a("access_patient_medications")&&(b.stores.push(b.patientMedicationsStore=Ext.create("App.store.patient.Medications",{autoLoad:!1})),Ext.Array.push(b.sidePanelItems,{xtype:"grid",title:_("active_medications"),itemId:"PatientSummaryMedicationsPanel",hideHeaders:!0,store:b.patientMedicationsStore,tools:[{xtype:"button",text:_("details"),action:"medications",scope:b,handler:b.medicalWin}],columns:[{header:_("name"),dataIndex:"STR",flex:1},{text:_("alert"),width:55,dataIndex:"alert",renderer:b.boolRenderer}]})),a("access_patient_immunizations")&&(b.stores.push(b.immuCheckListStore=Ext.create("App.store.patient.ImmunizationCheck",{autoLoad:!1})),Ext.Array.push(b.sidePanelItems,{xtype:"grid",title:_("immunizations"),itemId:"PatientSummaryImmunizationPanel",hideHeaders:!0,store:b.immuCheckListStore,region:"center",tools:[{xtype:"button",text:_("details"),action:"immunization",scope:b,handler:b.medicalWin}],columns:[{header:_("name"),dataIndex:"vaccine_name",flex:1},{text:_("alert"),width:55,dataIndex:"alert",renderer:b.alertRenderer}]})),a("access_patient_allergies")&&(b.stores.push(b.patientAllergiesListStore=Ext.create("App.store.patient.Allergies",{autoLoad:!1})),Ext.Array.push(b.sidePanelItems,{xtype:"grid",title:_("allergies"),itemId:"PatientSummaryAllergiesPanel",hideHeaders:!0,store:b.patientAllergiesListStore,region:"center",tools:[{xtype:"button",text:_("details"),action:"allergies",scope:b,handler:b.medicalWin}],columns:[{header:_("name"),dataIndex:"allergy",flex:1},{text:_("alert"),width:55,dataIndex:"alert",renderer:b.boolRenderer}]})),a("access_active_problems")&&(b.stores.push(b.patientActiveProblemsStore=Ext.create("App.store.patient.PatientActiveProblems",{autoLoad:!1})),Ext.Array.push(b.sidePanelItems,{xtype:"grid",title:_("active_problems"),itemId:"PatientSummaryActiveProblemsPanel",hideHeaders:!0,store:b.patientActiveProblemsStore,tools:[{xtype:"button",text:_("details"),action:"issues",scope:b,handler:b.medicalWin}],columns:[{header:_("name"),dataIndex:"code_text",flex:1},{text:_("alert"),width:55,dataIndex:"alert",renderer:b.boolRenderer}]})),a("access_patient_calendar_events"),b.sidePanelItems.length>0&&(b.sidePanel=Ext.widget("panel",{width:250,bodyPadding:0,frame:!1,border:!1,bodyBorder:!0,region:"east",split:!0,layout:{type:"vbox",align:"stretch"},defaults:{margin:"5 5 0 5"},items:b.sidePanelItems}),Ext.Array.push(b.pageBody,b.sidePanel)),a("access_demographics")&&(b.demographics=b.tabPanel.add({xtype:"patientdeomgraphics",newPatient:!1,autoScroll:!0,title:_("demographics")})),a("access_patient_disclosures")&&b.tabPanel.add({xtype:"grid",title:_("disclosures"),itemId:"PatientSummaryDisclosuresPanel",bodyPadding:0,store:Ext.create("App.store.patient.Disclosures",{autoSync:!1,autoLoad:!1}),plugins:Ext.create("Ext.grid.plugin.RowEditing",{autoCancel:!1,errorSummary:!1,clicksToEdit:2}),columns:[{xtype:"datecolumn",format:"Y-m-d",text:_("date"),dataIndex:"date"},{header:_("type"),dataIndex:"type",editor:{xtype:"textfield"}},{text:_("description"),dataIndex:"description",flex:1,editor:{xtype:"textfield"}}],tbar:[{text:_("disclosure"),iconCls:"icoAdd",action:"disclosure",handler:b.onAddNew}]}),a("access_patient_notes")&&b.tabPanel.add({title:_("notes"),itemId:"PatientSummeryNotesPanel",xtype:"grid",bodyPadding:0,store:Ext.create("App.store.patient.Notes",{autoSync:!1,autoLoad:!1}),plugins:Ext.create("Ext.grid.plugin.RowEditing",{autoCancel:!1,errorSummary:!1,clicksToEdit:2}),columns:[{xtype:"datecolumn",text:_("date"),format:"Y-m-d",dataIndex:"date"},{header:_("type"),dataIndex:"type",editor:{xtype:"textfield"}},{text:_("note"),dataIndex:"body",flex:1,editor:{xtype:"textfield"}},{text:_("user"),width:225,dataIndex:"user_name"}],tbar:[{text:_("add_note"),iconCls:"icoAdd",action:"note",handler:b.onAddNew}]}),a("access_patient_reminders")&&b.tabPanel.add({itemId:"PatientSummaryRemindersPanel",xtype:"patientreminderspanel",bodyPadding:0}),a("access_patient_documents")&&b.tabPanel.add({xtype:"patientdocumentspanel",border:!1}),a("access_patient_preventive_care_alerts"),a("access_patient_ccd")&&(b.reportPanel=b.tabPanel.add({xtype:"patientccdpanel"})),b.callParent()},onAddNew:function(a){var b,c=a.up("grid"),d=c.store;"disclosure"==a.action?b={date:new Date,pid:app.patient.pid,active:1}:"note"==a.action&&(b={date:new Date,pid:app.patient.pid,uid:app.user.id,eid:app.patient.eid}),c.plugins[0].cancelEdit(),d.insert(0,b),c.plugins[0].startEdit(0,0)},medicalWin:function(a){app.onMedicalWin(a.action)},verifyPatientRequiredInfo:function(){var a,b=this,c=b.query('[action="demoFormPanel"]')[0];b.patientAlertsStore.load({scope:b,params:{pid:b.pid},callback:function(b){for(var d=0;d<b.length;d++)a=c.getForm().findField(b[d].data.name),b[d].data.val?a&&a.removeCls("x-field-yellow"):a&&a.addCls("x-field-yellow")}})},loadStores:function(){for(var a=this,b=0;b<a.stores.length;b++)a.stores[b].clearFilter(!0),a.stores[b].load({params:{pid:a.pid},filters:[{property:"pid",value:a.pid}]})},loadPatient:function(){var b=this;b.el.mask(_("loading...")),b.pid=app.patient.pid;var c=app.patient;b.updateTitle(c.name+" - "+c.sexSymbol+" - "+c.age.str+" - ("+_("patient_summary")+")",app.patient.readOnly,null),b.setReadOnly(app.patient.readOnly),b.setButtonsDisabled(b.query('button[action="readOnly"]')),a("access_demographics")&&b.demographics.loadPatient(b.pid),b.tabPanel.setActiveTab(0),b.loadStores(),b.el.unmask()},onActive:function(a){var b=this;b.checkIfCurrPatient()?(b.loadPatient(),"function"==typeof a&&a(!0)):(a(!1),b.pid=null,b.currPatientError())}}),Ext.define("App.controller.administration.Roles",{extend:"Ext.app.Controller",requires:["App.model.administration.AclGroupPerm"],refs:[{ref:"AdministrationRoleGroupCombo",selector:"#AdministrationRoleGroupCombo"},{ref:"AdministrationRoleGrid",selector:"#AdministrationRoleGrid"}],init:function(){this.control({"#AdministrationRolePanel":{render:this.onAdministrationRolePanelRender},"#AdministrationRoleGrid":{beforeedit:this.beforeCellEdit},"#AdministrationRoleGroupCombo":{select:this.doAdministrationRoleGridReconfigure},"button[action=adminAclAddRole]":{click:this.doAddRole},"button[action=adminAclSave]":{click:this.doSaveAcl},"button[action=adminAclCancel]":{click:this.doCancelAcl}})},onAdministrationRolePanelRender:function(){var a=this,b=a.getAdministrationRoleGroupCombo(),c=b.getStore();c.load({callback:function(c){b.select(c[0]),a.doAdministrationRoleGridReconfigure()}})},doSaveAcl:function(){var a=this,b=this.getAdministrationRoleGrid().getStore();b.getUpdatedRecords().length>0&&a.getAdministrationRoleGrid().el.mask(_("saving")),b.sync({callback:function(){app.msg(_("sweet"),_("record_saved")),a.getAdministrationRoleGrid().el.unmask()}})},doCancelAcl:function(){this.getAdministrationRoleGrid().getStore().rejectChanges()},beforeCellEdit:function(a,b){return"title"!=b.field},doAdministrationRoleGridReconfigure:function(){var a,b=this,c=b.getAdministrationRoleGroupCombo(),d=c.getValue(),e=b.getAdministrationRoleGrid(),f=[{name:"id",type:"int"},{name:"title",type:"string"},{name:"group_id",type:"int"},{name:"category",type:"string"}];e.view.el.mask("Loading"),ACL.getGroupPerms({group_id:d},function(c){a=c.columns,f=f.concat(c.fields),b.getModel("administration.AclGroupPerm").setFields(f);var d=Ext.create("Ext.data.Store",{model:"App.model.administration.AclGroupPerm",groupField:"category"});d.loadRawData(c.data);for(var g=0;g<a.length;g++)a[g].editor={xtype:"checkbox"},a[g].renderer=app.boolRenderer;a.push({flex:1}),e.reconfigure(d,a),e.view.el.unmask()})},doAddRole:function(){var a=this,b=Ext.create("App.model.administration.AclRoles",{group_id:a.getAdministrationRoleGroupCombo().getValue()});a.getRoleWindow().show(),a.roleWindow.down("form").getForm().loadRecord(b)},doSaveRole:function(){var a=this,b=a.roleWindow.down("form"),c=b.getForm(),d=c.getRecord(),e=c.getValues();c.isValid()&&(b.el.mask(_("be_right_back")),d.set(e),d.save({callback:function(){a.doAdministrationRoleGridReconfigure(),b.el.unmask(),a.roleWindow.close()}}))},doCancelRole:function(){this.roleWindow.close()},getRoleWindow:function(){var a=this;return a.roleWindow=Ext.widget("window",{title:_("new_role"),items:[{xtype:"form",border:!1,bodyPadding:10,items:[{xtype:"textfield",fieldLabel:_("role_name"),name:"role_name",allowBlank:!1},{xtype:"checkbox",fieldLabel:_("active"),name:"active"}]}],buttons:[{text:_("cancel"),cls:"cancelBtn",scope:a,handler:a.doCancelRole,action:"adminAclRoleCancel"},{text:_("save"),cls:"saveBtn",scope:a,handler:a.doSaveRole,action:"adminAclRoleSave"}]}),a.roleWindow}}),Ext.define("App.controller.DocumentViewer",{extend:"Ext.app.Controller",requires:["App.view.patient.windows.ArchiveDocument"],refs:[{ref:"DocumentViewerWindow",selector:"documentviewerwindow"},{ref:"DocumentViewerWindow",selector:"documentviewerwindow > form"},{ref:"ArchiveDocumentBtn",selector:"documentviewerwindow #archiveDocumentBtn"},{ref:"ArchiveWindow",selector:"patientarchivedocumentwindow"},{ref:"ArchiveForm",selector:"patientarchivedocumentwindow > form"}],init:function(){var a=this;a.control({documentviewerwindow:{close:a.onViewerDocumentsWinClose},"documentviewerwindow #archiveDocumentBtn":{click:a.onArchiveDocumentBtnClick},"patientarchivedocumentwindow #archiveBtn":{click:a.onArchiveBtnClick}})},onArchiveBtnClick:function(a){var b=a.up("window"),c=b.down("form").getForm(),d=c.getValues();c.isValid()&&(d.pid=app.patient.pid,d.eid=app.patient.eid,d.uid=app.user.id,DocumentHandler.transferTempDocument(d,function(a,c){c.result.success?(window.dual?dual.msg(_("sweet"),"document_transferred"):app.msg(_("sweet"),"document_transferred"),b.documentWindow.close(),b.close()):dual?dual.msg(_("oops"),"document_transfer_failed",!0):app.msg(_("oops"),"document_transfer_failed",!0)}))},onArchiveDocumentBtnClick:function(a){var b=a.up("window"),c={id:b.documentId,docType:b.documentType,title:b.documentType+" "+_("order")},d=Ext.widget("patientarchivedocumentwindow",{documentWindow:b});d.down("form").getForm().setValues(c)},onViewerDocumentsWinClose:function(a){DocumentHandler.destroyTempDocument({id:a.documentId})},doDocumentView:function(a,b,c){var d,e=Ext.ComponentQuery.query("documentviewerwindow"),f="dataProvider/DocumentViewer.php?site="+(c||app.user.site)+"&id="+a+"&token="+app.user.token;if("undefined"!=typeof b&&(f+="&temp="+b),d=Ext.create("App.view.patient.windows.DocumentViewer",{documentType:b,documentId:a,items:[{xtype:"miframe",autoMask:!1,src:f}]}),e.length>0){for(var g=e[e.length-1],h=0;h<e.length;h++)e[h].toFront();d.showAt(g.x+25,g.y+5)}else d.show()}}),Ext.define("App.controller.Scanner",{extend:"Ext.app.Controller",requires:["App.view.scanner.Window"],refs:[{ref:"ScannerWindow",selector:"#ScannerWindow"},{ref:"ScannerImage",selector:"#ScannerImage"},{ref:"ScannerCombo",selector:"#ScannerCombo"},{ref:"ScannerScanBtn",selector:"#ScannerScanBtn"},{ref:"ScannerOkBtn",selector:"#ScannerOkBtn"}],ws:null,connected:!1,init:function(){var a=this;a.control({viewport:{afterrender:a.doWebSocketConnect},"#ScannerWindow":{show:a.onScannerWindowShow,close:a.onScannerWindowClose},"#ScannerScanBtn":{click:a.onScannerScanBtnClick},"#ScannerImageEditBtn":{toggle:a.onScannerImageEditBtnClick},"#ScannerOkBtn":{click:a.onScannerOkBtnClick}})},onScannerScanBtnClick:function(){this.doScan()},doLoadScannersCombo:function(a){var b,c=this.getScannerCombo(),d=c.getStore();d.loadData(a),b=d.findRecord("Checked","true"),b&&c.select(b)},doLoadScannedDocument:function(a){var b=this,c=b.getScannerImage();c.setSrc("data:image/png;base64,"+a),b.getScannerWindow().body.el.unmask(),b.getScannerWindow().doComponentLayout(),b.getScannerWindow().down("toolbar").enable()},getSources:function(){var a=this;a.ws.send("getSources")},onScannerWindowShow:function(){},onScannerWindowClose:function(){},doWebSocketConnect:function(){var me=this;me.connected||(me.ws=new WebSocket("wss://localhost:8443/TwainService"),me.ws.onopen=function(){me.conencted=!0,me.getScanWindow(),me.getSources(),app.fireEvent("scanconnected",this)},me.ws.onerror=function(){app.msg(_("oops"),_("no_scanner_service_found"),!0)},me.ws.onmessage=function(evt){var response=eval("("+evt.data+")");"getSources"==response.action?me.doLoadScannersCombo(response.data):"getDocument"==response.action&&me.doLoadScannedDocument(response.data)},me.ws.onclose=function(){me.conencted=!1,app.fireEvent("scandisconnected",this)})},onScannerImageEditBtnClick:function(a,b){b?(this.dkrm=new Darkroom("#ScannerImage",{save:!1,replaceDom:!1}),a.setText(_("editing"))):(this.dkrm.selfDestroy(),delete this.dkrm,a.setText(_("edit"))),this.getScannerScanBtn().setDisabled(b),this.getScannerOkBtn().setDisabled(b)},getDocument:function(){return this.getScannerImage().imgEl.dom.src},doScan:function(){var a=this,b=this.getScannerCombo();a.getScannerWindow().down("toolbar").disable(),a.getScannerWindow().body.el.mask(_("scanning_document")),a.ws.send("getDocument:"+b.getValue())},onScannerOkBtnClick:function(){app.fireEvent("scancompleted",this,this.getDocument()),this.getScannerWindow().close()},getScanWindow:function(){return this.getScannerWindow()||Ext.create("App.view.scanner.Window"),this.getScannerWindow()},initScan:function(){this.getScanWindow(),this.getScannerWindow().show()}}),Ext.define("App.controller.Notification",{extend:"Ext.app.Controller",requires:["App.view.notifications.Grid"],refs:[{ref:"UserSplitButton",selector:"#userSplitButton"},{ref:"NotificationsGrid",selector:"notificationsgrid"}],init:function(){var a=this;a.control({viewport:{beforerender:a.onViewportBeforeRender},"#userSplitButton":{badgeclick:a.onUserSplitButtonBadgeClick},notificationsgrid:{itemclick:a.onNotificationsGridItemClick},"notificationsgrid > header":{click:a.onNotificationsGridHeaderClick}}),a.store=Ext.create("Ext.data.Store",{fields:[{name:"id",type:"string"},{name:"description",type:"string"},{name:"data",type:"auto"},{name:"controller",type:"string"},{name:"method",type:"string"}]}),a.store.on("add",a.onNotificationAdd,a),a.store.on("remove",a.onNotificationRemove,a)},onNotificationAdd:function(a){this.setBadgeText(a.count())},onNotificationRemove:function(a){this.setBadgeText(a.count())},onNotificationsGridItemClick:function(a,b){var c=this,d=App.app.getController(b.data.controller),e=b.data.method,f=b.data.data;"object"==typeof d&&"function"==typeof d[e]?f?d[e](f,function(a){a&&c.store.remove(b),c.doHideNotifications()}):d[e](function(a){a&&c.store.remove(b),c.doHideNotifications()}):(c.store.remove(b),c.doHideNotifications(),app.msg(_("oops"),_("notification_handler_error"),!0))},onNotificationsGridHeaderClick:function(){this.doHideNotifications()},onUserSplitButtonBadgeClick:function(){this.doShowNotifications()},onViewportBeforeRender:function(a){var b=this;b.grid=a.add(Ext.widget("notificationsgrid",{floatable:!0,floating:!0,store:b.store}))},setBadgeText:function(a){this.getUserSplitButton().setBadgeText(a)},getBadgeText:function(){this.getUserSplitButton().getBadgeText()},doHideNotifications:function(){this.getNotificationsGrid().collapse(Ext.Component.DIRECTION_TOP,!0),this.getNotificationsGrid().hide(),Ext.getBody().un("click",this.doHideNotifications,this)},doShowNotifications:function(){this.grid.showBy(this.getUserSplitButton(),"tr-br",[-1,4]),this.grid.expand(!0),this.grid.toFront(),Ext.getBody().on("click",this.doHideNotifications,this)},add:function(a,b,c,d,e){var f;return this.store.getById(a)?(f=this.store.getById(a),f.set({description:b,data:c,controller:d,method:e}),f.commit(),f):(f=this.store.add({id:a,description:b,data:c,controller:d,method:e})[0],app.msg(_("new_notification"),b,"yellow"),f)},remove:function(a){this.store.getById(a)&&this.store.remove(this.store.getById(a))},testNotification:function(a,b){"function"==typeof b&&b(!0)}}),Ext.define("App.controller.patient.Documents",{extend:"Ext.app.Controller",requires:["App.view.patient.windows.UploadDocument"],refs:[{ref:"PatientDocumentPanel",selector:"patientdocumentspanel"},{ref:"PatientDocumentGrid",selector:"patientdocumentspanel #patientDocumentGrid"},{ref:"PatientDocumentViewerFrame",selector:"patientdocumentspanel #patientDocumentViewerFrame"},{ref:"PatientDocumentUploadWindow",selector:"#patientDocumentUploadWindow"},{ref:"PatientDocumentUploadScanBtn",selector:"#patientDocumentUploadWindow #scanBtn"},{ref:"PatientDocumentUploadFileUploadField",selector:"#patientDocumentUploadWindow #fileUploadField"},{ref:"DocumentHashCheckBtn",selector:"#documentHashCheckBtn"},{ref:"DocumentHashCheckBtn",selector:"#documentHashCheckBtn"},{ref:"AddDocumentBtn",selector:"patientdocumentspanel #addDocumentBtn"},{ref:"DocumentUploadBtn",selector:"patientdocumentspanel #documentUploadBtn"},{ref:"PatientDocumentErrorNoteWindow",selector:"patientdocumenterrornotewindow"}],scannedDocument:null,init:function(){var a=this;a.control({viewport:{scanconnected:a.onScanConnected,scandisconnected:a.onScanDisconnected,documentedit:a.onDocumentEdit},patientdocumentspanel:{activate:a.onPatientDocumentPanelActive,beforerender:a.onPatientDocumentBeforeRender},"patientdocumentspanel #patientDocumentGrid":{selectionchange:a.onPatientDocumentGridSelectionChange},"patientdocumentspanel [toggleGroup=documentgridgroup]":{toggle:a.onDocumentGroupBtnToggle},"patientdocumentspanel #documentGroupBtn":{toggle:a.onDocumentGroupBtnToggle},"patientdocumentspanel #documentUploadBtn":{click:a.onDocumentUploadBtnClick},"#patientDocumentUploadWindow":{show:a.onPatientDocumentUploadWindowShow},"#patientDocumentUploadWindow #uploadBtn":{click:a.onDocumentUploadSaveBtnClick},"#patientDocumentUploadWindow #scanBtn":{click:a.onDocumentUploadScanBtnClick},"#DocumentErrorNoteSaveBtn":{click:a.onDocumentErrorNoteSaveBtnClick}}),a.nav=this.getController("Navigation")},setDocumentInError:function(a){var b=this;Ext.Msg.show({title:_("wait"),msg:_("document_entered_in_error_message"),buttons:Ext.Msg.YESNO,icon:Ext.Msg.QUESTION,fn:function(c){if("yes"==c){var d=b.showPatientDocumentErrorNoteWindow();d.down("form").getForm().loadRecord(a)}}})},onDocumentErrorNoteSaveBtnClick:function(){var a=this,b=a.getPatientDocumentErrorNoteWindow(),c=b.down("form").getForm(),d=c.getValues(),e=c.getRecord(),f=e.site?e.site:null;c.isValid()&&(d.entered_in_error=!0,d.site=f,e.set(d),e.save({success:function(){b.close(),e.set({groupDate:""}),e.commit()}}))},showPatientDocumentErrorNoteWindow:function(){return this.getPatientDocumentErrorNoteWindow()||Ext.create("App.view.patient.windows.DocumentErrorNote"),this.getPatientDocumentErrorNoteWindow().show()},onPatientDocumentBeforeRender:function(){this.setViewerSite(app.user.site)},onDocumentEdit:function(a){var b=this.getPatientDocumentGrid().getStore(),c=b.getById(a.save.id);if(c){var d=a.save.document.split(",");c.set({document:d[1]||d[0]}),c.save({success:function(){window.dual?dual.msg("sweet",_("record_saved")):app.msg("sweet",_("record_saved"))},failure:function(){window.dual?dual.msg("oops",_("record_error"),!0):app.msg("oops",_("record_error"),!0)}})}},onScanConnected:function(){this.getPatientDocumentUploadScanBtn()&&this.getPatientDocumentUploadScanBtn().show()},onScanDisconnected:function(){this.getPatientDocumentUploadScanBtn()&&this.getPatientDocumentUploadScanBtn().hide()},onPatientDocumentUploadWindowShow:function(){this.scannedDocument=null,this.getPatientDocumentUploadFileUploadField().enable(),this.getPatientDocumentUploadScanBtn().setVisible(this.getController("Scanner").conencted)},onPatientDocumentGridSelectionChange:function(a,b){var c=a.view.panel.up("panel").query("#patientDocumentViewerFrame")[0];c.setSrc(b.length>0?"dataProvider/DocumentViewer.php?site="+this.site+"&token="+app.user.token+"&id="+b[0].data.id:"dataProvider/DocumentViewer.php?site="+this.site+"&token="+app.user.token)},onPatientDocumentPanelActive:function(a){var b=this,c=a.down("grid"),d=c.getStore(),e=b.nav.getExtraParams();b.activePAnel=a,e&&e.document&&d.on("load",b.doSelectDocument,b),d.clearFilter(!0),d.filter([{property:"pid",value:app.patient.pid}])},doSelectDocument:function(a){var b=this,c=b.activePAnel.down("grid"),d=b.nav.getExtraParams(),e=a.getById(d.document);e?c.getSelectionModel().select(e):app.msg(_("oops"),_("unable_to_find_document"),!0),a.un("load",b.doSelectDocument,b)},onDocumentGroupBtnToggle:function(a,b){var c=a.up("grid");b?(c.getStore().group(a.action),c.query("#"+a.action)[0].hide(),a.disable()):(c.query("#"+a.action)[0].show(),a.enable())},onDocumentUploadBtnClick:function(){this.setDocumentUploadWindow("click")},setDocumentUploadWindow:function(a){var b=this.getNewPatientDocumentRecord(),c=this.getUploadWindow(a);return c.down("form").getForm().loadRecord(b),c
},getNewPatientDocumentRecord:function(){return Ext.create("App.model.patient.PatientDocuments",{pid:app.patient.pid,eid:app.patient.eid,uid:app.user.id,date:new Date})},getGroupName:function(a,b){var c=a.groupers.items[0].property;return"docTypeCode"==c?Ext.String.capitalize(b.get("docTypeCode")+" - "+b.get("docType")):"groupDate"==c?Ext.Date.format(b.get(c),g("date_display_format")):Ext.String.capitalize(b.get(c))},onDocumentHashCheckBtnClick:function(a,b){var c,d,e=a.getStore().getAt(b);DocumentHandler.checkDocHash(e.data,function(a,b){c=b.result.success,d="<b>"+_(c?"hash_validation_passed":"hash_validation_failed")+"</b><br>"+Ext.String.htmlDecode(b.result.msg),window.dual?dual.msg(_(c?"sweet":"oops"),d,!c):app.msg(_(c?"sweet":"oops"),d,!c)})},getUploadWindow:function(a){return Ext.widget("patientuploaddocumentwindow",{action:a,itemId:"patientDocumentUploadWindow"})},onDocumentUploadSaveBtnClick:function(){var a=this,b=a.getPatientDocumentUploadWindow(),c=b.down("form").getForm(),d=c.getRecord(),e=c.getValues(),f=new FileReader,g=c.findField("document");if(c.isValid())if(d.set(e),"click"==b.action){var h=g.getValue();d.set({name:h}),a.scannedDocument?(d.set({document:a.scannedDocument}),a.doNewDocumentRecordSave(d)):(f.onload=function(b){d.set({document:b.target.result}),a.doNewDocumentRecordSave(d)},f.readAsDataURL(g.extractFileInput().files[0]))}else a.doNewDocumentRecordSave(d)},onDocumentUploadScanBtnClick:function(){var a=this,b=this.getController("Scanner");b.initScan(),app.on("scancompleted",this.onScanCompleted,a)},onScanCompleted:function(a,b){var c=this,d=c.getPatientDocumentUploadWindow(),e=d.down("form").getForm(),f=e.findField("document");f.disable(),c.scannedDocument=b,app.un("scancompleted",this.onScanCompleted,c)},doNewDocumentRecordSave:function(a){var b=this,c=b.getPatientDocumentGrid().getStore(),d=c.indexOf(a);-1==d&&c.add(a),c.sync({success:function(){app.msg(_("sweet"),_("document_added")),b.getPatientDocumentUploadWindow().close(),b.getPatientDocumentGrid().getSelectionModel().select(a)},failure:function(){c.rejectChanges(),window.dual?dual.msg(_("oops"),_("document_error"),!0):app.msg(_("oops"),_("document_error"),!0)}})},initDocumentDnD:function(){var a=this;a.dnding=!1,document.ondragenter=function(b){return b.preventDefault(),a.dnding||a.setDropMask(),!1},document.ondragover=function(a){return a.preventDefault(),!1},document.ondrop=function(b){return b.preventDefault(),a.unSetDropMask(),!a.dropMask||b.target!=a.dropMask.maskEl.dom&&b.target!=a.dropMask.msgEl.dom||a.dropHandler(b.dataTransfer.files),!1},document.ondragleave=function(b){return"body"==b.target.localName&&a.unSetDropMask(),b.preventDefault(),!1}},setDropMask:function(){var a=this,b=a.getPatientDocumentViewerFrame();a.dnding=!0,b&&b.rendered&&(a.dropMask?a.dropMask.show():(a.dropMask=new Ext.LoadMask(a.getPatientDocumentViewerFrame(),{msg:_("drop_here"),cls:"uploadmask",maskCls:"x-mask uploadmask",shadow:!1}),a.dropMask.show(),a.dropMask.maskEl.dom.addEventListener("dragenter",function(a){return a.preventDefault(),a.target.classList.add("validdrop"),!1}),a.dropMask.maskEl.dom.addEventListener("dragleave",function(a){return a.preventDefault(),a.target.classList.remove("validdrop"),!1})))},unSetDropMask:function(){this.dnding=!1,this.dropMask&&this.dropMask.hide()},dropHandler:function(a){var b=this,c=b.setDocumentUploadWindow("drop"),d=c.down("form").getForm(),e=d.getRecord(),f=new FileReader,g=d.findField("document");g.hide(),g.disable(),f.onload=function(b){e.set({document:b.target.result,name:a[0].name})},f.readAsDataURL(a[0])},setViewerSite:function(a){this.site=a}}),Ext.define("App.controller.patient.LabOrders",{extend:"Ext.app.Controller",requires:["App.view.patient.windows.UploadDocument"],refs:[{ref:"LabOrdersGrid",selector:"patientlaborderspanel"},{ref:"ElectronicLabOrderBtn",selector:"patientlaborderspanel #electronicLabOrderBtn"},{ref:"NewLabOrderBtn",selector:"patientlaborderspanel #newLabOrderBtn"},{ref:"PrintLabOrderBtn",selector:"patientlaborderspanel #printLabOrderBtn"}],init:function(){var a=this;a.control({patientlaborderspanel:{activate:a.onLabOrdersGridActive,selectionchange:a.onLabOrdersGridSelectionChange,beforerender:a.onLabOrdersGridBeforeRender},"#rxLabOrderLabsLiveSearch":{select:a.onLoincSearchSelect},"patientlaborderspanel #electronicLabOrderBtn":{click:a.onElectronicLabOrderBtnClick},"patientlaborderspanel #newLabOrderBtn":{click:a.onNewLabOrderBtnClick},"patientlaborderspanel #printLabOrderBtn":{click:a.onPrintLabOrderBtnClick}})},onLabOrdersGridBeforeRender:function(a){app.on("patientunset",function(){a.editingPlugin.cancelEdit(),a.getStore().removeAll()})},onLabOrdersGridSelectionChange:function(a,b){this.getPrintLabOrderBtn().setDisabled(0===b.length)},onLoincSearchSelect:function(a,b){var c=a.up("form").getForm();c.getRecord().set({code:b[0].data.loinc_number}),c.findField("code")&&c.findField("code").setValue(b[0].data.loinc_number),c.findField("note")&&c.findField("note").focus(!1,200)},onElectronicLabOrderBtnClick:function(){},onNewLabOrderBtnClick:function(){var a=this,b=a.getLabOrdersGrid(),c=b.getStore();b.editingPlugin.cancelEdit(),c.insert(0,{pid:app.patient.pid,eid:app.patient.eid,uid:app.user.id,date_ordered:new Date,order_type:"lab",status:"Pending",priority:"Normal"}),b.editingPlugin.startEdit(0,0)},onPrintLabOrderBtnClick:function(a){var b,c,d=this,e=d.getLabOrdersGrid(),f=Ext.isArray(a)?a:e.getSelectionModel().getSelection(),g={};for(g.pid=app.patient.pid,g.eid=app.patient.eid,g.orderItems=[],g.docType="Lab",g.templateId=4,g.orderItems.push(["Description","Notes"]),c=0;c<f.length;c++)b=f[c].data,g.orderItems.push([b.description+" ["+b.code_type+":"+b.code+"]",b.note]);DocumentHandler.createTempDocument(g,function(a,b){window.dual?dual.onDocumentView(b.result.id,"Lab"):app.onDocumentView(b.result.id,"Lab")})},onLabOrdersGridActive:function(a){var b=a.getStore();a.editingPlugin.editing||(b.clearFilter(!0),b.filter([{property:"pid",value:app.patient.pid},{property:"order_type",value:"lab"}]))},labOrdersGridStatusColumnRenderer:function(a){var b="black";switch(a){case"Canceled":b="red";break;case"Pending":b="orange";break;case"Routed":b="blue";break;case"Complete":b="green";break;default:b=""}return'<div style="color:'+b+'">'+a+"</div>"},doAddOrderByTemplate:function(a){var b=this,c=b.getLabOrdersGrid(),d=c.getStore();a.pid=app.patient.pid,a.eid=app.patient.eid,a.uid=app.user.id,a.date_ordered=new Date,a.order_type="lab",a.status="Pending",a.priority="Normal",d.add(a),d.sync({success:function(){app.msg(_("sweet"),a.description+" "+_("added"))}})}}),Ext.define("App.controller.patient.Results",{extend:"Ext.app.Controller",requires:["App.view.administration.HL7MessageViewer"],refs:[{ref:"resultsPanel",selector:"patientresultspanel"},{ref:"resultForm",selector:"patientresultspanel #OrderResultForm"},{ref:"observationsGrid",selector:"patientresultspanel #observationsGrid"},{ref:"ordersGrid",selector:"patientresultspanel > grid[action=orders]"},{ref:"uploadField",selector:"filefield[action=orderresultuploadfield]"},{ref:"messageField",selector:"hl7messageviewer > textareafield[action=message]"},{ref:"acknowledgeField",selector:"hl7messageviewer > textareafield[action=acknowledge]"},{ref:"OrderResultSignBtn",selector:"#OrderResultSignBtn"},{ref:"DocumentTypeCard",selector:"patientresultspanel > #documentTypeCard"},{ref:"LaboratoryResultPanel",selector:"#laboratoryResultPanel"},{ref:"LaboratoryResultForm",selector:"#laboratoryResultForm"},{ref:"NewOrderResultBtn",selector:"#NewOrderResultBtn"}],init:function(){var a=this;a.control({patientresultspanel:{activate:a.onResultPanelActive},"patientresultspanel > grid[action=orders]":{selectionchange:a.onOrderSelectionChange,edit:a.onOrderSelectionEdit},"filefield[action=orderresultuploadfield]":{change:a.onOrderDocumentChange},"button[action=orderResultResetBtn]":{click:a.onResetOrderResultClicked},"button[action=orderResultSaveBtn]":{click:a.onSaveOrderResultClicked},"button[action=orderDocumentViewBtn]":{click:a.onOrderDocumentViewBtnClicked},"#NewOrderResultBtn":{click:a.onNewOrderResultBtnClick},"#OrderResultSignBtn":{click:a.onOrderResultSignBtnClick},"#orderTypeCombo":{change:a.onOrderTypeSelect},"#resultRowEditor":{beforeedit:a.onOrderResultGridRowEdit}})},onOrderResultSignBtnClick:function(){var a,b=this;app.passwordVerificationWin(function(c,d){"ok"==c&&User.verifyUserPass(d,function(c){c?(a=b.getLaboratoryResultForm().getRecord(),a.set({signed_uid:app.user.id}),a.save({success:function(){app.msg(_("sweet"),_("result_signed"))},failure:function(){app.msg(_("sweet"),_("record_error"),!0)}})):b.onOrderResultSignBtnClick()})})},onOrderSelectionEdit:function(a,b){this.getOrderResult(b.record)},onNewOrderResultBtnClick:function(a){var b,c,d=a.up("grid"),e=d.getStore();d.editingPlugin.cancelEdit(),b=e.add({pid:app.patient.pid,uid:app.user.id,order_type:"lab",status:"Pending"}),d.getPlugin("resultRowEditor").startEdit(b[0],0),c=d.getPlugin("resultRowEditor").getEditor(),c.items.items[2].focus(),c.items.items[1].setValue("lab"),d.columns[3].setEditor({xtype:"labslivetsearch",itemId:"labOrderLiveSearch",allowBlank:!1,flex:1})},onOrderResultGridRowEdit:function(){},onOrderTypeSelect:function(a,b){var c=a.up("grid");"lab"===b&&(this.getDocumentTypeCard().getLayout().setActiveItem("laboratoryResultPanel"),c.columns[3].setEditor({xtype:"labslivetsearch",itemId:"labOrderLiveSearch",allowBlank:!1,flex:1,value:""}),this.getNewOrderResultBtn().disable(!1)),"rad"===b&&(this.getDocumentTypeCard().getLayout().setActiveItem("radiologyResultPanel"),c.columns[3].setEditor({xtype:"radslivetsearch",itemId:"radsOrderLiveSearch",allowBlank:!1,flex:1,value:""}),this.getNewOrderResultBtn().disable(!1))},onResultPanelActive:function(){this.setResultPanel()},setResultPanel:function(){var a=this,b=a.getOrdersGrid().getStore();app.patient?(b.clearFilter(!0),b.filter([{property:"pid",value:app.patient.pid}])):(b.clearFilter(!0),b.load())},onOrderSelectionChange:function(a,b){this.getDocumentTypeCard().isVisible()||this.getDocumentTypeCard().setVisible(!0),b[0]&&("lab"===b[0].data.order_type&&this.getDocumentTypeCard().getLayout().setActiveItem("laboratoryResultPanel"),"rad"===b[0].data.order_type&&this.getDocumentTypeCard().getLayout().setActiveItem("radiologyResultPanel"),b.length>0?this.getOrderResult(b[0]):this.resetOrderResultForm())},getOrderResult:function(a){var b,c,d,e=this,f=e.getLaboratoryResultForm(),g=a.results(),h=e.getObservationsGrid();h.editingPlugin.cancelEdit(),g.load({callback:function(i){i.length>0?(f.loadRecord(i[0]),e.getOrderResultSignBtn().setDisabled(i[0].data.signed_uid>0),b=i[0].observations(),h.reconfigure(b),b.load()):(c=g.add({pid:a.data.pid,code:a.data.code,code_text:a.data.description,code_type:a.data.code_type,ordered_uid:a.data.uid,create_date:new Date}),f.loadRecord(c[0]),e.getOrderResultSignBtn().setDisabled(!0),b=c[0].observations(),h.reconfigure(b),b.load({params:{loinc:a.data.code},callback:function(a){for(d=0;d<a.length;d++)a[d].phantom=!0}}))}})},onResetOrderResultClicked:function(){this.resetOrderResultForm()},resetOrderResultForm:function(){var a=this,b=a.getLaboratoryResultForm(),c=a.getObservationsGrid(),d=Ext.create("App.store.patient.PatientsOrderObservations");b.reset(),c.editingPlugin.cancelEdit(),c.reconfigure(d)},onSaveOrderResultClicked:function(){var a=this,b=a.getLaboratoryResultForm(),c=b.getValues(),d=a.getUploadField().getEl().down("input[type=file]").dom.files,e=new FileReader;return b.isValid()?void(d.length>0?(e.onload=function(){return function(d){var e=a.getOrdersGrid().getSelectionModel(),f=e.getSelection(),g={pid:f[0].data.pid,eid:f[0].data.eid,uid:app.user.id,docType:"lab",title:"Lab #"+c.lab_order_id+" Result",document:d.target.result};File.savePatientBase64Document(g,function(d,e){e.result.success?(c.documentId="doc|"+e.result.id,a.saveOrderResult(b,c)):app.msg(_("oops"),e.result.error)})}}(d[0]),e.readAsDataURL(d[0])):a.saveOrderResult(b,c)):void app.msg(_("oops"),_("required_fields_missing"),!0)},saveOrderResult:function(a,b){var c=this,d=a.getRecord(),e=c.getOrdersGrid().getSelectionModel(),f=e.getSelection(),g=d.observations(),h=g.data.items;d.set(b),d.save({success:function(a){for(var b=0;b<h.length;b++)h[b].set({result_id:a.data.id});g.sync({callback:function(){}}),f[0].set({status:"Received"}),f[0].save(),app.msg(_("sweet"),_("record_saved"))}})},onOrderDocumentViewBtnClicked:function(){var a,b=this,c=b.getLaboratoryResultForm(),d=c.getRecord(),e=d.data.documentId.split("|"),f=null,g=null;e[0]&&(f=e[0]),e[1]&&(g=e[1]),f&&g?"hl7"==f?(a=Ext.widget("hl7messageviewer").show(),a.body.mask(_("loading...")),HL7Messages.getMessageById(g,function(c,d){b.getMessageField().setValue(d.result.message),b.getAcknowledgeField().setValue(d.result.response),a.body.unmask()})):"doc"==f&&app.onDocumentView(g):app.msg(_("oops"),_("no_document_found"),!0)},onOrderDocumentChange:function(){}}),Ext.define("App.controller.patient.encounter.Encounter",{extend:"Ext.app.Controller",requires:["App.ux.combo.ActiveSpecialties"],refs:[{ref:"EncounterPanel",selector:"#encounterPanel"},{ref:"EncounterDetailWindow",selector:"#EncounterDetailWindow"},{ref:"EncounterProviderCmb",selector:"#EncounterProviderCmb"},{ref:"EncounterSpecialtyCmb",selector:"#EncounterSpecialtyCmb"},{ref:"EncounterDetailForm",selector:"#EncounterDetailForm"}],init:function(){var a=this;this.control({viewport:{patientunset:a.onPatientUnset},"#EncounterDetailWindow":{show:a.onEncounterDetailWindowShow},"#EncounterProviderCmb":{beforerender:a.onEncounterProviderCmbBeforeRender,select:a.onEncounterProviderCmbSelect}})},onPatientUnset:function(){this.getEncounterPanel()&&(this.getEncounterPanel().encounter=null)},getEncounterRecord:function(){return this.getEncounterPanel()?this.getEncounterPanel().encounter:null},onEncounterProviderCmbBeforeRender:function(a){var b=a.up("container");b.setFieldLabel(""),b.insert(b.items.indexOf(a)+1,{xtype:"activespecialtiescombo",itemId:"EncounterSpecialtyCmb",fieldLabel:_("specialty"),labelWidth:a.labelWidth,width:a.width,name:"specialty_id",allowBlank:!1})},onEncounterProviderCmbSelect:function(a,b){var c=this;User.getUser(b[0].data.option_value,function(a){c.setSpecialtyCombo(a)})},onEncounterDetailWindowShow:function(){var a=this,b=a.getEncounterDetailForm().getForm().getRecord();0===b.data.provider_uid?a.getEncounterSpecialtyCmb()&&a.getEncounterSpecialtyCmb().setVisible(!1):User.getUser(b.data.provider_uid,function(c){a.setSpecialtyCombo(c,b.data.specialty_id)})},setSpecialtyCombo:function(a,b){var c=this.reloadSpecialityCmbBySpecialty(a.specialty,b);this.getEncounterSpecialtyCmb().setVisible(c),this.getEncounterSpecialtyCmb().setDisabled(!c)},reloadSpecialityCmbBySpecialty:function(specialties,specialty){var me=this,show=!1;if(me.getEncounterSpecialtyCmb().setValue(Ext.isNumeric(specialty)&&specialty>0?eval(specialty):Ext.isArray(specialties)&&1==specialties.length?eval(specialties[0]):null),Ext.isArray(specialties)){for(var store=this.getEncounterSpecialtyCmb().getStore(),filters=[],show=!0,i=0;i<specialties.length;i++)Ext.Array.push(filters,specialties[i]);store.clearFilter(!0),store.filter([{property:"active",value:!0},{property:"id",value:new RegExp(filters.join("|"))}])}return show}}),Ext.define("App.controller.patient.encounter.Snippets",{extend:"Ext.app.Controller",requires:["App.view.patient.encounter.Snippets"],refs:[{ref:"SnippetsTreePanel",selector:"#SnippetsTreePanel"},{ref:"SnippetWindow",selector:"#SnippetWindow"},{ref:"SnippetForm",selector:"#SnippetForm"},{ref:"SnippetFormTextField",selector:"#SnippetFormTextField"},{ref:"SnippetCancelBtn",selector:"#SnippetCancelBtn"},{ref:"SnippetSaveBtn",selector:"#SnippetSaveBtn"},{ref:"SoapTemplateSpecialtiesCombo",selector:"#SoapTemplateSpecialtiesCombo"}],init:function(){var a=this;this.control({"#SnippetSaveBtn":{click:a.onSnippetSaveBtnClick},"#SnippetCancelBtn":{click:a.onSnippetCancelBtnClick},"#SnippetCategoryAddBtn":{click:a.onSnippetCategoryAddBtnClick}})},onSnippetAddBtnClick:function(a,b,c,d,e,f){var g=this,h=g.getSnippetEditWindow(),i=g.getSnippetForm(),j=Ext.create("App.model.patient.encounter.snippetTree",{parentId:f.data.id,specialty_id:g.getSoapTemplateSpecialtiesCombo().getValue(),leaf:!0});h.parentRecord=f,i.getForm().loadRecord(j)},onSnippetSaveBtnClick:function(){var a=this,b=a.getSnippetWindow(),c=a.getSnippetForm().getForm(),d=c.getValues(),e=c.getRecord(),f=""===e.data.id||0===e.data.id;c.isValid()&&(e.set(d),f&&b.parentRecord.appendChild(e),e.save({success:function(a,b){a.set({id:b.response.result.id}),a.commit(),app.msg(_("sweet"),_("record_saved"))},failure:function(){app.msg(_("oops"),_("record_error"),!0)}}),a.getSnippetWindow().close())},onSnippetCancelBtnClick:function(){var a=this.getSnippetForm().getForm().getRecord();(""===a.data.id||0===a.data.id)&&a.destroy(),this.getSnippetWindow().close()},getSnippetEditWindow:function(){var a=this;return a.getSnippetWindow()?a.getSnippetWindow().show():Ext.widget("snippetswindow").show()},onSnippetCategoryAddBtnClick:function(){var a,b,c=this,d=c.getSnippetEditWindow(),e=c.getSnippetsTreePanel(),f=e.getStore(),g=e.getSelectionModel().getSelection(),h=e.action.split("-");c.getSnippetFormTextField().hide(),c.getSnippetFormTextField().disable(),b=0===g.length?f.getRootNode():g[0].data.leaf?g[0].parentNode:g[0],a=Ext.create("App.model.patient.encounter.snippetTree",{parentId:b.data.id,category:h.length>1?h[0]:h[1],specialty_id:c.getSoapTemplateSpecialtiesCombo().getValue(),leaf:!1}),d.parentRecord=b,c.getSnippetForm().getForm().loadRecord(a)},onSnippetBtnEdit:function(a,b,c,d,e,f){this.getSnippetEditWindow();var g=this,h=g.getSnippetFormTextField(),i=g.getSnippetWindow(),j=g.getSnippetForm().getForm();f.get("leaf")?(i.setTitle(_("title")+" ("+_("required")+")"),h.show(),h.enable()):(i.setTitle(_("title")+" ("+_("optional")+")"),h.hide(),h.disable()),j.loadRecord(f)}}),Ext.define("App.view.patient.Referrals",{extend:"Ext.grid.Panel",requires:["App.ux.LiveCPTSearch","App.ux.LiveICDXSearch","App.ux.combo.ActiveProviders","Ext.selection.CheckboxModel","App.ux.grid.RowFormEditing","App.ux.combo.ReferringProviders"],xtype:"patientreferralspanel",title:_("referrals"),action:"referralsGrid",itemId:"patientReferralsGrid",columnLines:!0,allowDeselect:!0,store:Ext.create("App.store.patient.Referrals",{remoteFilter:!0}),plugins:[{ptype:"rowformediting",clicksToEdit:2,items:[{xtype:"container",defaults:{layout:"anchor"},layout:{type:"hbox",align:"stretch"},items:[{xtype:"container",flex:1,defaults:{labelAlign:"right",margin:"0 0 5 0"},items:[{xtype:"datefield",fieldLabel:_("referral_date"),name:"referral_date",format:"Y-m-d",validateBlank:!0},{xtype:"livecptsearch",fieldLabel:_("requested_service"),name:"service_text",displayField:"code_text",valueField:"code_text",hideLabel:!1,itemId:"referralServiceSearch",anchor:"100%"},{xtype:"textareafield",fieldLabel:_("reason"),name:"referal_reason",anchor:"100%",height:60},{xtype:"liveicdxsearch",margin:"0 0 10",fieldLabel:_("diagnosis"),name:"diagnosis_text",hideLabel:!1,displayField:"code_text",valueField:"code_text",itemId:"referralDiagnosisSearch",anchor:"100%"}]},{xtype:"container",flex:1,defaults:{labelAlign:"right",margin:"0 0 5 0"},items:[{xtype:"activeproviderscombo",fieldLabel:_("refer_by"),name:"refer_by_text",width:300,displayField:"option_name",valueField:"option_name",itemId:"ReferralProviderCombo"},{xtype:"container",layout:"hbox",items:[{xtype:"activeproviderscombo",fieldLabel:_("refer_to"),name:"refer_to_text",labelAlign:"right",margin:"0 5 5 0",width:300,displayField:"fullname",valueField:"fullname",itemId:"ReferralLocalProviderCombo"},{xtype:"referringproviderscombo",fieldLabel:_("refer_to"),name:"refer_to_text",labelAlign:"right",margin:"0 5 5 0",width:300,disabled:!0,hidden:!0,displayField:"fullname",valueField:"fullname",itemId:"ReferralExternalProviderCombo"},{xtype:"checkboxfield",boxLabel:_("external_referral"),itemId:"ReferralExternalReferralCheckbox",name:"is_external_referral"}]},{xtype:"gaiaehr.combo",fieldLabel:_("risk_level"),name:"risk_level",list:17,width:300},{xtype:"checkboxfield",fieldLabel:_("send_record"),name:"send_record",width:300}]}]}]}],selModel:Ext.create("Ext.selection.CheckboxModel"),columns:[{xtype:"datecolumn",text:_("date"),dataIndex:"referral_date",format:"Y-m-d",menuDisabled:!0,resizable:!1},{text:_("refer_by"),dataIndex:"refer_by_text",menuDisabled:!0,resizable:!1,width:200},{text:_("refer_to"),dataIndex:"refer_to_text",menuDisabled:!0,resizable:!1,width:200},{text:_("request"),dataIndex:"referal_reason",menuDisabled:!0,resizable:!1,flex:1}],tbar:["->",{text:_("referral"),iconCls:"icoAdd",itemId:"encounterRecordAdd",action:"addReferralBtn"},"-",{text:_("print"),iconCls:"icoPrint",disabled:!0,itemId:"printReferralBtn"}]}),Ext.define("App.view.patient.ActiveProblems",{extend:"Ext.grid.Panel",requires:["App.ux.grid.RowFormEditing","App.ux.LiveSnomedProblemSearch","App.ux.combo.CodesTypes","App.ux.combo.Occurrence","App.ux.combo.Outcome2"],xtype:"patientactiveproblemspanel",title:_("active_problems"),columnLines:!0,store:Ext.create("App.store.patient.PatientActiveProblems",{remoteFilter:!0,autoSync:!1}),columns:[{xtype:"actioncolumn",width:25,items:[{icon:"resources/images/icons/blueInfo.png",tooltip:"Get Info",handler:function(a,b,c,d,e,f){App.app.getController("InfoButton").doGetInfo(f.data.code,f.data.code_type,f.data.code_text)}}]},{header:_("problem"),flex:1,dataIndex:"code_text",renderer:function(a,b,c){return a+" ("+c.data.code+")"}},{header:_("occurrence"),width:200,dataIndex:"occurrence"},{xtype:"datecolumn",header:_("begin_date"),width:100,format:"Y-m-d",dataIndex:"begin_date"},{xtype:"datecolumn",header:_("end_date"),width:100,format:"Y-m-d",dataIndex:"end_date"},{header:_("status"),width:80,dataIndex:"status"}],plugins:Ext.create("App.ux.grid.RowFormEditing",{autoCancel:!1,errorSummary:!1,clicksToEdit:2,items:[{xtype:"container",layout:{type:"hbox",align:"stretch"},items:[{xtype:"container",padding:10,layout:"vbox",items:[{xtype:"snomedliveproblemsearch",fieldLabel:_("problem"),name:"code_text",hideLabel:!1,itemId:"activeProblemLiveSearch",enableKeyEvents:!0,displayField:"FullySpecifiedName",valueField:"FullySpecifiedName",width:720,labelWidth:70,margin:"0 10 5 0",allowBlank:!1},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 0 0"},items:[{fieldLabel:_("occurrence"),width:250,labelWidth:70,xtype:"mitos.occurrencecombo",name:"occurrence",allowBlank:!1},{xtype:"textfield",width:460,labelWidth:70,fieldLabel:_("referred_by"),name:"referred_by"}]},{fieldLabel:_("note"),xtype:"textfield",width:720,labelWidth:70,name:"note"}]},{xtype:"container",padding:10,layout:"vbox",defaults:{labelWidth:70,margin:"0 0 5 0",width:200},items:[{fieldLabel:_("status"),xtype:"gaiaehr.combo",list:112,itemId:"ActiveProblemStatusCombo",name:"status",allowBlank:!1},{fieldLabel:_("begin_date"),xtype:"datefield",format:"Y-m-d",name:"begin_date"},{fieldLabel:_("end_date"),xtype:"datefield",format:"Y-m-d",name:"end_date"}]}]}]}),tbar:["->",{text:_("add_new"),action:"encounterRecordAdd",itemId:"addActiveProblemBtn",iconCls:"icoAdd"}],bbar:["->",{text:_("review"),itemId:"review_active_problems",action:"encounterRecordAdd"}]}),Ext.define("App.view.patient.SocialPanel",{extend:"Ext.panel.Panel",requires:["App.view.patient.SmokingStatus","App.view.patient.SocialHistory"],xtype:"patientsocialpanel",title:_("social"),border:!1,bodyBorder:!1,layout:{type:"vbox",align:"stretch"},items:[{xtype:"patientsmokingstatusgrid",margin:"0 0 5 0",flex:1},{xtype:"patientsocialhistorypanel",flex:2}]}),Ext.define("App.view.patient.CognitiveAndFunctionalStatus",{extend:"Ext.grid.Panel",requires:["App.ux.grid.RowFormEditing","App.ux.LiveSnomedSearch","App.store.patient.CognitiveAndFunctionalStatus"],xtype:"patientcognitiveandfunctionalstatuspanel",title:_("cog_and_func_status"),columnLines:!0,store:Ext.create("App.store.patient.CognitiveAndFunctionalStatus",{remoteFilter:!0}),plugins:[{ptype:"rowediting",errorSummary:!1}],columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/cross.png",tooltip:_("remove")}]},{header:_("category"),width:150,dataIndex:"category",editor:{xtype:"gaiaehr.combo",list:117,itemId:"functionalStatusCategoryCombo",allowBlank:!1}},{header:_("description"),flex:1,dataIndex:"code_text",editor:{xtype:"snomedlivesearch",itemId:"functionalStatusCodeCombo",displayField:"FullySpecifiedName",valueField:"FullySpecifiedName",allowBlank:!1}},{header:_("note"),flex:2,dataIndex:"note",editor:{xtype:"textfield"}},{xtype:"datecolumn",header:_("begin_date"),dataIndex:"begin_date",format:"Y-m-d",editor:{xtype:"datefield",format:"Y-m-d"}},{xtype:"datecolumn",header:_("end_date"),dataIndex:"end_date",format:"Y-m-d",editor:{xtype:"datefield",format:"Y-m-d"}},{header:_("status"),dataIndex:"status",editor:{xtype:"gaiaehr.combo",list:118,itemId:"functionalStatusSatausCombo",allowBlank:!1}}],tbar:["->","-",{text:_("add_new"),iconCls:"icoAdd",action:"encounterRecordAdd",itemId:"newFunctionalStatusBtn"}]}),Ext.define("App.view.patient.RadOrders",{extend:"Ext.grid.Panel",requires:["Ext.grid.plugin.RowEditing","Ext.grid.feature.Grouping","Ext.selection.CheckboxModel","App.ux.combo.Combo","App.ux.LiveRadsSearch"],xtype:"patientradorderspanel",title:_("xray_ct_orders"),columnLines:!0,tabConfig:{cls:"order-tab"},itemId:"RadOrders",store:Ext.create("App.store.patient.PatientsOrders",{storeId:"RadOrderStore",groupField:"date_ordered",remoteFilter:!0,pageSize:200,sorters:[{property:"date_ordered",direction:"DESC"}]}),selModel:Ext.create("Ext.selection.CheckboxModel",{showHeaderCheckbox:!1}),features:[{ftype:"grouping"}],plugins:[{ptype:"rowediting",clicksToEdit:2}],columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/cross.png",tooltip:_("remove")}]},{header:_("order#"),width:60,dataIndex:"id"},{header:_("status"),width:75,dataIndex:"status",editor:{xtype:"gaiaehr.combo",list:40},renderer:function(a){return app.getController("patient.RadOrders").radOrdersGridStatusColumnRenderer(a)}},{xtype:"datecolumn",header:_("date_ordered"),width:100,dataIndex:"date_ordered",format:"Y-m-d",editor:{xtype:"datefield"}},{header:_("code"),width:100,dataIndex:"code"},{header:_("description"),flex:1,dataIndex:"description",editor:{xtype:"radslivetsearch",itemId:"radOrderliveSearch"}},{header:_("notes"),flex:1,dataIndex:"note",editor:{xtype:"textfield"}},{header:_("priority"),width:100,dataIndex:"priority",editor:{xtype:"gaiaehr.combo",list:98}},{xtype:"datecolumn",header:_("date_collected"),width:100,dataIndex:"date_collected",format:"Y-m-d",editor:{xtype:"datefield"}}],tbar:[{text:_("eRad"),iconCls:"icoSend",itemId:"electronicRadOrderBtn"},"-","->","-",{xtype:"button",text:_("new_order"),iconCls:"icoAdd",action:"encounterRecordAdd",itemId:"newRadOrderBtn"},"-",{text:_("print"),iconCls:"icoPrint",disabled:!0,margin:"0 5 0 0",itemId:"printRadOrderBtn"}]}),Ext.define("App.view.patient.encounter.CarePlanGoalsNewWindow",{extend:"Ext.window.Window",requires:["App.ux.LiveSnomedProcedureSearch"],xtype:"careplangoalsnewwindow",title:_("new_goal"),closable:!1,constrain:!0,closeAction:"hide",layout:"fit",items:[{xtype:"form",itemId:"CarePlanGoalsNewForm",layout:{type:"vbox",align:"stretch"},bodyPadding:10,items:[{xtype:"fieldcontainer",layout:"hbox",itemId:"CarePlanGoalPlanDateContainer",fieldLabel:_("plan_date"),labelAlign:"top",defaults:{margin:"0 5 0 0"},items:[{xtype:"datefield",itemId:"CarePlanGoalPlanDateField",allowBlank:!1,format:"Y-m-d",name:"plan_date"},{xtype:"button",text:"+1 Day",action:"1D"},{xtype:"button",text:"+1 Week",action:"1W"},{xtype:"button",text:"+2 Week",action:"2W"},{xtype:"button",text:"+1 Month",action:"1M"},{xtype:"button",text:"+3 Month",action:"3M"},{xtype:"button",text:"+6 Month",action:"6M"},{xtype:"button",text:"+1 Year",action:"1Y"}]},{xtype:"snomedliveproceduresearch",itemId:"CarePlanGoalSearchField",fieldLabel:_("goal"),displayField:"FullySpecifiedName",valueField:"FullySpecifiedName",labelAlign:"top",allowBlank:!1,hideLabel:!1,name:"goal"},{xtype:"textareafield",fieldLabel:_("instructions"),labelAlign:"top",name:"instructions",flex:1}]}],buttons:[{text:_("cancel"),itemId:"CarePlanGoalsNewFormCancelBtn"},{text:_("save"),itemId:"CarePlanGoalsNewFormSaveBtn"}]}),Ext.define("App.ux.combo.MedicationInstructions",{extend:"Ext.form.ComboBox",xtype:"medicationinstructionscombo",queryMode:"local",displayField:"instruction",valueField:"instruction",store:Ext.create("App.store.administration.MedicationInstructions")}),Ext.define("App.ux.form.fields.plugin.HelpIcon",{extend:"Ext.AbstractPlugin",alias:"plugin.helpicon",iconSrc:"resources/images/icons/icohelp.png",iconHeight:16,iconWidth:16,iconMargin:"0 5",init:function(a){a.on("render",this.addHelpIcon,this)},addHelpIcon:function(a){var b,c=this,d='<td><img src="'+c.iconSrc+'" height="'+c.iconHeight+'" width="'+c.iconWidth+'" style="margin:'+c.iconMargin+'"></td>';b=Ext.DomHelper.append(a.inputRow,d,!0),Ext.create("Ext.tip.ToolTip",{target:b,dismissDelay:0,html:c.helpMsg||a.helpMsg||"Help Message..."})}}),Ext.define("App.ux.combo.ComboResettable",{extend:"Ext.form.ComboBox",triggerTip:_("click_to_clear_selection"),spObj:"",spForm:"",spExtraParam:"",qtip:_("clearable_combo_box"),trigger1Class:"x-form-select-trigger",trigger2Class:"x-form-clear-trigger",onRender:function(){this.callParent(arguments);var a=this.getId();this.triggerConfig={tag:"div",cls:"x-form-twin-triggers",style:"display:block;",cn:[{tag:"img",style:Ext.isIE?"margin-left:0;height:21px":"",src:Ext.BLANK_IMAGE_URL,id:"trigger2"+a,name:"trigger2"+a,cls:"x-form-trigger "+this.trigger2Class}]},this.triggerEl.replaceWith(this.triggerConfig),this.triggerEl.on("mouseup",function(b){b.target.name=="trigger2"+a&&(this.reset(),this.oldValue=null,""!==this.spObj&&""!==this.spExtraParam&&(Ext.getCmp(this.spObj).store.setExtraParam(this.spExtraParam,""),Ext.getCmp(this.spObj).store.load()),""!==this.spForm&&Ext.getCmp(this.spForm).getForm().reset(),this.fireEvent("fieldreset",this))},this);var b=Ext.get("trigger2"+a);b.addClsOnOver("x-form-trigger-over")}}),Ext.define("App.ux.form.SearchField",{extend:"Ext.form.field.Trigger",alias:"widget.gaiasearchfield",trigger1Cls:Ext.baseCSSPrefix+"form-clear-trigger",trigger2Cls:Ext.baseCSSPrefix+"form-search-trigger",hasSearch:!1,paramName:"query",filterFn:null,initComponent:function(){var a=this;a.callParent(arguments),a.on("specialkey",function(b,c){c.getKey()==c.ENTER&&a.onTrigger2Click()}),a.store.remoteFilter=null===a.filterFn,a.store.remoteFilter&&(a.store.proxy.hasOwnProperty("filterParam")||(a.store.proxy.filterParam=a.paramName),a.store.proxy.encodeFilters=function(a){return a[0].value})},afterRender:function(){this.callParent(),this.triggerCell.item(0).setDisplayed(!1)},onTrigger1Click:function(){var a=this;a.hasSearch&&(a.setValue(""),a.store.clearFilter(),a.hasSearch=!1,a.triggerCell.item(0).setDisplayed(!1),a.updateLayout())},onTrigger2Click:function(){var a=this,b=a.getValue();b.length>0?(a.store.filter(a.store.remoteFilter?{id:a.paramName,property:a.paramName,value:b}:{id:a.paramName,filterFn:function(c){return a.filterFn(c,b)}}),a.hasSearch=!0,a.triggerCell.item(0).setDisplayed(!0),a.updateLayout()):a.onTrigger1Click()}}),Ext.define("App.model.administration.Allergies",{extend:"Ext.data.Model",table:{name:"allergies",comment:"Allergies"},fields:[{name:"id",type:"int"},{name:"allergy",type:"string",len:500,comment:"Allergy Name"},{name:"allergy_term",type:"string"},{name:"allergy_code",type:"string",len:20},{name:"allergy_code_type",type:"string",len:15},{name:"allergy_type",type:"string",len:5,comment:"PT = Preferred Term, SN = Systematic Name, SY = Synonym, CD = Code, TR = Trade"}],proxy:{type:"direct",api:{read:"Allergies.searchAllergiesData"},reader:{root:"data"}}}),Ext.define("App.ux.form.fields.CheckBoxWithText",{extend:"Ext.form.FieldContainer",mixins:{field:"Ext.form.field.Field"},xtype:"checkboxwithtext",layout:"hbox",boxLabel:"boxLabel",emptyText:"",readOnly:!1,msgTarget:"under",width:400,inputValue:"1",uncheckedValue:"0",initComponent:function(){var a=this;
a.items=a.items||[],a.items=[{xtype:"checkbox",boxLabel:a.boxLabel,submitValue:!1,inputValue:a.inputValue,width:130,margin:"0 10 0 0"}],a.textField=a.textField||{xtype:"textfield"},Ext.apply(a.textField,{submitValue:!1,flex:1,hidden:!0,emptyText:a.emptyText}),a.items.push(a.textField),"vbox"==a.layout&&(a.height=44),a.callParent(),a.chekboxField=a.items.items[0],a.textField=a.items.items[1],a.chekboxField.on("change",a.setTextField,a),a.initField()},setTextField:function(a,b){0==b||"off"==b||0==b?(this.textField.reset(),this.textField.hide()):this.textField.show()},getValue:function(){var a="",b=this.chekboxField.getSubmitValue(),c=this.textField.getSubmitValue()||"";return b&&(a=b+"~"+c),a},getSubmitValue:function(){return this.getValue()},setValue:function(a){if(a&&a.split){var b=a.split("~");return this.chekboxField.setValue(b[0]||0),void this.textField.setValue(b[1]||"")}this.chekboxField.setValue(0),this.textField.setValue("")},getSubmitData:function(){var a=this,b=null;return a.disabled||!a.submitValue||a.isFileUpload()||(b={},b[a.getName()]=""+a.getSubmitValue()),b},setReadOnly:function(a){this.chekboxField.setReadOnly(a),this.textField.setReadOnly(a)},isValid:function(){return this.chekboxField.isValid()&&this.textField.isValid()}}),Ext.define("App.view.patient.RxOrders",{extend:"Ext.grid.Panel",requires:["App.ux.grid.RowFormEditing","Ext.grid.feature.Grouping","Ext.selection.CheckboxModel","App.ux.combo.PrescriptionHowTo","App.ux.combo.PrescriptionTypes","App.ux.combo.EncounterICDS","App.ux.combo.MedicationInstructions","App.ux.LiveRXNORMSearch","App.ux.form.fields.plugin.HelpIcon"],xtype:"patientrxorderspanel",title:_("rx_orders"),columnLines:!0,tabConfig:{cls:"order-tab"},itemId:"RxOrderGrid",store:Ext.create("App.store.patient.RxOrders",{storeId:"RxOrderStore",remoteFilter:!0,pageSize:200,sorters:[{property:"date_ordered",direction:"DESC"}]}),selModel:Ext.create("Ext.selection.CheckboxModel",{showHeaderCheckbox:!1}),plugins:[{ptype:"rowformediting",clicksToEdit:2,items:[{xtype:"container",layout:{type:"hbox",align:"stretch"},itemId:"RxOrderGridFormContainer",items:[{xtype:"container",layout:"anchor",itemId:"RxOrderGridFormContainerOne",items:[{xtype:"datefield",fieldLabel:_("order_date"),format:"Y-m-d",name:"date_ordered",allowBlank:!1,margin:"0 0 5 0"},{xtype:"rxnormlivetsearch",itemId:"RxNormOrderLiveSearch",hideLabel:!1,fieldLabel:_("medication"),width:700,name:"STR",maxLength:255,displayField:"STR",valueField:"STR",vtype:"nonspecialcharactersrequired",allowBlank:!1},{xtype:"container",margin:"5 0",layout:{type:"hbox"},items:[{xtype:"numberfield",width:170,fieldLabel:_("dispense"),minValue:.001,maxValue:99999,name:"dispense",decimalPrecision:3,maxLength:10,allowBlank:!1,fixPrecision:function(a){var b,c,d=this,e=isNaN(a),f=d.decimalPrecision;return e||!a?e?"":a:((!d.allowDecimals||0>=f)&&(f=0),b=String(a),-1!==b.indexOf(".")?(c=b.split("."),Number(1==c.length?b:c[0]+"."+c[1].charAt(0)+c[1].charAt(1)+c[1].charAt(2))):Number(b))}},{xtype:"numberfield",width:130,fieldLabel:_("days_supply"),labelAlign:"right",labelWidth:75,minValue:1,maxValue:630,allowDecimals:!1,name:"days_supply"},{xtype:"numberfield",width:100,fieldLabel:_("refill"),labelAlign:"right",labelWidth:40,maxValue:99,minValue:0,name:"refill",vtype:"numeric",allowBlank:!1},{xtype:"encountericdscombo",itemId:"RxEncounterDxCombo",fieldLabel:_("dx"),labelAlign:"right",labelWidth:30,width:295,name:"dxs"}]},{xtype:"medicationinstructionscombo",itemId:"RxOrderMedicationInstructionsCombo",width:700,fieldLabel:_("instructions"),name:"directions",maxLength:140,validateOnBlur:!0,vtype:"nonspecialcharactersrequired",allowBlank:!1},{xtype:"textfield",width:680,fieldLabel:"*"+_("notes_to_pharmacist"),itemId:"RxOrderGridFormNotesField",name:"notes",plugins:[{ptype:"helpicon",helpMsg:_("rx_notes_to_pharmacist_warning")}],maxLength:210},{xtype:"container",html:" *"+_("rx_notes_to_pharmacist_warning"),margin:"0 0 0 100"}]},{xtype:"container",layout:"anchor",itemId:"RxOrderGridFormContainerTwo",padding:"25 0 0 0",items:[{xtype:"container",layout:"hbox",items:[{xtype:"checkboxfield",fieldLabel:_("daw"),tooltip:_("dispensed_as_written"),width:90,labelWidth:70,labelAlign:"right",name:"daw",margin:"0 0 5 0"},{xtype:"checkboxfield",fieldLabel:_("is_comp"),tooltip:_("is_compound"),width:85,labelWidth:65,labelAlign:"right",name:"is_compound",itemId:"RxOrderCompCheckBox",margin:"0 0 5 0"},{xtype:"checkboxfield",fieldLabel:_("is_sply"),tooltip:_("is_supply"),width:85,labelWidth:65,labelAlign:"right",name:"is_supply",itemId:"RxOrderSplyCheckBox",margin:"0 0 5 0"}]},{xtype:"datefield",fieldLabel:_("begin_date"),labelWidth:70,labelAlign:"right",width:258,format:"Y-m-d",name:"begin_date",margin:"0 0 5 0",allowBlank:!1},{xtype:"datefield",fieldLabel:_("end_date"),labelWidth:70,labelAlign:"right",format:"Y-m-d",width:258,name:"end_date"}]},{xtype:"fieldset",title:_("active_drug_allergies"),html:_("none"),margin:"25 0 5 10",flex:1}]}]}],columns:[{xtype:"actioncolumn",width:20,items:[{icon:"resources/images/icons/cross.png",tooltip:_("remove")}]},{xtype:"datecolumn",header:_("date_ordered"),dataIndex:"date_ordered",format:"Y-m-d"},{header:_("medication"),flex:1,dataIndex:"STR"},{header:_("daw"),width:40,dataIndex:"daw",tooltip:_("dispensed_as_written"),renderer:function(a){return app.boolRenderer(a)}},{header:_("dispense"),width:60,dataIndex:"dispense"},{header:_("refill"),width:50,dataIndex:"refill"},{header:_("instructions"),flex:1,dataIndex:"directions"},{header:_("related_dx"),width:200,dataIndex:"dxs",renderer:function(a){return 0==a||"false"==a||0==a[0]?"":a}},{xtype:"datecolumn",format:"Y-m-d",header:_("begin_date"),width:75,dataIndex:"begin_date"},{xtype:"datecolumn",header:_("end_date"),width:75,format:"Y-m-d",dataIndex:"end_date"}],tbar:["->","-",{text:_("new_order"),iconCls:"icoAdd",action:"encounterRecordAdd",itemId:"newRxOrderBtn"},"-",{text:_("clone_order"),iconCls:"icoAdd",disabled:!0,margin:"0 5 0 0",action:"encounterRecordAdd",itemId:"cloneRxOrderBtn"},"-",{text:_("print"),iconCls:"icoPrint",disabled:!0,margin:"0 5 0 0",itemId:"printRxOrderBtn"}]}),Ext.define("App.ux.combo.Specialties",{extend:"App.ux.combo.ComboResettable",xtype:"specialtiescombo",displayField:"text_details",valueField:"id",editable:!1,emptyText:_("select"),queryMode:"local",store:Ext.create("App.store.administration.Specialties",{pageSize:500,autoLoad:!0})}),Ext.define("App.view.patient.encounter.SOAP",{extend:"Ext.panel.Panel",requires:["App.ux.combo.Specialties","App.ux.grid.RowFormEditing","App.view.patient.encounter.CarePlanGoals","App.view.patient.encounter.CarePlanGoalsNewWindow","App.ux.LiveSnomedProcedureSearch","App.view.patient.encounter.AdministeredMedications","App.view.patient.encounter.AppointmentRequestGrid"],action:"patient.encounter.soap",itemId:"soapPanel",title:_("soap"),layout:"border",frame:!0,pid:null,eid:null,initComponent:function(){var me=this;me.snippetStore=Ext.create("App.store.patient.encounter.snippetTree",{autoLoad:!1}),me.procedureStore=Ext.create("App.store.patient.encounter.Procedures");var snippetCtrl=App.app.getController("patient.encounter.Snippets");me.snippets=Ext.create("Ext.tree.Panel",{title:_("snippets"),itemId:"SnippetsTreePanel",region:"west",width:300,split:!0,animate:!1,hideHeaders:!0,useArrows:!0,rootVisible:!1,singleExpand:!0,collapsed:!eval(g("enable_encounter_soap_templates")),collapsible:!0,collapseMode:"mini",hideCollapseTool:!0,store:me.snippetStore,tools:[{xtype:"button",text:_("category"),iconCls:"icoAdd",itemId:"SnippetCategoryAddBtn"}],columns:[{xtype:"treecolumn",text:"Template",flex:1,dataIndex:"title",renderer:function(a,b,c){var d=c.data.text?' data-qtip="'+c.data.text+'" ':"";return"<span "+d+">"+(""!==a?a:c.data.text)+"</span>"}},{text:_("add"),width:25,menuDisabled:!0,xtype:"actioncolumn",tooltip:_("add_snippet"),align:"center",icon:"resources/images/icons/add.gif",scope:me,handler:function(a,b,c,d,e,f){snippetCtrl.onSnippetAddBtnClick(a,b,c,d,e,f)},getClass:function(a,b,c){return c.data.leaf?"x-hide-display":"x-grid-center-icon"}},{text:_("edit"),width:25,menuDisabled:!0,xtype:"actioncolumn",tooltip:"Edit task",align:"center",icon:"resources/images/icons/edit.png",handler:function(a,b,c,d,e,f){snippetCtrl.onSnippetBtnEdit(a,b,c,d,e,f)}}],bbar:[{xtype:"specialtiescombo",itemId:"SoapTemplateSpecialtiesCombo",flex:1}],viewConfig:{plugins:{ptype:"treeviewdragdrop",expandDelay:500,dragText:_("drag_and_drop_reorganize")},listeners:{scope:me,drop:me.onSnippetDrop}},listeners:{scope:me,itemclick:me.onSnippetClick,itemdblclick:me.onSnippetDblClick}}),me.form=Ext.create("Ext.form.Panel",{autoScroll:!0,action:"encounter",bodyStyle:"background-color:white",region:"center",itemId:"soapForm",fieldDefaults:{msgTarget:"side"},plugins:{ptype:"advanceform",autoSync:g("autosave"),syncAcl:a("edit_encounters")},items:[me.pWin=Ext.widget("window",{title:_("procedure"),maximized:!0,closable:!1,constrain:!0,closeAction:"hide",itemId:"soapProcedureWindow",layout:"fit",items:[me.pForm=Ext.widget("form",{bodyPadding:10,layout:{type:"vbox",align:"stretch"},items:[{xtype:"snomedliveproceduresearch",name:"code_text",displayField:"FullySpecifiedName",valueField:"FullySpecifiedName",listeners:{scope:me,select:me.onProcedureSelect}},{xtype:"textareafield",name:"observation",flex:1}]})],buttons:[{text:_("cancel"),scope:me,handler:me.onProcedureCancel},{text:_("save"),scope:me,itemId:"encounterRecordAdd",handler:me.onProcedureSave}]}),{xtype:"fieldset",title:_("subjective"),margin:5,items:[me.sField=Ext.widget("textarea",{name:"subjective",anchor:"100%",enableKeyEvents:!0,margin:"5 0 10 0"})]},{xtype:"fieldset",title:_("objective"),margin:5,items:[me.oField=Ext.widget("textarea",{name:"objective",anchor:"100%"}),me.pGrid=Ext.widget("grid",{frame:!0,name:"procedures",emptyText:_("no_procedures"),margin:"5 0 10 0",store:me.procedureStore,columns:[{text:_("code"),dataIndex:"code"},{text:_("description"),dataIndex:"code_text",flex:1}],listeners:{scope:me,itemdblclick:me.procedureEdit},dockedItems:[{xtype:"toolbar",items:[{xtype:"tbtext",text:_("procedures")},"->",{text:_("new_procedure"),scope:me,handler:me.onProcedureAdd,iconCls:"icoAdd"}]}]})]},{xtype:"fieldset",title:_("assessment"),margin:5,items:[me.aField=Ext.widget("textarea",{name:"assessment",anchor:"100%"}),me.dxField=Ext.widget("icdsfieldset",{name:"dxCodes",margin:"5 0 10 0",itemId:"SoapDxCodesField"})]},{xtype:"fieldset",title:_("plan"),margin:5,items:[me.pField=Ext.widget("textarea",{fieldLabel:_("instructions"),labelAlign:"top",name:"instructions",margin:"0 0 10 0",anchor:"100%"}),{xtype:"appointmentrequestgrid",margin:"0 0 10 0"},{xtype:"careplangoalsgrid",margin:"0 0 10 0"}]}],buttons:[{text:_("save"),iconCls:"save",action:"soapSave",scope:me,itemId:"encounterRecordAdd",handler:me.onSoapSave}],listeners:{scope:me,recordloaded:me.formRecordLoaded}}),me.phWindow=Ext.widget("window",{title:_("complete_snippet"),closeAction:"hide",bodyPadding:0,bodyBorder:!1,border:!1,items:[{xtype:"textarea",border:!1,width:500,height:150,margin:0,grow:!0,enableKeyEvents:!0,listeners:{scope:me,specialkey:me.onPhTextAreaKey}}],buttons:[{xtype:"tbtext",text:_("shift_enter_submit")},"->",{text:_("cancel"),handler:me.onPhWindowCancel},{text:_("submit"),scope:me,handler:me.onPhWindowSubmit}]}),Ext.apply(me,{items:[me.snippets,me.form]}),me.callParent(arguments)},onProcedureSelect:function(a,b){var c=this,d=c.pForm.getForm(),e=d.getRecord();e.set({code:b[0].data.ConceptId,code_type:b[0].data.CodeType,code_text:b[0].data.FullySpecifiedName})},onProcedureAdd:function(){var a,b=this;a=Ext.create("App.model.patient.encounter.Procedures",{pid:b.pid,eid:b.eid,create_uid:app.user.id,update_uid:app.user.id,create_date:new Date,update_date:new Date}),b.procedureStore.add(a),b.procedureEdit(null,a)},onProcedureCancel:function(){this.procedureStore.rejectChanges(),this.pWin.close(),this.query("button[action=soapSave]")[0].enable(),this.pWin.setTitle(_("procedure"))},onProcedureSave:function(){var a=this,b=a.pForm.getForm(),c=b.getRecord(),d=b.getValues();c.set(d),this.procedureStore.sync(),this.pWin.close(),this.query("button[action=soapSave]")[0].enable(),this.pWin.setTitle(_("procedure"))},onShow:function(){var a=this;a.callParent(),a.sField.focus(),a.eid!=app.patient.eid&&(a.pid=app.patient.pid,a.eid=app.patient.eid,a.procedureStore.load({filters:[{property:"eid",value:a.eid}]}))},procedureEdit:function(a,b){this.pWin.setTitle(""!==b.data.code_text||""!==b.data.code?b.data.code_text+" ["+b.data.code+"]":_("new_procedure")),this.pForm.getForm().loadRecord(b),this.pWin.show(this.pGrid.el),this.query("button[action=soapSave]")[0].disable()},onSoapSave:function(a){this.enc.onEncounterUpdate(a)},formRecordLoaded:function(a,b){var c=b.dxCodes();c.on("write",function(){b.store.fireEvent("write")}),this.dxField.loadIcds(b.dxCodes())},onSnippetClick:function(a,b){b.data.leaf||b.expand()},onSnippetDblClick:function(a,b){if(b.data.leaf){var c=this,d=c.form.getForm(),e=a.panel.action.split("-"),f=d.findField(e[0]),g=b.data.text,h=f.getValue(),i=g.indexOf("??"),j=c.phWindow.down("textarea"),k=" "==h.substr(h.length-1)?"":" ";-1==i?f.setValue(h+k+g):(c.phWindow.show(),j.setValue(g),Ext.Function.defer(function(){j.selectText(i,i+2)},300))}else b.expand()},onPhWindowSubmit:function(){var a=this,b=a.phWindow.down("textarea"),c=a.form.getForm(),d=a.snippets.action.split("-"),e=c.findField(d[0]),f=e.getValue(),g=b.getValue(),h=" "==f.substr(f.length-1)?"":" ";e.setValue(f+h+g),a.phWindow.close(),b.reset()},onPhWindowCancel:function(a){a.up("window").close()},onPhTextAreaKey:function(a,b){b.getKey()==b.ENTER&&this.onPhWindowSubmit()},onSnippetDrop:function(a,b,c){for(var d=this,e=10,f=0;f<c.parentNode.childNodes.length;f++)c.parentNode.childNodes[f].set({pos:e}),e+=10;d.snippetStore.sync()}}),Ext.define("App.view.patient.encounter.ProgressNotesHistory",{extend:"Ext.grid.Panel",requires:["App.ux.form.SearchField"],xtype:"progressnoteshistory",title:_("history"),hideHeaders:!0,initComponent:function(){var a=this;a.store=Ext.create("App.store.patient.ProgressNotesHistory"),a.columns=[{dataIndex:"progress",flex:1}],a.tbar=[{xtype:"gaiasearchfield",emptyText:_("search"),flex:1,itemId:"ProgressNotesHistorySearchField",store:a.store,filterFn:function(a,b){return-1!==a.data.progress.search(new RegExp(b,"ig"))}}],a.callParent()}}),Ext.define("App.ux.LiveAllergiesSearch",{extend:"Ext.form.ComboBox",alias:"widget.allergieslivesearch",requires:["App.model.administration.Allergies"],hideLabel:!0,displayField:"allergy",valueField:"allergy",initComponent:function(){var a=this;a.store=Ext.create("Ext.data.Store",{model:"App.model.administration.Allergies",pageSize:25,autoLoad:!1}),Ext.apply(this,{store:a.store,emptyText:_("search")+"...",typeAhead:!1,hideTrigger:!0,minChars:3,listConfig:{loadingText:_("searching")+"...",getInnerTpl:function(){return'<div class="search-item"><h3>{allergy}<span style="font-weight: normal"> ({allergy_code}) </span></h3></div>'}},pageSize:25}),a.callParent()}}),Ext.define("App.view.patient.Allergies",{extend:"Ext.grid.Panel",requires:["App.store.patient.Allergies","App.ux.grid.RowFormEditing","App.ux.LiveRXNORMAllergySearch","App.ux.LiveAllergiesSearch","App.ux.combo.Allergies","App.ux.combo.AllergiesReaction","App.ux.combo.AllergiesTypes","App.ux.combo.AllergiesLocation","App.ux.combo.AllergiesSeverity"],xtype:"patientallergiespanel",title:_("allergies"),columnLines:!0,store:Ext.create("App.store.patient.Allergies",{remoteFilter:!0,autoSync:!1}),columns:[{text:_("type"),width:100,dataIndex:"allergy_type"},{text:_("name"),flex:1,dataIndex:"allergy",renderer:function(a,b,c){var d="";return""!=c.data.allergy_code&&(d+=" ( <b>"+c.data.allergy_code_type+":</b> "+c.data.allergy_code+" )"),a+d}},{text:_("location"),width:220,dataIndex:"location"},{text:_("reaction"),width:220,dataIndex:"reaction"},{text:_("severity"),width:220,dataIndex:"severity"},{text:_("status"),width:55,dataIndex:"status"}],plugins:Ext.create("App.ux.grid.RowFormEditing",{autoCancel:!1,errorSummary:!1,clicksToEdit:1,items:[{title:_("general"),xtype:"container",padding:"0 10",layout:"vbox",items:[{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 0 0"},items:[{xtype:"gaiaehr.combo",fieldLabel:_("type"),itemId:"allergyTypeCombo",name:"allergy_type",allowBlank:!1,labelWidth:70,width:700,list:85,enableKeyEvents:!0},{xtype:"gaiaehr.combo",fieldLabel:_("status"),name:"status",list:113,itemId:"allergyStatusCombo",labelWidth:80,allowBlank:!1}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 0 0"},items:[{xtype:"allergieslivesearch",fieldLabel:_("allergy"),itemId:"allergySearchCombo",name:"allergy",hideLabel:!1,enableKeyEvents:!0,width:700,labelWidth:70,allowBlank:!1},{xtype:"rxnormallergylivetsearch",fieldLabel:_("allergy"),itemId:"allergyMedicationCombo",name:"allergy",hideLabel:!1,hidden:!0,disabled:!0,enableKeyEvents:!0,width:700,labelWidth:70,allowBlank:!1},{fieldLabel:_("begin_date"),xtype:"datefield",format:"Y-m-d",name:"begin_date",labelWidth:80}]},{xtype:"fieldcontainer",layout:"hbox",defaults:{margin:"0 10 0 0"},items:[{xtype:"gaiaehr.combo",fieldLabel:_("location"),name:"location",action:"location",itemId:"allergyLocationCombo",width:225,list:79,labelWidth:70},{xtype:"gaiaehr.combo",fieldLabel:_("reaction"),itemId:"allergyReactionCombo",name:"reaction",width:230,queryMode:"local",labelWidth:70,allowBlank:!1},{xtype:"gaiaehr.combo",fieldLabel:_("severity"),name:"severity",itemId:"allergySeverityCombo",width:225,list:84,labelWidth:70,allowBlank:!1},{fieldLabel:_("end_date"),xtype:"datefield",format:"Y-m-d",name:"end_date",labelWidth:80}]}]}]}),tbar:["->",{text:_("add_new"),itemId:"addAllergyBtn",action:"encounterRecordAdd",iconCls:"icoAdd"}],bbar:[{text:_("only_active"),enableToggle:!0,itemId:"activeAllergyBtn"},"->",{text:_("review"),action:"encounterRecordAdd",itemId:"reviewAllergiesBtn"}]}),Ext.define("App.view.patient.windows.Medical",{extend:"App.ux.window.Window",title:_("medical_window"),itemId:"MedicalWindow",closeAction:"hide",bodyStyle:"background-color:#fff",modal:!0,requires:["App.view.patient.Results","App.view.patient.Referrals","App.view.patient.Immunizations","App.view.patient.Medications","App.view.patient.ActiveProblems","App.view.patient.SocialPanel","App.view.patient.Allergies","App.view.patient.AdvanceDirectives","App.view.patient.CognitiveAndFunctionalStatus","App.view.patient.LabOrders","App.view.patient.RadOrders","App.view.patient.RxOrders","App.view.patient.DoctorsNotes","App.view.patient.FamilyHistory"],initComponent:function(){var a=this;a.items=[{xtype:"tabpanel",border:!1,bodyBorder:!1,plain:!0,margin:5,height:Ext.getBody().getHeight()<700?Ext.getBody().getHeight()-100:600,width:Ext.getBody().getWidth()<1550?Ext.getBody().getWidth()-50:1500,items:[{xtype:"patientimmunizationspanel",itemId:"immunization"},{xtype:"patientallergiespanel",itemId:"allergies"},{xtype:"patientactiveproblemspanel",itemId:"activeproblems"},{xtype:"patientfamilyhistorypanel",itemId:"familyhistory"},{xtype:"patientadvancedirectivepanel",itemId:"advancedirectives"},{xtype:"patientmedicationspanel",itemId:"medications"},{xtype:"patientresultspanel",itemId:"laboratories"},{xtype:"patientsocialpanel",itemId:"social"},{xtype:"patientcognitiveandfunctionalstatuspanel",itemId:"functionalstatus"},{xtype:"patientreferralspanel",itemId:"referrals"},{xtype:"patientdoctorsnotepanel"},{xtype:"patientlaborderspanel"},{xtype:"patientradorderspanel"},{xtype:"patientrxorderspanel"}]}],a.buttons=[{text:_("close"),scope:a,handler:function(){a.close()}}],a.listeners={scope:a,close:a.onMedicalWinClose,show:a.onMedicalWinShow},a.callParent(arguments)},cardSwitch:function(a){var b=this,c=b.down("tabpanel"),d=c.getActiveTab(),e=c.query("#"+a)[0];d==e?d.fireEvent("activate",d):(c.setActiveTab(e),b.setWindowTitle(e.title))},setWindowTitle:function(a){this.setTitle(app.patient.name+" ("+a+") "+(app.patient.readOnly?'-  <span style="color:red">[Read Mode]</span>':""))},onMedicalWinShow:function(){var a=this.down("tabpanel"),b=Ext.getBody().getWidth()<1550?Ext.getBody().getWidth()-50:1500,c=Ext.getBody().getHeight()<700?Ext.getBody().getHeight()-100:600;a.setSize(b,c),this.alignTo(Ext.getBody(),"c-c")},onMedicalWinClose:function(){"App.view.patient.Summary"==app.getActivePanel().$className&&app.getActivePanel().loadStores()}}),Ext.define("App.ux.form.fields.CheckBoxWithFamilyRelation",{extend:"App.ux.form.fields.CheckBoxWithText",alias:"widget.checkboxwithfamilyhistory",textField:{xtype:"gaiaehr.combo",fieldLabel:_("relation"),labelAlign:"right",labelWidth:80,list:109,allowBlank:!1,loadStore:!0},initComponent:function(){this.inputValue=this.code||"1",this.callParent()},getValue:function(){var a,b="",c=this.chekboxField.getSubmitValue();if("0"!=c){c+=":"+this.chekboxField.boxLabel;var d=this.textField.getStore(),e=d.getById(this.textField.getSubmitValue());a=e?e.get("code_type")+":"+e.get("code")+":"+e.get("option_name"):"0"}else a="0";return c&&(b=c+"~"+a),b},setValue:function(a){if(a&&a.split){var b=a.split("~");if(this.chekboxField.setValue(b[0]||0),"0"!=b[1]&&b[1].split){var c=b[1].split(":");this.textField.select(c[1]||c[0]||"")}else this.textField.setValue("")}else this.chekboxField.setValue(0),this.textField.setValue("")}}),Ext.define("App.view.patient.Encounter",{extend:"App.ux.RenderPanel",pageTitle:_("encounter"),pageLayout:"border",itemId:"encounterPanel",requires:["App.store.patient.Encounters","App.store.patient.Vitals","App.store.administration.AuditLog","App.view.patient.encounter.SOAP","App.view.patient.encounter.HealthCareFinancingAdministrationOptions","App.view.patient.encounter.CurrentProceduralTerminology","App.view.patient.encounter.ProgressNotesHistory","App.view.patient.ProgressNote","App.view.patient.DecisionSupportWarningPanel","App.ux.combo.EncounterPriority","App.ux.combo.ActiveProviders"],enableCPT:eval(g("enable_encounter_cpt")),enableHCFA:eval(g("enable_encounter_hcfa")),enableSOAP:eval(g("enable_encounter_soap")),enableVitals:eval(g("enable_encounter_vitals")),enableEncHistory:eval(g("enable_encounter_history")),enableFamilyHistory:eval(g("enable_encounter_family_history")),enableItemsToReview:eval(g("enable_encounter_items_to_review")),enableReviewOfSystem:eval(g("enable_encounter_review_of_systems")),enableReviewOfSystemChecks:eval(g("enable_encounter_review_of_systems_cks")),enableClinicalDecisionSupport:eval(g("enable_clinical_decision_support")),showRating:!0,conversionMethod:"english",pid:null,eid:null,encounter:null,currEncounterStartDate:null,initComponent:function(){var b=this;b.renderAdministrative=a("access_enc_hcfa")||a("access_enc_cpt")||a("access_enc_history"),b.timerTask={scope:b,run:function(){b.encounterTimer()},interval:1e3},b.encounterStore=Ext.create("App.store.patient.Encounters",{listeners:{scope:b,datachanged:b.getProgressNote}}),b.encounterEventHistoryStore=Ext.create("App.store.administration.AuditLog"),b.centerPanel=b.renderAdministrative?Ext.create("Ext.tab.Panel",{region:"center",margin:"1 0 0 0",activeTab:0,bodyPadding:5,listeners:{render:function(){this.items.each(function(a){a.tab.on("click",function(){b.onTapPanelChange(this)})})}}}):Ext.create("Ext.panel.Panel",{region:"center",margin:"1 0 0 0",layout:"fit",bodyPadding:5}),b.encounterTabPanel=b.centerPanel.add(Ext.create("Ext.tab.Panel",{title:b.renderAdministrative?_("encounter"):!1,itemId:"encounter",plain:!0,activeItem:0,border:!1,action:"encounterTabPanel",defaults:{bodyStyle:"padding:15px",bodyBorder:!0,layout:"fit"}})),b.enableClinicalDecisionSupport&&a("access_clinical_decision_support")&&b.encounterTabPanel.addDocked({xtype:"decisionsupportwarningpanel",itemId:"DecisionSupportWarningPanel",dock:"top"}),b.enableVitals&&a("access_patient_vitals")&&(b.vitalsPanel=b.encounterTabPanel.add(Ext.create("App.view.patient.Vitals"))),b.enableReviewOfSystem&&a("access_review_of_systems")&&(b.reviewSysPanel=b.encounterTabPanel.add(Ext.create("Ext.form.Panel",{autoScroll:!0,action:"encounter",title:_("review_of_systems"),frame:!0,bodyPadding:5,bodyStyle:"background-color:white",fieldDefaults:{msgTarget:"side"},plugins:{ptype:"advanceform",autoSync:g("autosave"),syncAcl:a("edit_encounters")},buttons:[{text:_("save"),iconCls:"save",action:"reviewOfSystems",scope:b,itemId:"encounterRecordAdd",handler:b.onEncounterUpdate}]}))),b.enableReviewOfSystemChecks&&a("access_review_of_systems_checks")&&(b.reviewSysCkPanel=b.encounterTabPanel.add(Ext.create("Ext.form.Panel",{autoScroll:!0,action:"encounter",title:_("review_of_systems_checks"),frame:!0,bodyPadding:5,bodyStyle:"background-color:white",fieldDefaults:{msgTarget:"side"},plugins:{ptype:"advanceform",autoSync:g("autosave"),syncAcl:a("edit_encounters")},buttons:[{text:_("save"),iconCls:"save",action:"reviewOfSystemsChecks",scope:b,itemId:"encounterRecordAdd",handler:b.onEncounterUpdate}]}))),b.enableItemsToReview&&a("access_itmes_to_review")&&(b.itemsToReview=b.encounterTabPanel.add(Ext.create("App.view.patient.ItemsToReview",{title:_("items_to_review"),bodyPadding:"7 5 2 5"}))),b.enableSOAP&&a("access_soap")&&(b.soapPanel=b.encounterTabPanel.add(Ext.create("App.view.patient.encounter.SOAP",{bodyStyle:"padding:0",enc:b}))),(b.enableHCFA&&a("access_enc_hcfa")||b.enableCPT&&a("access_enc_cpt")||b.enableEncHistory&&a("access_enc_history"))&&(b.administrativeTabPanel=b.centerPanel.add(Ext.create("Ext.tab.Panel",{title:_("administrative"),itemId:"administrative",plain:!0,activeItem:0,defaults:{bodyStyle:"padding:15px",bodyBorder:!0,layout:"fit"}}))),b.enableHCFA&&a("access_enc_hcfa")&&(b.MiscBillingOptionsPanel=b.administrativeTabPanel.add(Ext.create("App.view.patient.encounter.HealthCareFinancingAdministrationOptions",{autoScroll:!0,title:_("misc_billing_options_HCFA_1500"),frame:!0,bodyPadding:5,bodyStyle:"background-color:white",fieldDefaults:{msgTarget:"side"},plugins:{ptype:"advanceform",autoSync:g("autosave"),syncAcl:a("edit_enc_hcfa")},buttons:[{text:_("save"),iconCls:"save",action:"soap",scope:b,handler:b.onEncounterUpdate}]}))),b.enableCPT&&a("access_enc_cpt")&&(b.CurrentProceduralTerminology=b.administrativeTabPanel.add(Ext.create("App.view.patient.encounter.CurrentProceduralTerminology",{title:_("current_procedural_terminology")}))),b.enableEncHistory&&a("access_enc_history")&&(b.EncounterEventHistory=b.administrativeTabPanel.add(Ext.create("App.ux.grid.EventHistory",{bodyStyle:0,title:_("encounter_history"),store:b.encounterEventHistoryStore}))),b.rightPanel=Ext.create("Ext.tab.Panel",{title:_("encounter_progress_note"),width:500,region:"east",split:!0,collapsible:!0,animCollapse:!0,collapsed:!0,bodyPadding:0,margin:0,padding:0,itemId:"EncounterProgressNotesPanel",listeners:{scope:this,collapse:b.progressNoteCollapseExpand,expand:b.progressNoteCollapseExpand},items:[{xtype:"progressnoteshistory",itemId:"EncounterProgressNotesHistoryGrid"},b.progressNote=Ext.create("App.view.patient.ProgressNote",{title:_("progress_note"),autoScroll:!0,bodyPadding:0,margin:0,padding:0,tbar:["->",{xtype:"tool",type:"print",tooltip:_("print_progress_note"),scope:b,handler:function(){var a=window.open("print.html","win","left=20,top=20,width=700,height=700,toolbar=0,resizable=1,location=1,scrollbars=1,menubar=0,directories=0"),c=b.progressNote.body.dom,d=document.createElement("div"),e=d.appendChild(c.cloneNode(!0));a.document.write(e.innerHTML),Ext.defer(function(){a.print()},1e3)}}]})]}),b.panelToolBar=Ext.create("Ext.toolbar.Toolbar",{dock:"top",defaults:{scope:b,handler:b.onToolbarBtnHandler},items:["-",{text:_("immunizations")+" ",action:"immunization"},"-",{text:_("allergies")+" ",action:"allergies"},"-",{text:_("active_problems")+" ",action:"activeproblems"},"-",{text:_("family_history")+" ",action:"familyhistory"},"-",{text:_("advance_directives")+" ",action:"advancedirectives"},"-",{text:_("medications")+" ",action:"medications"},"-",{text:_("results")+" ",action:"laboratories"},"-",{text:_("social")+" ",action:"social"},"-",{text:_("functional_status")+" ",action:"functionalstatus"},"-",{text:_("referrals")+" ",action:"referrals"},"-",{text:_("new_doctors_note"),action:"DoctorsNotes"},"-",{text:_("lab_orders"),action:"LabOrders",cls:"order-btn"},"-",{text:_("xray_ct_orders"),action:"RadOrders",cls:"order-btn"},"-",{text:_("rx_orders"),action:"RxOrderGrid",cls:"order-btn"},"-","->","-",{xtype:"button",action:"encounter",text:_("encounter_details")},"-",b.priorityCombo=Ext.create("App.ux.combo.EncounterPriority",{listeners:{scope:b,select:b.prioritySelect}}),"-"]}),a("access_encounter_checkout")&&b.panelToolBar.add({text:_("sign"),icon:"resources/images/icons/edit.png",handler:b.onSignEncounter},"-"),b.pageBody=[b.centerPanel,b.rightPanel],b.listeners={beforerender:b.beforePanelRender},b.callParent(),b.down("panel").addDocked(b.panelToolBar)},onToolbarBtnHandler:function(a){"encounter"==a.action?app.updateEncounter(this.encounter):app.onMedicalWin(a.action)},onChartWindowShow:function(){app.onChartsWin()},prioritySelect:function(a,b){this.changeEncounterPriority(b[0].data.option_value)},changeEncounterPriority:function(a){var b=this,c={pid:b.pid,eid:b.eid,priority:a};Encounter.updateEncounterPriority(c,function(){app.patientButtonRemoveCls(),app.patientBtn.addCls(a)}),b.getProgressNote()},onEncounterUpdate:function(b){var c,d,e,f,g=this;c="encounter"==b.action?g.newEncounterWindow.down("form").getForm():b.up("form").getForm(),c.isValid()&&(d=c.getValues(),"encounter"==b.action?a("add_encounters")?(f=c.getRecord(),f.set(d),f.save({callback:function(a){var c=a.data;app.patientButtonRemoveCls(),app.patientBtn.addCls(c.priority),g.openEncounter(c.eid),b.up("window").hide(),app.AuditLog("Patient encounter created")}})):(b.up("window").close(),app.accessDenied()):a("edit_encounters")?(f=c.getRecord(),e=f.store,d=g.addDefaultData(d),f.set(d),app.fireEvent("encounterbeforesync",g,e,c),e.sync({callback:function(){app.fireEvent("encountersync",g,e,c),g.msg("Sweet!",_("encounter_updated")),app.AuditLog("Patient encounter updated")}}),g.encounterEventHistoryStore.load({filters:[{property:"eid",value:g.eid}]})):app.accessDenied())},addDefaultData:function(a){return a.pid=this.pid,a.eid=this.eid,a.uid=user.id,a.date=Ext.Date.format(new Date,"Y-m-d H:i:s"),a},openEncounter:function(a){var b,c=this;c.el.mask(_("loading...")+" "+_("encounter")+" - "+a),c.resetTabs(),app.AuditLog("Patient encounter viewed"),c.encounter&&delete c.encounter,App.model.patient.Encounter.load(a,{scope:c,callback:function(a){c.encounter=a;var d=c.encounter.data;if(c.pid=d.pid,c.eid=d.eid,c.currEncounterStartDate=d.service_date,app.fireEvent("beforeencounterload",c.encounter),c.getProgressNote(),d.close_date){if(c.stopTimer()){var e=c.timer(d.service_date,d.close_date),f=app.patient;c.updateTitle(f.name+" - "+f.sexSymbol+" - "+f.age.str+" - "+Ext.Date.format(c.currEncounterStartDate,"F j, Y, g:i:s a")+" ("+_("closed_encounter")+")",app.patient.readOnly,e),c.setButtonsDisabled(c.getButtonsToDisable(),!0)}}else c.startTimer(),c.setButtonsDisabled(c.getButtonsToDisable());c.reviewSysPanel&&(b=c.encounter.reviewofsystems(),b.on("write",c.getProgressNote,c),c.reviewSysPanel.getForm().loadRecord(b.getAt(0))),c.reviewSysCkPanel&&(b=c.encounter.reviewofsystemschecks(),b.on("write",c.getProgressNote,c),c.reviewSysCkPanel.getForm().loadRecord(b.getAt(0))),c.soapPanel&&(b=c.encounter.soap(),b.on("write",c.getProgressNote,c),c.soapPanel.down("form").getForm().loadRecord(b.getAt(0))),c.MiscBillingOptionsPanel&&(b=c.encounter.hcfaoptions(),c.MiscBillingOptionsPanel.getForm().loadRecord(b.getAt(0))),c.priorityCombo.setValue(d.priority),c.encounterEventHistoryStore.load({filters:[{property:"eid",value:c.eid}]}),c.CurrentProceduralTerminology&&c.CurrentProceduralTerminology.encounterCptStoreLoad(c.pid,c.eid,function(){c.CurrentProceduralTerminology.setDefaultQRCptCodes()}),App.app.getController("patient.ProgressNotesHistory").loadPatientProgressHistory(d.pid,d.eid),app.setEncounterClose(a.isClose()),app.fireEvent("encounterload",c.encounter),c.el.unmask()
}})},doSignEncounter:function(b){var c,d,e=this;e.passwordVerificationWin(function(f,g){"ok"==f&&(c=app.checkoutWindow.down("form").getForm(),d=c.getValues(),d.eid=e.eid,d.signature=g,d.isSupervisor=b,a("require_enc_supervisor")||b?(d.requires_supervisor=!0,d.supervisor_uid=app.checkoutWindow.coSignCombo.getValue()):b||a("require_enc_supervisor")||(d.requires_supervisor=!1),Encounter.signEncounter(d,function(a,c){if(c.result.success){if(e.stopTimer()){var f={pid:e.pid,eid:e.eid,uid:app.user.id,type:"checkout",date:new Date};f.body=d.note,""!==f.body&&Ext.create("App.model.patient.Notes",f).save(),f.body=d.reminder,""!==f.body&&Ext.create("App.model.patient.Reminders",f).save(),app.patient.eid=null,app.openPatientVisits(),app.AuditLog("Patient encounter "+(b?"co-signed":"signed")),e.msg("Sweet!",_("encounter_closed")),app.checkoutWindow.close()}}else Ext.Msg.show({title:"Oops!",msg:_(c.result.error),buttons:Ext.Msg.OK,icon:Ext.Msg.ERROR})}))})},onSignEncounter:function(){var a=app.patient.name+" #"+app.patient.pid+" - "+Ext.Date.format(this.currEncounterStartDate,"F j, Y, g:i:s a")+" ("+_("checkout")+")";app.checkoutWindow.enc=this,app.checkoutWindow.setTitle(a),app.checkoutWindow.show()},isClose:function(){return"undefined"!=typeof this.encounter.data.close_date&&null!=this.encounter.data.close_date},isSigned:function(){return"undefined"!=typeof this.encounter.data.provider_uid&&null!=this.encounter.data.provider_uid&&0!=this.encounter.data.provider_uid},progressNoteCollapseExpand:function(){this.centerPanel.doLayout()},getProgressNote:function(){},onTapPanelChange:function(){},startTimer:function(){return Ext.TaskManager.start(this.timerTask),!0},stopTimer:function(){return Ext.TaskManager.stop(this.timerTask),!0},encounterTimer:function(){var a=this,b=a.timer(a.currEncounterStartDate,new Date);null!==app.patient.pid?a.updateTitle(app.patient.name+" - "+app.patient.sexSymbol+" - "+app.patient.age.str+" - "+Ext.Date.format(a.currEncounterStartDate,"F j, Y, g:i:s a")+" ("+_("open_encounter")+")",app.patient.readOnly,b):a.stopTimer()},timer:function(a,b){function c(a){return a>=10?a:"0"+a}var d,e=Ext.Date.getElapsed(a,b),f=Math.floor(e/1e3),g=Math.floor(f/60);f%=60,d=c(f);var h=Math.floor(g/60);g%=60,d=c(g)+":"+d;var i=Math.floor(h/24);return h%=24,d=c(h)+":"+d,d=0==i?'<span class="time">'+d+"</span>":'<span class="day">'+i+" "+_("day_s")+'</span><span class="time">'+d+"</span>"},beforePanelRender:function(){var a=this,b=function(){return[{name:"id",type:"int"},{name:"pid",type:"int"},{name:"eid",type:"int"},{name:"uid",type:"int"}]};a.reviewSysPanel&&a.getFormItems(a.reviewSysPanel,8,function(){}),a.reviewSysCkPanel&&a.getFormItems(a.reviewSysCkPanel,9,function(){for(var c=a.reviewSysCkPanel.getForm().getFields(),d=new b,e=0;e<c.items.length;e++)d.push({name:c.items[e].name,type:"auto"});Ext.define("App.model.patient.ReviewOfSystemsCheck",{extend:"Ext.data.Model",fields:d,proxy:{type:"direct",api:{update:"Encounter.updateReviewOfSystemsChecks"}},belongsTo:{model:"App.model.patient.Encounter",foreignKey:"eid"}})})},getButtonsToDisable:function(){var a=this,b=[];return(null===a.ButtonsToDisable||"undefined"==typeof a.ButtonsToDisable)&&(a.vitalsPanel&&b.concat(b,a.vitalsPanel.query("button")),a.reviewSysPanel&&b.concat(b,a.reviewSysPanel.query("button")),a.reviewSysCkPanel&&b.concat(b,a.reviewSysCkPanel.query("button")),a.soapPanel&&b.concat(b,a.soapPanel.down("form").query("button")),a.MiscBillingOptionsPanel&&b.concat(b,a.MiscBillingOptionsPanel.query("button")),a.CurrentProceduralTerminology&&b.concat(b,a.CurrentProceduralTerminology.query("button")),a.EncounterEventHistory&&b.concat(b,a.EncounterEventHistory.query("button")),a.newEncounterWindow&&b.concat(b,a.newEncounterWindow.query("button")),app.checkoutWindow&&b.concat(b,app.checkoutWindow.query("button")),a.ButtonsToDisable=b),a.ButtonsToDisable},resetTabs:function(){var a=this;a.renderAdministrative&&a.centerPanel.setActiveTab(0),a.encounterTabPanel&&a.encounterTabPanel.setActiveTab(0),a.administrativeTabPanel&&a.administrativeTabPanel.setActiveTab(0),a.rightPanel&&a.rightPanel.setActiveTab(0)},onDocumentView:function(a,b){var c=a.getStore().getAt(b),d=c.data.url;app.onDocumentView(d)},onActive:function(a){var b=this,c=app.patient;if(c.pid&&c.eid)b.updateTitle(c.name+" ("+_("visits")+")",c.readOnly,null),b.setReadOnly(c.readOnly),a(!0);else{a(!1);var d=null===c.eid?"Please create a new encounter or select one from the patient encounter history":null;b.currPatientError(d)}}}),Ext.define("App.view.Viewport",{extend:"Ext.Viewport",user:window.user,version:window.version,minWidthToFullMode:1700,currency:g("gbl_currency_symbol"),patientImage:"resources/images/patientPhotoPlaceholder.jpg",enablePoolAreaFadeInOut:eval(g("enable_poolarea_fade_in_out")),initComponent:function(){Ext.state.Manager.setProvider(Ext.create("Ext.state.CookieProvider")),Ext.tip.QuickTipManager.init();var me=this;me.user.getFullName=function(){var a=me.user.title+" "+me.user.fname+" "+me.user.mname+" "+me.user.lname;return a.replace("  "," ").trim()},me.nav=me.getController("Navigation"),me.cron=me.getController("Cron"),me.log=me.getController("LogOut"),me.dual=me.getController("DualScreen"),me.notification=me.getController("Notification"),me.logged=!0,eval(g("enable_dual_monitor"))&&me.dual.startDual(),me.lastCardNode=null,me.prevNode=null,me.fullMode=window.innerWidth>=me.minWidthToFullMode,me.patient={pid:null,pubpid:null,name:null,pic:null,sex:null,sexSymbol:null,dob:null,age:null,eid:null,priority:null,readOnly:!1,rating:null},me.patientPoolStore=Ext.create("App.store.areas.PatientAreas"),"$"==me.currency?me.icoMoney="icoDollar":"€"==me.currency?me.icoMoney="icoEuro":"£"==me.currency?me.icoMoney="icoLibra":"¥"==me.currency&&(me.icoMoney="icoYen"),me.Header=Ext.create("Ext.container.Container",{region:"north",height:44,split:!1,collapsible:!1,collapsed:!1,frame:!1,border:!1,cls:"appHeader",bodyStyle:"background: transparent",margins:"0 0 0 0",layout:"hbox"}),me.HeaderLeft=Ext.widget("container",{margin:0,flex:1,layout:"hbox",itemId:"AppHeaderLeft"}),me.HeaderRight=Ext.widget("container",{margin:0,layout:"hbox",itemId:"AppHeaderRight"}),me.HeaderLeft.add({xtype:"button",scale:"large",margin:"0 3 0 0",cls:"headerLargeBtn",padding:0,iconCls:"icoHome",scope:me,handler:me.openDashboard,tooltip:_("patient_visits_history")}),me.HeaderLeft.add({xtype:"button",scale:"large",margin:"0 3 0 0",cls:"headerLargeBtn",padding:0,iconCls:"icoCalendar2",scope:me,handler:me.openCalendar,tooltip:_("patient_visits_history")}),me.HeaderLeft.add({xtype:"tbseparator"}),me.patientBtn=me.HeaderLeft.add({xtype:"button",scale:"large",margin:"0 3 0 0",style:"height: 42px",tooltip:_("patient_btn_drag"),listeners:{scope:me,afterrender:me.patientBtnRender},tpl:me.patientBtnTpl()}),me.HeaderLeft.add({xtype:"tbseparator"}),me.patientSummaryBtn=me.HeaderLeft.add({xtype:"button",scale:"large",margin:"0 3 0 0",cls:"headerLargeBtn",padding:0,iconCls:"icoPatientInfo",scope:me,handler:me.openPatientSummary,tooltip:_("patient_summary")}),a("access_patient_visits")&&(me.patientOpenVisitsBtn=me.HeaderLeft.add({xtype:"button",scale:"large",margin:"0 3 0 0",cls:"headerLargeBtn",padding:0,iconCls:"icoBackClock",scope:me,handler:me.openPatientVisits,tooltip:_("patient_visits_history")})),a("add_encounters")&&(me.patientCreateEncounterBtn=me.HeaderLeft.add({xtype:"button",scale:"large",margin:"0 3 0 0",cls:"headerLargeBtn",padding:0,iconCls:"icoClock",scope:me,handler:me.createNewEncounter,tooltip:_("new_encounter")})),me.patientCloseCurrEncounterBtn=me.HeaderLeft.add({xtype:"button",scale:"large",margin:"0 3 0 0",cls:"headerLargeBtn",padding:0,iconCls:"icoArrowDown",scope:me,handler:me.stowPatientRecord,tooltip:_("stow_patient_record")}),a("access_patient_search")&&me.HeaderLeft.add({xtype:"panel",bodyPadding:"8 11 5 11",margin:"0 3 0 0",items:[{xtype:"patienlivetsearch",emptyText:_("patient_live_search")+"...",width:300,listeners:{scope:me,select:me.liveSearchSelect,blur:function(a){a.reset()}}}]}),a("add_patient")&&me.HeaderLeft.add({xtype:"button",scale:"large",margin:"0 3 0 0",padding:4,itemId:"patientNewReset",iconCls:"icoAddPatient",scope:me,handler:me.newPatient,tooltip:_("create_a_new_patient")}),a("create_emergency_encounter")&&me.HeaderLeft.add({xtype:"button",scale:"large",margin:"0 3 0 0",cls:"headerLargeBtn emerBtn",overCls:"emerBtnOver",padding:0,itemId:"createEmergency",iconCls:"icoEmer",scope:me,handler:me.createEmergency,tooltip:_("create_new_emergency")}),a("access_floor_plan_panel")&&me.HeaderRight.add({xtype:"button",scale:"large",margin:"0 3 0 0",cls:"headerLargeBtn",padding:0,itemId:"floorPlans",iconCls:"icoZoneAreasBig",scope:me,handler:me.goToFloorPlans,tooltip:_("floor_plans")}),a("access_pool_areas_panel")&&me.HeaderRight.add({xtype:"button",scale:"large",margin:"0 3 0 0",cls:"headerLargeBtn",padding:0,itemId:"patientPoolArea",iconCls:"icoPoolArea",scope:me,handler:me.goToPoolAreas,tooltip:_("pool_areas")}),a("access_poolcheckin")&&me.HeaderRight.add({xtype:"button",scale:"large",margin:"0 3 0 0",cls:"headerLargeBtn",padding:0,itemId:"patientCheckIn",iconCls:"icoCheckIn",scope:me,handler:me.onPatientLog,tooltip:_("arrival_log")}),me.userSplitBtn=me.HeaderRight.add({xtype:"button",text:me.user.title+" "+me.user.lname,scale:"large",iconCls:isEmerAccess?"icoUnlocked32":"icoDoctor",iconAlign:"left",style:"height: 42px",plugins:[{ptype:"badgetext",defaultText:0}],itemId:"userSplitButton",cls:"drButton",margin:0,menu:[{text:_("my_account"),iconCls:"icoUser",handler:function(){me.nav.navigateTo("App.view.miscellaneous.MyAccount")}},{text:_("logout"),iconCls:"icoLogout",action:"logout"}]}),a("emergency_access")&&me.userSplitBtn.menu.insert(0,{text:_("emergency_access"),cls:"emergency",iconCls:"icoUnlocked",scope:me,handler:me.onEmergencyAccessClick}),me.Header.add([me.HeaderLeft,me.HeaderRight]),me.navColumn=Ext.create("Ext.panel.Panel",{title:_("navigation"),action:"mainNavPanel",layout:"border",region:g("main_navigation_menu_left"),width:parseFloat(g("gbl_nav_area_width")),split:!0,collapsible:!0,collapsed:!1,stateId:"mainNavPanel",stateful:!0,items:[{xtype:"treepanel",region:"center",action:"mainNav",cls:"nav_tree",hideHeaders:!0,rootVisible:!1,border:!1,width:parseFloat(g("gbl_nav_area_width")),store:Ext.create("App.store.navigation.Navigation",{autoLoad:!0})},me.patientPoolArea=Ext.create("Ext.Panel",{title:_("patient_pool_areas"),region:"south",action:"patientPoolArea",bodyPadding:5,height:25,cls:"patient-pool",split:!0,collapsible:!0,border:!1,overflowY:"auto",items:[{xtype:"dataview",loadMask:!1,cls:"patient-pool-view",tpl:new Ext.XTemplate('<tpl for="."><div class="patient-pool-btn x-btn x-btn-default-large {priority}"><div class="patient_btn_img"><img src="{[this.getPatientImage(values.patient)]}" width="50" height="50"></div><div class="patient_btn_info"><div class="patient-name">{shortName}</div><div class="patient-name">({poolArea})</div></div></div></tpl>',{getPatientImage:function(a){return a.image?a.image:me.patientImage}}),itemSelector:"div.patient-pool-btn",overItemCls:"patient-over",selectedItemClass:"patient-selected",singleSelect:!0,store:me.patientPoolStore,listeners:{scope:me,render:me.onEncounterDragZoneRender}}]})],dockedItems:[{xtype:"toolbar",dock:"bottom",border:!0,margin:"3 0 0 0",padding:5,layout:{type:"hbox",pack:"center"},items:["-",{xtype:"button",frame:!0,text:"GaiaEHR Support",iconCls:"icoHelp",action:"supportBtn",src:"http://gaiaehr.org/forums/"},"-"]}]}),me.MainPanel=Ext.create("Ext.container.Container",{region:"center",layout:"card",border:!0,itemId:"MainPanel",defaults:{layout:"fit",xtype:"container"},listeners:{scope:me,afterrender:me.initializeOpenEncounterDropZone}}),me.nav.App_view_dashboard_Dashboard=me.MainPanel.add(Ext.create("App.view.dashboard.Dashboard")),me.nav.App_view_areas_FloorPlan=me.MainPanel.add(Ext.create("App.view.areas.FloorPlan")),me.nav.App_view_areas_PatientPoolAreas=me.MainPanel.add(Ext.create("App.view.areas.PatientPoolAreas")),me.Footer=Ext.create("Ext.container.Container",{height:30,split:!1,padding:"3 0",region:"south",action:"appFooter",items:[{xtype:"dataview",margin:"0 0 3 0",hidden:!0,hideMode:"offsets",cls:"patient-pool-view-footer x-toolbar x-toolbar-default x-box-layout-ct",tpl:'<div class="x-toolbar-separator x-toolbar-item x-toolbar-separator-horizontal" style="float:left; margin-top:5px;" role="presentation" tabindex="-1"></div><tpl for="."><div class="patient-pool-btn-small x-btn x-btn-default-small {priority}" style="float:left"><div class="patient_btn_info"><div class="patient-name">{name} ({pid})</div></div></div><div class="x-toolbar-separator x-toolbar-item x-toolbar-separator-horizontal" style="float:left; margin-top:5px; margin-left:3px;" role="presentation" tabindex="-1"></div></tpl>',itemSelector:"div.patient-pool-btn-small",overItemCls:"patient-over",selectedItemClass:"patient-selected",singleSelect:!0,loadMask:!1,store:me.patientPoolStore,listeners:{scope:me,render:me.onEncounterDragZoneRender}},{xtype:"toolbar",dock:"bottom",items:[{xtype:"activefacilitiescombo",emptyText:"Facilities",width:parseFloat(g("gbl_nav_area_width"))-4,hidden:!eval(a("access_to_other_facilities")),listeners:{scope:me,select:me.onFacilitySelect}},"-",{text:"Copyright (C) 2011 GaiaEHR (Electronic Health Records) |:|  Open Source Software operating under GPLv3 |:| v"+me.version,iconCls:"icoGreen",disabled:!0},"->",{text:_("news"),action:"supportBtn",src:"http://GaiaEHR.org/projects/GaiaEHR001/news"},"-",{text:_("wiki"),action:"supportBtn",src:"http://gaiaehr.org/"},"-",{text:_("issues"),action:"supportBtn",src:"http://gaiaehr.org:8181/issues/?jql="},"-",{text:_("forums"),action:"supportBtn",src:"http://gaiaehr.org/forums/"},"-",{text:'<span style="color: red">'+_("FACTORY RESET")+"</span>",scope:me,hidden:"localhost"!=window.location.hostname,handler:me.resetApp}]}]}),me.FacilityCmb=me.Footer.query("activefacilitiescombo")[0],me.FacilityCmb.getStore().on("load",me.onFacilityComboLoad,me),me.MedicalWindow=Ext.create("App.view.patient.windows.Medical"),me.ChartsWindow=Ext.create("App.view.patient.windows.Charts"),me.PaymentEntryWindow=Ext.create("App.view.fees.PaymentEntryWindow"),me.newEncounterWindow=Ext.create("App.view.patient.windows.NewEncounter"),a("access_encounter_checkout")&&(me.checkoutWindow=Ext.create("App.view.patient.windows.EncounterCheckOut")),me.layout={type:"border",padding:3},me.defaults={split:!0},me.items=[me.Header,me.navColumn,me.MainPanel,me.Footer],me.listeners={scope:me,render:me.appRender,beforerender:me.beforeAppRender},me.callParent(arguments),me.signature=Ext.create("App.view.signature.SignatureWindow")},getUserFullname:function(){return this.user.title+" "+this.user.fname+" "+this.user.mname+" "+this.user.lname},getController:function(a){return App.Current.getController(a)},onFacilitySelect:function(a,b){var c=this;Facilities.setFacility(b[0].data.option_value,function(a,d){b[0].data.option_value==d.result&&(app.user.facility=b[0].data.option_value,c.msg(_("sweet"),_("facility")+" "+b[0].data.option_name),c.setWindowTitle(b[0].data.option_name),c.nav.App_view_areas_PatientPoolDropZone.reRenderPoolAreas(),c.nav.App_view_areas_FloorPlan.renderZones(),c.getPatientsInPoolArea())})},onFacilityComboLoad:function(a){var b=a.findRecord("option_value",this.user.facility);this.FacilityCmb.setValue(b),this.setWindowTitle(b.data.option_name)},setWindowTitle:function(a){window.document.title="GaiaEHR :: "+a},AuditLog:function(a){Ext.create("App.model.administration.AuditLog",{eid:this.patient.eid,pid:this.patient.pid,event:a}).save({callback:function(){delete this}})},onMedicalWin:function(a){this.MedicalWindow.show(),this.MedicalWindow.cardSwitch(a)},onChartsWin:function(){this.ChartsWindow.show()},onWebCamComplete:function(){var a=this.getActivePanel();"panelSummary"==a.id&&a.demographics.completePhotoId(),this.msg("Sweet!",_("patient_image_saved"))},onPatientLog:function(){this.patientArrivalLog?this.patientArrivalLog.show():this.patientArrivalLog=Ext.create("App.view.patient.windows.ArrivalLog").show()},onPaymentEntryWindow:function(){this.PaymentEntryWindow.show()},newPatient:function(){this.nav.navigateTo("App.view.patient.NewPatient")},createEmergency:function(){var a,b=this;Ext.Msg.show({title:_("wait")+"!!!",msg:_("are_you_sure_you_want_to_create_a_new")+' <span style="color: red">"'+_("emergency")+'"</span>?',buttons:Ext.Msg.YESNO,icon:Ext.Msg.WARNING,fn:function(c){"yes"==c&&Emergency.createNewEmergency(function(c,d){a=d.result.emergency,d.result.success&&(b.setPatient(a.pid,a.eid,null,function(){b.openEncounter(a.eid)}),b.msg("Sweet!",a.name+" "+_("created")))})}})},onEmergencyAccessClick:function(){var a=this;Ext.Msg.show({title:_("wait"),msg:_("emergency_access_question")+"<br>"+_("emergency_access_disclaimer"),buttons:Ext.Msg.YESNO,icon:Ext.Msg.QUESTION,fn:function(b){"yes"==b&&a.doEmergencyAccess()}})},doEmergencyAccess:function(){ACL.emergencyAccess(app.user.id,function(a){return a?void(window.location="./"):void Ext.Msg.alert(_("oops"),_("emergency_access_error"))})},createNewEncounter:function(){var b=this;a("access_encounters")&&a("add_encounters")?b.newEncounterWindow.show():b.accessDenied()},updateEncounter:function(b){var c=this;a("access_encounters")&&a("edit_encounters")?(c.newEncounterWindow.loadRecord(b),c.newEncounterWindow.show()):c.accessDenied()},openPatientSummary:function(){var a=this,b=a.nav.getNavRefByClass("App.view.patient.Summary"),c=a.nav[b];c&&c==a.nav.activePanel&&c.loadPatient(),a.nav.navigateTo("App.view.patient.Summary")},openDashboard:function(){var a=this,b=a.nav.getNavRefByClass("App.view.dashboard.Dashboard"),c=a.nav[b];c&&c==a.nav.activePanel&&c.loadPatient(),a.nav.navigateTo("App.view.dashboard.Dashboard")},openCalendar:function(){{var a=this,b=a.nav.getNavRefByClass("Modules.appointments.view.Calendar");a.nav[b]}a.nav.navigateTo("Modules.appointments.view.Calendar")},stowPatientRecord:function(){this.unsetPatient(null,!0),this.nav.navigateTo("App.view.dashboard.Dashboard")},openEncounter:function(b){var c=this;a("access_encounters")?(app.patient.eid=b,c.nav.navigateTo("App.view.patient.Encounter",function(a){a&&Ext.Function.defer(function(){c.nav.getPanelByCls("App.view.patient.Encounter").openEncounter(b)},100)})):c.accessDenied()},checkOutPatient:function(){var a=this;this.nav.navigateTo("App.view.patient.VisitCheckout",function(b){b&&Ext.Function.defer(function(){a.nav.getPanelByCls("App.view.patient.VisitCheckout").setVisitPanel()},100)})},openPatientVisits:function(){this.nav.navigateTo("App.view.patient.Visits")},goToPoolAreas:function(){this.nav.navigateTo("App.view.areas.PatientPoolAreas")},goToFloorPlans:function(){this.nav.navigateTo("App.view.areas.FloorPlan")},getActivePanel:function(){return this.MainPanel.getLayout().getActiveItem()},liveSearchSelect:function(a,b){var c=this,d=b[0];d&&c.setPatient(d.get("pid"),null,null,function(){a.reset(),c.openPatientSummary()})},setEncounterClose:function(a){this.patient.encounterIsClose=a;for(var b=Ext.ComponentQuery.query("#encounterRecordAdd, button[action=encounterRecordAdd]"),c=0;c<b.length;c++)b[c].setDisabled(a||null==app.patient.eid)},setPatient:function(a,b,c,d){var e=this;e.unsetPatient(null,!0),Patient.getPatientSetDataByPid({pid:a,prevPid:e.patient.pid,site:c},function(a,c){function f(a){e.patient={pid:i.patient.pid,pubpid:i.patient.pubpid,name:i.patient.name,pic:i.patient.pic,sex:i.patient.sex,sexSymbol:"F"==i.patient.sex?"&#9792":"&#9794",dob:Ext.Date.parse(i.patient.dob,"Y-m-d H:i:s"),age:i.patient.age,eid:b,priority:i.patient.priority,readOnly:a,rating:i.patient.rating,record:Ext.create("App.model.patient.Patient",i.patient.record)},e.fireEvent("patientset",e.patient);for(var c=e.MainPanel.items.items,f=0;f<c.length;f++)c[f].pageRankingDiv&&c[f].pageRankingDiv.setValue(e.patient.rating);e.patientButtonSet(e.patient),e.patientSummaryBtn&&e.patientSummaryBtn.enable(),e.patientOpenVisitsBtn&&e.patientOpenVisitsBtn.enable(),e.patientCreateEncounterBtn&&e.patientCreateEncounterBtn.enable(),e.patientCloseCurrEncounterBtn&&e.patientCloseCurrEncounterBtn.enable(),e.patientCheckOutBtn&&e.patientCheckOutBtn.enable(),"function"==typeof d&&d(e.patient)}var g,h,i=c.result;i.readOnly?(g=i.user+" "+_("is_currently_working_with")+' "'+i.patient.name+'" '+_("in")+' "'+i.area+'" '+_("area")+".<br>"+_("override_read_mode_will_remove_the_patient_from_previous_user")+".<br>"+_("do_you_would_like_to_override_read_mode"),h=i.user+" "+_("is_currently_working_with")+' "'+i.patient.name+'" '+_("in")+' "'+i.area+'" '+_("area")+".<br>",Ext.Msg.show({title:_("wait")+"!!!",msg:i.overrideReadOnly?g:h,buttons:i.overrideReadOnly?Ext.Msg.YESNO:Ext.Msg.OK,icon:Ext.MessageBox.WARNING,fn:function(a){f("yes"!=a)}})):f(!1)})},unsetPatient:function(a,b){var c=this;if(b&&Patient.unsetPatient(c.patient.pid),c.currEncounterId=null,c.patient.record&&delete c.patient.record,c.patient={pid:null,pubpid:null,name:null,pic:null,sex:null,sexSymbol:null,dob:null,age:null,eid:null,priority:null,readOnly:!1,rating:null,record:null},c.patientButtonRemoveCls(),"function"==typeof a)a(!0);else{c.fireEvent("patientunset");for(var d=c.MainPanel.items.items,e=0;e<d.length;e++)d[e].pageRankingDiv&&d[e].pageRankingDiv.setValue(0);c.patientCreateEncounterBtn&&c.patientCreateEncounterBtn.disable(),c.patientSummaryBtn&&c.patientSummaryBtn.disable(),c.patientOpenVisitsBtn&&c.patientOpenVisitsBtn.disable(),c.patientCloseCurrEncounterBtn&&c.patientCloseCurrEncounterBtn.disable(),c.patientChargeBtn&&c.patientChargeBtn.disable(),c.patientCheckOutBtn&&c.patientCheckOutBtn.disable(),c.patientButtonSet()}},patientButtonSet:function(data){var me=this,patient=data||{},displayPid=eval(g("display_pubpid"))?patient.pubpid:patient.pid;(null==displayPid||""==displayPid)&&(displayPid=patient.pid),me.patientBtn.update({displayPid:displayPid||"record number",pid:patient.pid,pic:patient.pic||me.patientImage,name:patient.name||_("no_patient_selected")}),me.patientButtonRemoveCls(),patient.priority&&me.patientBtn.addCls(data.priority),me.patientBtn.setDisabled(!patient.pid)},patientButtonRemoveCls:function(){var a=this;a.patientBtn.removeCls("Minimal"),a.patientBtn.removeCls("Delayed"),a.patientBtn.removeCls("Immediate"),a.patientBtn.removeCls("Expectant"),a.patientBtn.removeCls("Deceased")},patientBtnTpl:function(){return Ext.create("Ext.XTemplate",'<div class="patient_btn  {priority}">','   <div class="patient_btn_img">       <img src="{pic}" width="50" height="50">   </div>','   <div class="patient_btn_info">','       <div class="patient_btn_name">{name}</div>','       <div class="patient_btn_record">( {displayPid} )</div>',"   </div>","</div>")},patientBtnRender:function(a){this.patientButtonSet(),this.initializePatientPoolDragZone(a)},getPatientsInPoolArea:function(){var a=this,b=a.patientPoolArea,c=35;this.patientPoolStore.load({extraPrams:{uid:a.user.id},callback:function(d){if(d.length>=1)for(var e=0;e<d.length;e++)c+=45;else c=25;a.navColumn.collapsed!==!1||a.navColumn.isCollapsingOrExpanding||(c=c>300?300:c,b.down("dataview").refresh(),b.setHeight(c))}}),a.nav.App_view_areas_PatientPoolAreas.isVisible()&&a.nav.App_view_areas_PatientPoolAreas.reloadStores()},initializePatientPoolDragZone:function(a){a.dragZone=Ext.create("Ext.dd.DragZone",a.getEl(),{ddGroup:"patientPoolAreas",getDragData:function(){if(app.patient.pid){var b,c=a.getEl().dom;if(c)return b=document.createElement("div"),b.id=Ext.id(),b.innerHTML=_("drag_patient_to_new_area"),a.dragData={copy:!0,sourceEl:c,repairXY:Ext.fly(c).getXY(),ddel:b,records:[a.data],patient:!0}}},getRepairXY:function(){return this.dragData.repairXY},onBeforeDrag:function(){return app.nav.navigateTo("App.view.areas.PatientPoolAreas"),!0}})},onEncounterDragZoneRender:function(a){this.initializeOpenEncounterDragZone(a),this.enablePoolAreaFadeInOut&&(a.el.setStyle({opacity:.1}),a.el.on("mouseenter",function(a,b){Ext.create("Ext.fx.Animator",{target:b,duration:200,keyframes:{0:{opacity:.1},100:{opacity:1}}})}),a.el.on("mouseleave",function(a,b){Ext.create("Ext.fx.Animator",{target:b,duration:200,keyframes:{0:{opacity:1},100:{opacity:.1}}})}))},initializeOpenEncounterDragZone:function(a){a.dragZone=Ext.create("Ext.dd.DragZone",a.getEl(),{ddGroup:"patient",newGroupReset:!0,b4MouseDown:function(b){if(this.newGroupReset){var c=b.getTarget(a.itemSelector,10),d=a.getRecord(c).data;this.removeFromGroup(this.ddGroup),0!=d.floorPlanId&&0==d.patientZoneId?(app.nav.navigateTo("App.view.areas.FloorPlan"),this.ddGroup="patientPoolAreas"):(this.ddGroup="patient",app.MainPanel.el.mask(_("drop_here_to_open")+' <strong>"'+a.getRecord(c).data.name+'"</strong> '+_("current_encounter"))),this.addToGroup(this.ddGroup),this.newGroupReset=!1}this.autoOffset(b.getPageX(),b.getPageY())},endDrag:function(){this.newGroupReset=!0},getDragData:function(b){var c,d=b.getTarget(a.itemSelector,10),e=a.getRecord(d).data;return d?(c=d.cloneNode(!0),c.id=Ext.id(),a.dragData={sourceEl:d,repairXY:Ext.fly(d).getXY(),ddel:c,patientData:e}):!1},getRepairXY:function(){return app.MainPanel.el.unmask(),this.newGroupReset=!0,this.dragData.repairXY}})},onDocumentView:function(a,b,c){app.getController("DocumentViewer").doDocumentView(a,b,c)},initializeOpenEncounterDropZone:function(b){var c=this;b.dropZone=Ext.create("Ext.dd.DropZone",b.getEl(),{ddGroup:"patient",notifyOver:function(){return Ext.dd.DropZone.prototype.dropAllowed},notifyDrop:function(b,d,e){app.MainPanel.el.unmask(),e.patientData.eid&&"Check Out"==e.patientData.poolArea||e.patientData.eid&&a("access_encounters")||null===e.patientData.floorPlanId||0===e.patientData.floorPlanId,c.setPatient(e.patientData.pid,e.patientData.eid,null,function(){e.patientData.eid&&"Checkout"==e.patientData.poolArea?c.checkOutPatient(e.patientData.eid):e.patientData.eid&&a("access_encounters")?c.openEncounter(e.patientData.eid):c.openPatientSummary()})}})},appRender:function(){this.loadModules()},loadModules:function(){Modules.getEnabledModules(function(a,b){for(var c=b.result,d=0;d<c.length;d++)try{App.app.getController("Modules."+c[d].dir+".Main")}catch(e){app.msg(_("oops"),_("unable_to_load_module")+" "+c[d].title+"<br>Error: "+e,!0)}app.doLayout()})},removeAppMask:function(){Ext.get("mainapp-loading")&&Ext.get("mainapp-loading").remove(),Ext.get("mainapp-loading-mask")&&Ext.get("mainapp-loading-mask").fadeOut({remove:!0})},beforeAppRender:function(){var a=this,b=a.nav.getUrlParams();b[1]?a.setPatient(b[1],null,null,function(){Ext.Function.defer(function(){a.nav.navigateTo("App.view.patient.Summary")},500)}):a.unsetPatient(null,!1)},getCurrPatient:function(){return this.patient.pid},getApp:function(){return this},accessDenied:function(){Ext.Msg.show({title:_("oops"),msg:_("access_denied"),buttons:Ext.Msg.OK,icon:Ext.Msg.ERROR})},msg:function(a,b,c,d){var e=c===!0?"msg-red":"msg-green";"string"==typeof c&&(e="msg-"+c),this.msgCt=Ext.get("msg-div"),this.msgCt||(this.msgCt=Ext.fly("msg-div"));var f=Ext.String.format.apply(String,Array.prototype.slice.call(arguments,1)),g=Ext.core.DomHelper.append(this.msgCt,{html:'<div class="flyMsg '+e+'"><h3>'+(a||"")+"</h3><p>"+f+"</p></div>"},!0);return this.msgCt.alignTo(document,"t-t"),d===!0?g:(g.addCls("fadeded"),Ext.create("Ext.fx.Animator",{target:g,duration:c===!0?8e3:3e3,keyframes:{0:{opacity:0},10:{opacity:1},80:{opacity:1},100:{opacity:0,height:0}},listeners:{afteranimate:function(a){a.target.target.destroy()}}}),g.on("click",function(){g.applyStyles("visibility:hidden; display:none")}),!0)},alert:function(a,b){b="error"==b?Ext.Msg.ERROR:"warning"==b?Ext.Msg.WARNING:"question"==b?Ext.Msg.QUESTION:Ext.Msg.INFO,Ext.Msg.show({msg:a,buttons:Ext.Msg.OK,icon:b,maxWidth:1200,modal:!1})},resetApp:function(){Ext.Msg.show({title:"WAIT!!! FOR DEBUG ONLY",msg:"This will erase all patients and related data. Do you want to continue?",buttons:Ext.Msg.YESNO,icon:Ext.Msg.QUESTION,fn:function(a){"yes"==a&&Ext.Ajax.request({url:"sql/factoryReset.php",success:function(a){alert(a.responseText)}})}})},fullname:function(a,b,c,d){var e="";return a&&(e+=a+" "),b&&(e+=b+" "),c&&(e+=c+" "),d&&(e+=d+" "),e}}),Ext.define("App.ux.form.fields.UploadBase64",{extend:"Ext.window.Window",requires:["Ext.form.field.File"],xtype:"uploadbase64field",bodyPadding:10,base64:"",ready:!1,title:_("upload"),items:[{xtype:"fileuploadfield",width:300}],buttons:[{text:_("cancel")},{text:_("upload")}],allowExtensions:null,initComponent:function(){var a=this;a.callParent(),a.uValue="",a.uField=a.getComponent(0),a.uDock=a.getDockedItems('toolbar[dock="bottom"]')[0],a.uCancel=a.uDock.getComponent(0),a.uUpload=a.uDock.getComponent(1),a.uCancel.on("click",a.onCancel,a),a.uUpload.on("click",a.onUpload,a)},doUpload:function(){var a=this,b=new FileReader;if(a.uValue=a.uField.getValue(),a.allowExtensions){var c;if(c=new RegExp(Ext.isArray(a.allowExtensions)?a.allowExtensions.join("|"):a.allowExtensions+"$"),!c.exec(a.uValue))return void app.msg(_("oops"),Ext.String.format(_("only_extensions_{0}_allowed"),a.allowExtensions.join?a.allowExtensions.join(", "):a.allowExtensions),!0)}a.setReady(!1),b.onload=function(b){a.base64=b.target.result,a.setReady(!0),a.fireEvent("uploadready",a,a.base64),a.close()},b.readAsDataURL(a.uField.extractFileInput().files[0])},onCancel:function(){return this.close()},onUpload:function(){this.doUpload()},isReady:function(){return this.ready},setReady:function(a){return this.ready=a},getValue:function(){return this.uValue}}),Ext.define("App.ux.form.fields.BoxSelect",{extend:"Ext.form.field.ComboBox",alias:["widget.comboboxselect","widget.boxselect"],requires:["Ext.selection.Model","Ext.data.Store"],multiSelect:!0,forceSelection:!0,createNewOnEnter:!1,createNewOnBlur:!1,encodeSubmitValue:!1,triggerOnClick:!0,stacked:!1,pinList:!0,filterPickList:!1,selectOnFocus:!0,grow:!0,growMin:!1,growMax:!1,fieldSubTpl:['<div id="{cmpId}-listWrapper" class="x-boxselect {fieldCls} {typeCls}">','<ul id="{cmpId}-itemList" class="x-boxselect-list x-tab-default">','<li id="{cmpId}-inputElCt" class="x-boxselect-input">','<div id="{cmpId}-emptyEl" class="{emptyCls}">{emptyText}</div>','<input id="{cmpId}-inputEl" type="{type}" ','<tpl if="name">name="{name}" </tpl>','<tpl if="value"> value="{[Ext.util.Format.htmlEncode(values.value)]}"</tpl>','<tpl if="size">size="{size}" </tpl>','<tpl if="tabIdx">tabIndex="{tabIdx}" </tpl>','<tpl if="disabled"> disabled="disabled"</tpl>','class="x-boxselect-input-field {inputElCls}" autocomplete="off">',"</li>","</ul>","</div>",{compiled:!0,disableFormats:!0}],childEls:["listWrapper","itemList","inputEl","inputElCt","emptyEl"],componentLayout:"boxselectfield",emptyInputCls:"x-boxselect-emptyinput",initComponent:function(){var a=this,b=a.typeAhead;b&&!a.editable&&Ext.Error.raise("If typeAhead is enabled the combo must be editable: true -- please change one of those settings."),Ext.apply(a,{typeAhead:!1}),a.callParent(),a.typeAhead=b,a.selectionModel=new Ext.selection.Model({store:a.valueStore,mode:"MULTI",lastFocused:null,onSelectChange:function(a,b,c,d){d()}}),!Ext.isEmpty(a.delimiter)&&a.multiSelect&&(a.delimiterRegexp=new RegExp(String(a.delimiter).replace(/[$%()*+.?\[\\\]{|}]/g,"\\$&")))},initEvents:function(){var a=this;a.callParent(arguments),a.enableKeyEvents||a.mon(a.inputEl,"keydown",a.onKeyDown,a),a.mon(a.inputEl,"paste",a.onPaste,a),a.mon(a.listWrapper,"click",a.onItemListClick,a),a.mon(a.selectionModel,{selectionchange:function(b,c){a.applyMultiselectItemMarkup(),a.fireEvent("valueselectionchange",a,c)},focuschange:function(b,c,d){a.fireEvent("valuefocuschange",a,c,d)},scope:a})},onBindStore:function(a){var b=this;a&&(b.valueStore=new Ext.data.Store({model:a.model,proxy:{type:"memory"}}),b.mon(b.valueStore,"datachanged",b.applyMultiselectItemMarkup,b),b.selectionModel&&b.selectionModel.bindStore(b.valueStore))},onUnbindStore:function(){var a=this,b=a.valueStore;b&&(a.selectionModel&&(a.selectionModel.setLastFocused(null),a.selectionModel.deselectAll(),a.selectionModel.bindStore(null)),a.mun(b,"datachanged",a.applyMultiselectItemMarkup,a),b.destroy(),a.valueStore=null),a.callParent(arguments)
},createPicker:function(){var a=this,b=a.callParent(arguments);return a.mon(b,{beforerefresh:a.onBeforeListRefresh,scope:a}),a.filterPickList&&b.addCls("x-boxselect-hideselections"),b},onDestroy:function(){var a=this;Ext.destroyMembers(a,"valueStore","selectionModel"),a.callParent(arguments)},getSubTplData:function(){var a=this,b=a.callParent(),c=a.emptyText&&b.value.length<1;return b.value="",c?(b.emptyText=a.emptyText,b.emptyCls=a.emptyCls,b.inputElCls=a.emptyInputCls):(b.emptyText="",b.emptyCls=a.emptyInputCls,b.inputElCls=""),b},afterRender:function(){var a=this;Ext.supports.Placeholder&&a.inputEl&&a.emptyText&&delete a.inputEl.dom.placeholder,a.bodyEl.applyStyles("vertical-align:top"),a.grow&&(Ext.isNumber(a.growMin)&&a.growMin>0&&a.listWrapper.applyStyles("min-height:"+a.growMin+"px"),Ext.isNumber(a.growMax)&&a.growMax>0&&a.listWrapper.applyStyles("max-height:"+a.growMax+"px")),a.stacked===!0&&a.itemList.addCls("x-boxselect-stacked"),a.multiSelect||a.itemList.addCls("x-boxselect-singleselect"),a.applyMultiselectItemMarkup(),a.callParent(arguments)},findRecord:function(a,b){var c,d=this.store;return d?(c=d.queryBy(function(c){return c.isEqual(c.get(a),b)}),c.getCount()>0?c.first():!1):!1},onLoad:function(){var a=this,b=a.valueField,c=a.valueStore,d=!1;c&&(Ext.isEmpty(a.value)||0!=c.getCount()||a.setValue(a.value,!1,!0),c.suspendEvents(),c.each(function(e){var f=a.findRecord(b,e.get(b)),g=f?c.indexOf(e):-1;g>=0&&(c.removeAt(g),c.insert(g,f),d=!0)}),c.resumeEvents(),d&&c.fireEvent("datachanged",c)),a.callParent(arguments)},isFilteredRecord:function(a){var b,c=this,d=c.store,e=c.valueField,f=!1;return b=d.findExact(e,a.get(e)),f=-1===b&&(!d.snapshot||c.findRecord(e,a.get(e))!==!1),f=f||!f&&-1===b&&c.forceSelection!==!0&&c.valueStore.findExact(e,a.get(e))>=0},doRawQuery:function(){var a=this,b=a.inputEl.dom.value;a.multiSelect&&(b=b.split(a.delimiter).pop()),this.doQuery(b,!1,!0)},onBeforeListRefresh:function(){this.ignoreSelection++},onListRefresh:function(){this.callParent(arguments),this.ignoreSelection>0&&--this.ignoreSelection},onListSelectionChange:function(a,b){var c,d=this,e=d.valueStore,f=[];d.ignoreSelection<=0&&d.isExpanded&&(e.each(function(a){(Ext.Array.contains(b,a)||d.isFilteredRecord(a))&&f.push(a)}),f=Ext.Array.merge(f,b),c=Ext.Array.intersect(f,e.getRange()).length,(c!=f.length||c!=d.valueStore.getCount())&&(d.setValue(f,!1),d.multiSelect&&d.pinList||Ext.defer(d.collapse,1,d),e.getCount()>0&&d.fireEvent("select",d,e.getRange())),d.inputEl.focus(),d.pinList||(d.inputEl.dom.value=""),d.selectOnFocus&&d.inputEl.dom.select())},syncSelection:function(){var a,b,c,d=this,e=d.picker,f=d.valueField;e&&(a=e.store,b=[],d.valueStore&&d.valueStore.each(function(c){var d=a.findExact(f,c.get(f));d>=0&&b.push(a.getAt(d))}),d.ignoreSelection++,c=e.getSelectionModel(),c.deselectAll(),b.length>0&&c.select(b),d.ignoreSelection>0&&--d.ignoreSelection)},doAlign:function(){var a,b=this,c=b.picker,d="-above";b.picker.alignTo(b.listWrapper,b.pickerAlign,b.pickerOffset),a=c.el.getY()<b.inputEl.getY(),b.bodyEl[a?"addCls":"removeCls"](b.openCls+d),c[a?"addCls":"removeCls"](c.baseCls+d)},alignPicker:function(){var a=this,b=a.picker,c=b.getTargetEl().dom.scrollTop;a.callParent(arguments),a.isExpanded&&(a.matchFieldWidth&&b.setWidth(a.listWrapper.getWidth()),b.getTargetEl().dom.scrollTop=c)},getCursorPosition:function(){var a;return Ext.isIE?(a=document.selection.createRange(),a.collapse(!0),a.moveStart("character",-this.inputEl.dom.value.length),a=a.text.length):a=this.inputEl.dom.selectionStart,a},hasSelectedText:function(){var a,b;return Ext.isIE?(a=document.selection,b=a.createRange(),b.parentElement()==this.inputEl.dom):this.inputEl.dom.selectionStart!=this.inputEl.dom.selectionEnd},onKeyDown:function(a){var b=this,c=a.getKey(),d=b.inputEl.dom.value,e=b.valueStore,f=b.selectionModel,g=!1;if(!b.readOnly&&!b.disabled&&b.editable){if(b.isExpanded&&c==a.A&&a.ctrlKey)b.select(b.getStore().getRange()),f.setLastFocused(null),f.deselectAll(),b.collapse(),b.inputEl.focus(),g=!0;else if(e.getCount()>0&&(""==d||0===b.getCursorPosition()&&!b.hasSelectedText())){var h=f.getCount()>0?e.indexOf(f.getLastSelected()||f.getLastFocused()):-1;c==a.BACKSPACE||c==a.DELETE?(h>-1?(f.getCount()>1&&(h=-1),b.valueStore.remove(f.getSelection())):b.valueStore.remove(b.valueStore.last()),f.clearSelections(),b.setValue(b.valueStore.getRange()),h>0&&f.select(h-1),g=!0):c==a.RIGHT||c==a.LEFT?-1==h&&c==a.LEFT?(f.select(e.last()),g=!0):h>-1&&(c==a.RIGHT?h<e.getCount()-1?(f.select(h+1,a.shiftKey),g=!0):a.shiftKey||(f.setLastFocused(null),f.deselectAll(),g=!0):c==a.LEFT&&h>0&&(f.select(h-1,a.shiftKey),g=!0)):c==a.A&&a.ctrlKey&&(f.selectAll(),g=a.A),b.inputEl.focus()}if(g)return b.preventKeyUpEvent=g,void a.stopEvent();b.isExpanded&&c==a.ENTER&&b.picker.highlightedItem&&(b.preventKeyUpEvent=!0),b.enableKeyEvents&&b.callParent(arguments),a.isSpecialKey()||a.hasModifier()||(b.selectionModel.setLastFocused(null),b.selectionModel.deselectAll(),b.inputEl.focus())}},onKeyUp:function(a,b){var c=this,d=c.inputEl.dom.value;return c.preventKeyUpEvent?(a.stopEvent(),void((c.preventKeyUpEvent===!0||a.getKey()===c.preventKeyUpEvent)&&delete c.preventKeyUpEvent)):((c.multiSelect&&c.delimiterRegexp&&c.delimiterRegexp.test(d)||c.createNewOnEnter===!0&&a.getKey()==a.ENTER)&&(d=Ext.Array.clean(d.split(c.delimiterRegexp)),c.inputEl.dom.value="",c.setValue(c.valueStore.getRange().concat(d)),c.inputEl.focus()),void c.callParent([a,b]))},onPaste:function(a){var b=this,c=b.inputEl.dom.value,d=a&&a.browserEvent&&a.browserEvent.clipboardData?a.browserEvent.clipboardData:!1;b.multiSelect&&b.delimiterRegexp&&b.delimiterRegexp.test(c)&&(d&&d.getData&&(/text\/plain/.test(d.types)?c=d.getData("text/plain"):/text\/html/.test(d.types)&&(c=d.getData("text/html"))),c=Ext.Array.clean(c.split(b.delimiterRegexp)),b.inputEl.dom.value="",b.setValue(b.valueStore.getRange().concat(c)),b.inputEl.focus())},onExpand:function(){var a=this,b=a.listKeyNav;a.callParent(arguments),!b&&a.filterPickList&&(b=a.listKeyNav,b.highlightAt=function(a){var b,c=this.boundList,d=c.all.item(a),e=c.all.getCount();if(d&&d.hasCls("x-boundlist-selected")){b=0==a||!c.highlightedItem||c.indexOf(c.highlightedItem)<a?1:-1;do a+=b,d=c.all.item(a);while(a>0&&e>a&&d.hasCls("x-boundlist-selected"));if(d.hasCls("x-boundlist-selected"))return}d&&(d=d.dom,c.highlightItem(d),c.getTargetEl().scrollChildIntoView(d,!1))})},onTypeAhead:function(){var a,b,c,d,e=this,f=e.displayField,g=e.inputEl.dom,h=e.valueStore,i=e.getPicker();if(e.filterPickList){var j=this.createFilterFn(f,g.value);a=e.store.findBy(function(a){return-1===h.indexOfId(a.getId())&&j(a)}),a=-1===a?!1:e.store.getAt(a)}else a=e.store.findRecord(f,g.value);a&&(b=a.get(f),c=b.length,d=g.value.length,i.highlightItem(i.getNode(a)),0!==d&&d!==c&&(g.value=b,e.selectText(d,b.length)))},onItemListClick:function(a){var b=this,c=a.getTarget(".x-boxselect-item"),d=c?a.getTarget(".x-boxselect-item-close"):!1;b.readOnly||b.disabled||(a.stopPropagation(),c?(d?(b.removeByListItemNode(c),b.valueStore.getCount()>0&&b.fireEvent("select",b,b.valueStore.getRange())):b.toggleSelectionByListItemNode(c,a.shiftKey),b.inputEl.focus()):(b.selectionModel.getCount()>0&&(b.selectionModel.setLastFocused(null),b.selectionModel.deselectAll()),b.triggerOnClick&&b.onTriggerClick()))},getMultiSelectItemMarkup:function(){var a=this;return a.multiSelectItemTpl||(a.labelTpl?(Ext.isString(a.labelTpl)||Ext.isArray(a.labelTpl))&&(a.labelTpl=Ext.create("Ext.XTemplate",a.labelTpl)):a.labelTpl=Ext.create("Ext.XTemplate","{[values."+a.displayField+"]}"),a.multiSelectItemTpl=['<tpl for=".">','<li class="x-boxselect-item ','<tpl if="this.isSelected(values.'+a.valueField+')">'," selected","</tpl>",'" qtip="{[typeof values === "string" ? values : values.'+a.displayField+']}">','<div class="x-boxselect-item-text">{[typeof values === "string" ? values : this.getItemLabel(values)]}</div>','<div class="x-tab-close-btn x-boxselect-item-close"></div>',"</li>","</tpl>",{compile:!0,disableFormats:!0,isSelected:function(b){var c=a.valueStore.findExact(a.valueField,b);return c>=0?a.selectionModel.isSelected(a.valueStore.getAt(c)):!1},getItemLabel:function(b){return a.getTpl("labelTpl").apply(b)}}]),this.getTpl("multiSelectItemTpl").apply(Ext.Array.pluck(this.valueStore.getRange(),"data"))},applyMultiselectItemMarkup:function(){var a,b=this,c=b.itemList;if(c){for(;null!=(a=b.inputElCt.prev());)a.remove();b.inputElCt.insertHtml("beforeBegin",b.getMultiSelectItemMarkup())}Ext.Function.defer(function(){b.picker&&b.isExpanded&&b.alignPicker(),b.hasFocus&&b.inputElCt&&b.listWrapper&&b.inputElCt.scrollIntoView(b.listWrapper)},15)},getRecordByListItemNode:function(a){for(var b=this,c=0,d=b.itemList.dom.firstChild;d&&d.nextSibling&&d!=a;)c++,d=d.nextSibling;return c=d==a?c:!1,c===!1?!1:b.valueStore.getAt(c)},toggleSelectionByListItemNode:function(a,b){var c=this,d=c.getRecordByListItemNode(a),e=c.selectionModel;d&&(e.isSelected(d)?(e.isFocused(d)&&e.setLastFocused(null),e.deselect(d)):e.select(d,b))},removeByListItemNode:function(a){var b=this,c=b.getRecordByListItemNode(a);c&&(b.valueStore.remove(c),b.setValue(b.valueStore.getRange()))},getRawValue:function(){var a,b=this,c=b.inputEl;return b.inputEl=!1,a=b.callParent(arguments),b.inputEl=c,a},setRawValue:function(a){var b,c=this,d=c.inputEl;return c.inputEl=!1,b=c.callParent([a]),c.inputEl=d,b},addValue:function(a){var b=this;a&&b.setValue(Ext.Array.merge(b.value,Ext.Array.from(a)))},removeValue:function(a){var b=this;a&&b.setValue(Ext.Array.difference(b.value,Ext.Array.from(a)))},setValue:function(a,b,c){var d,e,f,g,h=this,i=h.valueStore,j=h.valueField,k=[];for(Ext.isEmpty(a)&&(a=null),Ext.isString(a)&&h.multiSelect&&(a=a.split(h.delimiter)),a=Ext.Array.from(a,!0),f=0,e=a.length;e>f;f++)d=a[f],d&&d.isModel||(g=i.findExact(j,d),g>=0?a[f]=i.getAt(g):(g=h.findRecord(j,d),g||(h.forceSelection?k.push(d):(g={},g[h.valueField]=d,g[h.displayField]=d,g=new h.valueStore.model(g))),g&&(a[f]=g)));if(c!==!0&&k.length>0&&"remote"===h.queryMode){var l={};return l[h.valueParam||h.valueField]=k.join(h.delimiter),h.store.load({params:l,callback:function(){h.itemList&&h.itemList.unmask(),h.setValue(a,b,!0),h.autoSize(),h.lastQuery=!1}}),!1}if(!h.multiSelect&&a.length>0){for(f=a.length-1;f>=0;f--)if(a[f].isModel){a=a[f];break}Ext.isArray(a)&&(a=a[a.length-1])}return h.callParent([a,b])},getValueRecords:function(){return this.valueStore.getRange()},getSubmitData:function(){var a=this,b=a.callParent(arguments);return a.multiSelect&&a.encodeSubmitValue&&b&&b[a.name]&&(b[a.name]=Ext.encode(b[a.name])),b},mimicBlur:function(){var a=this;a.selectOnTab&&a.picker&&a.picker.highlightedItem&&(a.inputEl.dom.value=""),a.callParent(arguments)},assertValue:function(){var a=this,b=a.inputEl.dom.value,c=Ext.isEmpty(b)?!1:a.findRecordByDisplay(b),d=!1;c||a.forceSelection||!a.createNewOnBlur||Ext.isEmpty(b)?c&&(d=c):d=b,d&&a.addValue(d),a.inputEl.dom.value="",a.collapse()},checkChange:function(){if(!this.suspendCheckChange&&!this.isDestroyed){var a=this,b=a.valueStore,c=a.lastValue||"",d=a.valueField,e=Ext.Array.map(Ext.Array.from(a.value),function(a){return a.isModel?a.get(d):a},this).join(this.delimiter),f=a.isEqual(e,c);(!f||e.length>0&&b.getCount()<e.length)&&(b.suspendEvents(),b.removeAll(),Ext.isArray(a.valueModels)&&b.add(a.valueModels),b.resumeEvents(),b.fireEvent("datachanged",b),f||(a.lastValue=e,a.fireEvent("change",a,e,c),a.onChange(e,c)))}},isEqual:function(a,b){var c,d,e,f,g=Ext.Array.from,h=this.valueField;if(a=g(a),b=g(b),d=a.length,d!==b.length)return!1;for(c=0;d>c;c++)if(e=a[c].isModel?a[c].get(h):a[c],f=b[c].isModel?b[c].get(h):b[c],e!==f)return!1;return!0},applyEmptyText:function(){var a,b,c=this,d=c.emptyText;c.rendered&&d&&(b=Ext.isEmpty(c.value)&&!c.hasFocus,a=c.inputEl,b?(a.dom.value="",c.emptyEl.update(d),c.emptyEl.addCls(c.emptyCls),c.emptyEl.removeCls(c.emptyInputCls),c.listWrapper.addCls(c.emptyCls),c.inputEl.addCls(c.emptyInputCls)):(c.emptyEl.addCls(c.emptyInputCls),c.emptyEl.removeCls(c.emptyCls),c.listWrapper.removeCls(c.emptyCls),c.inputEl.removeCls(c.emptyInputCls)),c.autoSize())},preFocus:function(){var a=this,b=a.inputEl,c=(a.emptyText,""==b.dom.value);a.emptyEl.addCls(a.emptyInputCls),a.emptyEl.removeCls(a.emptyCls),a.listWrapper.removeCls(a.emptyCls),a.inputEl.removeCls(a.emptyInputCls),(a.selectOnFocus||c)&&b.dom.select()},onFocus:function(){var a=this,b=a.focusCls,c=a.itemList;b&&c&&c.addCls(b),a.callParent(arguments)},onBlur:function(){var a=this,b=a.focusCls,c=a.itemList;b&&c&&c.removeCls(b),a.callParent(arguments)},renderActiveError:function(){var a=this,b=a.invalidCls,c=a.itemList,d=a.hasActiveError();b&&c&&c[d?"addCls":"removeCls"](a.invalidCls+"-field"),a.callParent(arguments)},autoSize:function(){var a=this;return a.grow&&a.rendered&&(a.autoSizing=!0,a.updateLayout()),a},afterComponentLayout:function(){var a=this;a.autoSizing&&(height=a.getHeight(),height!==a.lastInputHeight&&(a.isExpanded&&a.alignPicker(),a.fireEvent("autosize",a,height),a.lastInputHeight=height,delete a.autoSizing))}}),Ext.define("Ext.ux.layout.component.field.BoxSelectField",{alias:["layout.boxselectfield"],extend:"Ext.layout.component.field.Trigger",type:"boxselectfield",waitForOuterWidthInDom:!0,beginLayout:function(a){var b=this,c=b.owner;b.callParent(arguments),a.inputElCtContext=a.getEl("inputElCt"),c.inputElCt.setStyle("width",""),b.skipInputGrowth=!c.grow||!c.multiSelect},beginLayoutFixed:function(a){var b=this,c=a.target;c.triggerEl.setStyle("height","24px"),b.callParent(arguments),a.heightModel.fixed&&a.lastBox&&(c.listWrapper.setStyle("height",a.lastBox.height+"px"),c.itemList.setStyle("height","100%"))},publishInnerWidth:function(){}}),Ext.define("App.view.patient.windows.CCDImportPreview",{extend:"Ext.window.Window",xtype:"ccdimportpreviewwindow",title:_("reconciled_preview"),bodyStyle:"background-color:#fff",modal:!0,layout:{type:"vbox",align:"stretch"},width:750,maxHeight:800,autoScroll:!0,bodyPadding:5,defaults:{xtype:"grid",height:123,frame:!0,hideHeaders:!0,columnLines:!0,multiSelect:!0,disableSelection:!0,margin:"0 0 5 0"},dockedItems:[{xtype:"toolbar",dock:"bottom",ui:"footer",items:["->",{text:_("import"),minWidth:70,itemId:"CcdImportPreviewWindowImportBtn"},"-",{text:_("cancel"),minWidth:70,itemId:"CcdImportPreviewWindowCancelBtn"}]}],initComponent:function(){var a=this;a.items=[{xtype:"form",frame:!0,title:_("patient"),itemId:"CcdImportPreviewPatientForm",flex:1,height:145,autoScroll:!0,layout:"column",items:[{xtype:"container",defaults:{xtype:"displayfield",labelWidth:45,labelAlign:"right",margin:0},columnWidth:.5,items:[{fieldLabel:_("rec_num"),name:"record_number"},{fieldLabel:_("name"),name:"name"},{fieldLabel:_("sex"),name:"sex"},{fieldLabel:_("dob"),name:"DOBFormatted"},{fieldLabel:_("race"),name:"race_text"}]},{xtype:"container",defaults:{xtype:"displayfield",labelWidth:60,labelAlign:"right",margin:0},columnWidth:.5,items:[{fieldLabel:_("ethnicity"),name:"ethnicity_text"},{fieldLabel:_("language"),name:"language"},{fieldLabel:_("address"),name:"fulladdress",value:"fulladdress"},{fieldLabel:_("phones"),name:"phones",value:"000-000-000 (H)"}]}]},{title:_("active_problems"),store:Ext.create("App.store.patient.PatientActiveProblems"),itemId:"CcdImportPreviewActiveProblemsGrid",columns:[{dataIndex:"code_text",flex:1,renderer:a.importedRenderer},{dataIndex:"begin_date",width:100,renderer:a.importedRenderer},{dataIndex:"end_date",width:100,renderer:a.importedRenderer},{dataIndex:"status",width:60,renderer:a.importedRenderer}]},{title:_("medications"),store:Ext.create("App.store.patient.Medications"),itemId:"CcdImportPreviewMedicationsGrid",columns:[{dataIndex:"STR",flex:1,renderer:a.importedRenderer},{dataIndex:"begin_date",width:100,renderer:a.importedRenderer},{dataIndex:"end_date",width:100,renderer:a.importedRenderer}]},{title:_("allergies"),store:Ext.create("App.store.patient.Allergies"),itemId:"CcdImportPreviewAllergiesGrid",margin:0,columns:[{dataIndex:"allergy",flex:1,renderer:a.importedRenderer},{dataIndex:"reaction",width:150,renderer:a.importedRenderer},{dataIndex:"severity",width:100,renderer:a.importedRenderer},{dataIndex:"status",width:60,renderer:a.importedRenderer}]}],a.callParent()},importedRenderer:function(a,b,c){return c.data.id&&0!==c.data.id||(b.tdCls="btnBlueBackground"),Ext.isDate(a)?Ext.Date.format(a,g("date_display_format")):a}}),Ext.define("App.view.patient.windows.CCDImport",{extend:"Ext.window.Window",requires:["App.view.patient.windows.CCDImportPreview"],xtype:"ccdimportwindow",title:_("ccd_viewer_and_import"),bodyStyle:"background-color:#fff",modal:!0,layout:{type:"vbox",align:"stretch"},width:1500,maxHeight:800,autoScroll:!0,ccdData:null,items:[{xtype:"container",layout:"column",padding:5,items:[{xtype:"panel",title:_("import_data"),columnWidth:.5,frame:!0,margin:"0 5 0 0",layout:{type:"vbox",align:"stretch"},defaults:{xtype:"grid",height:123,frame:!0,hideHeaders:!0,columnLines:!0,multiSelect:!0,margin:"0 0 5 0"},items:[{xtype:"form",frame:!0,title:_("patient"),itemId:"CcdImportPatientForm",flex:1,height:148,autoScroll:!0,layout:"column",items:[{xtype:"container",defaults:{xtype:"displayfield",labelWidth:45,labelAlign:"right",margin:0},columnWidth:.5,items:[{fieldLabel:_("rec_num"),name:"record_number"},{fieldLabel:_("name"),name:"name"},{fieldLabel:_("sex"),name:"sex"},{fieldLabel:_("dob"),name:"DOBFormatted"},{fieldLabel:_("race"),name:"race_text"}]},{xtype:"container",defaults:{xtype:"displayfield",labelWidth:60,labelAlign:"right",margin:0},columnWidth:.5,items:[{fieldLabel:_("ethnicity"),name:"ethnicity_text"},{fieldLabel:_("language"),name:"language"},{fieldLabel:_("address"),name:"fulladdress"},{fieldLabel:_("phones"),name:"phones"}]}]},{title:_("active_problems"),store:Ext.create("App.store.patient.PatientActiveProblems"),itemId:"CcdImportActiveProblemsGrid",selType:"checkboxmodel",columns:[{dataIndex:"code_text",flex:1},{xtype:"datecolumn",dataIndex:"begin_date",width:100,format:g("date_display_format")},{xtype:"datecolumn",dataIndex:"end_date",width:100,format:g("date_display_format")},{dataIndex:"status",width:60}]},{title:_("medications"),store:Ext.create("App.store.patient.Medications"),itemId:"CcdImportMedicationsGrid",selType:"checkboxmodel",columns:[{dataIndex:"STR",flex:1},{xtype:"datecolumn",dataIndex:"begin_date",width:100,format:g("date_display_format")},{xtype:"datecolumn",dataIndex:"end_date",width:100,format:g("date_display_format")}]},{title:_("allergies"),store:Ext.create("App.store.patient.Allergies"),itemId:"CcdImportAllergiesGrid",selType:"checkboxmodel",margin:0,columns:[{dataIndex:"allergy",flex:1},{dataIndex:"reaction",width:150},{dataIndex:"severity",width:100},{dataIndex:"status",width:60}]}]},{xtype:"panel",title:_("system_data_ro"),columnWidth:.5,frame:!0,layout:{type:"vbox",align:"stretch"},tools:[{xtype:"patienlivetsearch",emptyText:_("import_and_merge_with")+"...",itemId:"CcdImportWindowPatientSearchField",width:300,height:18}],defaults:{xtype:"grid",height:123,frame:!0,hideHeaders:!0,columnLines:!0,multiSelect:!0,disableSelection:!0,margin:"0 0 5 0"},items:[{xtype:"form",frame:!0,title:_("patient"),itemId:"CcdPatientPatientForm",flex:1,height:146,autoScroll:!0,layout:"column",items:[{xtype:"container",defaults:{xtype:"displayfield",labelWidth:45,labelAlign:"right",margin:0},columnWidth:.5,items:[{fieldLabel:_("rec_num"),name:"record_number"},{fieldLabel:_("name"),name:"name"},{fieldLabel:_("sex"),name:"sex"},{fieldLabel:_("dob"),name:"DOBFormatted"},{fieldLabel:_("race"),name:"race_text"}]},{xtype:"container",defaults:{xtype:"displayfield",labelWidth:60,labelAlign:"right",margin:0},columnWidth:.5,items:[{fieldLabel:_("ethnicity"),name:"ethnicity_text"},{fieldLabel:_("language"),name:"language"},{fieldLabel:_("address"),name:"fulladdress"},{fieldLabel:_("phones"),name:"phones"}]}]},{title:_("active_problems"),store:Ext.create("App.store.patient.PatientActiveProblems"),itemId:"CcdPatientActiveProblemsGrid",columns:[{dataIndex:"code_text",flex:1},{xtype:"datecolumn",dataIndex:"begin_date",width:100,format:g("date_display_format")},{xtype:"datecolumn",dataIndex:"end_date",width:100,format:g("date_display_format")},{dataIndex:"status",width:60}]},{title:_("medications"),store:Ext.create("App.store.patient.Medications"),itemId:"CcdPatientMedicationsGrid",columns:[{dataIndex:"STR",flex:1},{xtype:"datecolumn",dataIndex:"begin_date",width:100,format:g("date_display_format")},{xtype:"datecolumn",dataIndex:"end_date",width:100,format:g("date_display_format")}]},{title:_("allergies"),store:Ext.create("App.store.patient.Allergies"),itemId:"CcdPatientAllergiesGrid",margin:0,columns:[{dataIndex:"allergy",flex:1},{dataIndex:"reaction",width:150},{dataIndex:"severity",width:100},{dataIndex:"status",width:60}]}]}]}],dockedItems:[{xtype:"toolbar",dock:"bottom",ui:"footer",items:[{text:_("view_raw_ccd"),itemId:"CcdImportWindowViewRawCcdBtn"},"->",{xtype:"checkboxfield",fieldLabel:_("select_all"),labelWidth:55,labelAlign:"right",itemId:"CcdImportWindowSelectAllField"},"-",{text:_("preview"),minWidth:70,itemId:"CcdImportWindowPreviewBtn"},"-",{text:_("close"),minWidth:70,itemId:"CcdImportWindowCloseBtn"}]}]}),Ext.define("App.ux.combo.Departments",{extend:"Ext.form.ComboBox",xtype:"depatmentscombo",editable:!1,queryMode:"local",valueField:"id",displayField:"title",emptyText:_("select"),store:Ext.create("App.store.administration.Departments",{autoLoad:!0})}),Ext.define("App.model.patient.ProgressNotesHistory",{extend:"Ext.data.Model",fields:[{name:"service_date",type:"date"},{name:"brief_description",type:"string"},{name:"subjective",type:"string"},{name:"objective",type:"string"},{name:"assessment",type:"string"},{name:"plan",type:"string"},{name:"progress",type:"string",convert:function(a,b){var c="";return c+="<b>"+_("service_date")+":</b> "+Ext.Date.format(b.data.service_date,g("date_time_display_format"))+"<br>",c+="<b>"+_("chief_complaint")+":</b> "+Ext.String.htmlDecode(b.data.brief_description)+"<br>",c+="<b>"+_("subjective")+":</b> "+Ext.String.htmlDecode(b.data.subjective)+"<br>",c+="<b>"+_("objective")+":</b> "+Ext.String.htmlDecode(b.data.objective)+"<br>",c+="<b>"+_("assessment")+":</b> "+Ext.String.htmlDecode(b.data.assessment)+"<br>",c+="<b>"+_("plan")+":</b> "+Ext.String.htmlDecode(b.data.plan)+"<br>"}}],proxy:{type:"direct",api:{read:"Encounter.getSoapHistory"}}}),Ext.define("App.store.patient.ProgressNotesHistory",{extend:"Ext.data.Store",requires:["App.model.patient.ProgressNotesHistory"],model:"App.model.patient.ProgressNotesHistory",remoteFilter:!1}),Ext.define("App.store.administration.TemplatePanels",{model:"App.model.administration.TemplatePanel",extend:"Ext.data.Store"}),Ext.define("App.view.patient.windows.TemplatePanels",{extend:"App.ux.window.Window",title:_("templates"),closeAction:"hide",layout:"fit",modal:!0,width:600,height:300,itemId:"TemplatePanelsWindow",bodyPadding:5,tbar:[{xtype:"combobox",store:Ext.create("App.store.administration.TemplatePanels"),displayField:"description",valueField:"id",itemId:"TemplatePanelsCombo",width:300,editable:!1,allowBlank:!1,queryMode:"local"}],items:[{xtype:"grid",frame:!0,itemId:"TemplatePanelsGrid",selType:"checkboxmodel",features:[{ftype:"grouping",groupHeaderTpl:"{name}",collapsible:!1}],columns:[{text:_("description"),dataIndex:"description",flex:1,sortable:!1,groupable:!1,hideable:!1,menuDisabled:!0}]}],buttons:[{text:_("add"),itemId:"TemplatePanelsAddBtn"},{text:_("cancel"),itemId:"TemplatePanelsCancelBtn"}]});